---
# Source: bigbang/templates/istio-crds/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: istio-system
  labels:
    istio-base-managed: Reconcile
    istio-injection: disabled
    app.kubernetes.io/name: istio-system
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
---
# Source: bigbang/templates/istio-crds/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: istio-gateway
  labels:
    istio-gateway-managed: Reconcile
    istio-injection: enabled
    app.kubernetes.io/name: istio-gateway
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
---
# Source: bigbang/templates/kiali/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: kiali
  labels:
    istio-injection: enabled
    app.kubernetes.io/name: kiali
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
---
# Source: bigbang/templates/kyverno-reporter/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/name: kyverno-reporter
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
    istio-injection: enabled
  name: kyverno-reporter
---
# Source: bigbang/templates/kyverno/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/name: kyverno
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
    istio-injection: disabled
  name: kyverno
---
# Source: bigbang/templates/loki/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: logging
  labels:
    app.kubernetes.io/name: logging
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
    istio-injection: enabled
---
# Source: bigbang/templates/minio-operator/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: minio-operator
  labels:
    istio-injection: enabled
    app.kubernetes.io/name: minioOperator
    app.kubernetes.io/component: "application-utilities"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
---
# Source: bigbang/templates/monitoring/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
  labels:
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
    istio-injection: enabled
---
# Source: bigbang/templates/neuvector/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: neuvector
  labels:
    app.kubernetes.io/name: neuvector
    app.kubernetes.io/component: "sandbox"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
    istio-injection: enabled
---
# Source: bigbang/templates/promtail/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: promtail
  labels:
    app.kubernetes.io/name: promtail
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
    istio-injection: enabled
---
# Source: bigbang/templates/tempo/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: tempo
  labels:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
    istio-injection: enabled
---
# Source: bigbang/templates/grafana/flux/ingress-flux.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-from-flux
  namespace: monitoring
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: grafana
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: notification-controller
      namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: flux-system
    ports:
    - port: 3000
      protocol: TCP
---
# Source: bigbang/templates/grafana/flux/grafana-auth-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: grafana-flux-auth
  namespace: monitoring
  labels:
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
type: kubernetes.io/opaque
stringData:
  username: admin
  password: prom-operator
---
# Source: bigbang/templates/grafana/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: bigbang-grafana-values
  namespace: bigbang
type: generic
stringData:
  common: ""
  defaults:
    "\n# hostname is deprecated and replaced with domain. But if hostname exists then
      use it.\nhostname: dev.bigbang.mil\ndomain: dev.bigbang.mil\n\nflux:\n  enabled:
      true\n\nnetworkPolicies:\n  enabled: true\n  istioNamespaceSelector:\n  \n    ingress:
      istio-gateway\n    egress: istio-system\n  controlPlaneCidr: 0.0.0.0/0\n  ingressLabels:\n
      \   app: public-ingressgateway\n    istio: ingressgateway\n\nopenshift: false\n\nminioOperator:\n
      \ enabled: true\n\ngitlabRunner:\n  enabled: false\n\nistio:\n  enabled: true\n
      \ hardened:\n    enabled: false\n  grafana:\n    enabled: true\n    gateways:\n
      \     - istio-gateway/public-ingressgateway\n  injection: enabled\n\nanchore:\n
      \ enabled: false\n\nkiali:\n  enabled: true\n\nloki:\n  enabled: true\n\ntempo:\n
      \ enabled: true\n\nvault:\n  enabled: false\n  tlsDisable: false\n\nsso:\n  enabled:
      false\nenv:\n  GF_FEATURE_TOGGLES_ENABLE: \"traceqlEditor tempoSearch tempoServiceGraph\"\n\nimage:\n
      \ pullPolicy: IfNotPresent\n  pullSecrets:\n  - private-registry\nsidecar:\n  imagePullPolicy:
      IfNotPresent\npodAnnotations:\n  bigbang.dev/istioVersion: 1.25.3\ndatasources:\n
      \ datasourcesbb.yaml:\n    apiVersion: 1\n    datasources:\n    - name: Prometheus\n
      \     type: prometheus\n      uid: prometheus\n      access: proxy\n      url: http://monitoring-monitoring-kube-prometheus.monitoring.svc:9090\n
      \     editable: true\n    - name: Loki\n      type: loki\n      url: http://logging-loki-gateway.logging.svc.cluster.local\n
      \     access: proxy\n      editable: true\n      jsonData:\n        derivedFields:\n
      \         - datasourceName: Tempo\n            matcherRegex: \"traceID=(\\\\w+)\"\n
      \           name: TraceID\n            url: \"$${__value.raw}\"\n            datasourceUid:
      tempo\n    - name: Tempo\n      type: tempo\n      access: proxy\n      orgId: 1\n
      \     uid: tempo\n      url: http://tempo-tempo.tempo.svc:3100\n      isDefault:
      false\n      editable: true\n      jsonData:\n        httpMethod: GET\n        serviceMap:\n
      \         datasourceUid: 'prometheus'\n      jsonData:\n        httpMethod: GET\n
      \       tracesToLogs:\n          datasourceUid: 'Loki'\n          tags: ['job',
      'instance', 'pod', 'namespace']\n          mappedTags: [{ key: 'service.name', value:
      'service' }]\n          mapTagNamesEnabled: false\n          spanStartTimeShift:
      '1h'\n          spanEndTimeShift: '1h'\n          filterByTraceID: false\n          filterBySpanID:
      false\n        serviceMap:\n          datasourceUid: 'prometheus'\n        search:\n
      \         hide: false\n        nodeGraph:\n          enabled: true\n        lokiSearch:\n
      \         datasourceUid: 'Loki'\n\ngrafana.ini:\n  server:\n    root_url: https://grafana.dev.bigbang.mil/\n\n
      \ auth.generic_oauth:\n    enabled: false\n    name: SSO                    \nextraSecretMounts:\nserviceMonitor:\n
      \ enabled: true\n  scheme: https\n  tlsConfig:\n    caFile: /etc/prom-certs/root-cert.pem\n
      \   certFile: /etc/prom-certs/cert-chain.pem\n    keyFile: /etc/prom-certs/key.pem\n
      \   insecureSkipVerify: true  # Prometheus does not support Istio security naming,
      thus skip verifying target pod certificate"
  overlays: |
    bbtests:
      cypress:
        envs:
          cypress_grafana_url: https://grafana.dev.bigbang.mil
      enabled: true
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
        - disableDeletion: false
          editable: true
          folder: ""
          name: default
          options:
            path: /var/lib/grafana/dashboards
          orgId: 1
          type: file
    dashboards:
      default:
        k8s-deployment:
          datasource: Prometheus
          gnetId: 741
          revision: 1
    istio:
      hardened:
        customServiceEntries:
        - enabled: true
          name: cypress-service-entries-grafana
          spec:
            hosts:
            - registry.npmjs.org
            - download.cypress.io
            - cdn.cypress.io
            - repo1.dso.mil
            - grafana.dev.bigbang.mil
            location: MESH_EXTERNAL
            ports:
            - name: https
              number: 443
              protocol: TLS
            resolution: DNS
---
# Source: bigbang/templates/istio-crds/imagepullsecret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: private-registry
  namespace: istio-system
  labels:
    app.kubernetes.io/name: istiod
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeTEuZHNvLm1pbCI6eyJ1c2VybmFtZSI6ImdtaWVybmlja2kiLCJwYXNzd29yZCI6IjRjZHp1RU8zRyIsImVtYWlsIjoiIiwiYXV0aCI6IloyMXBaWEp1YVdOcmFUbzBZMlI2ZFVWUE0wYz0ifX19
---
# Source: bigbang/templates/istio-crds/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: bigbang-istio-crds-values
  namespace: bigbang
type: generic
stringData:
  common: ""
  defaults:
    |-
      upstream:
        global:
          imagePullSecrets:
            - private-registry
  overlays: |
    {}
---
# Source: bigbang/templates/istio-gateway/imagepullsecret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: private-registry
  namespace: istio-gateway
  labels:
    app.kubernetes.io/name: private-registry
    app.kubernetes.io/component: istio-gateway
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeTEuZHNvLm1pbCI6eyJ1c2VybmFtZSI6ImdtaWVybmlja2kiLCJwYXNzd29yZCI6IjRjZHp1RU8zRyIsImVtYWlsIjoiIiwiYXV0aCI6IloyMXBaWEp1YVdOcmFUbzBZMlI2ZFVWUE0wYz0ifX19
---
# Source: bigbang/templates/istio-gateway/secret-tls.yaml
apiVersion: v1
kind: Secret
metadata:
  name: public-cert
  namespace: istio-gateway
  labels:
    app.kubernetes.io/name: istio-gateway-public
    app.kubernetes.io/component: core
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZJakNDQkFxZ0F3SUJBZ0lTQlhWQTUwdVQrWlM4SFhHS0RZckIrejcyTUEwR0NTcUdTSWIzRFFFQkN3VUEKTURNeEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUtFdzFNWlhRbmN5QkZibU55ZVhCME1Rd3dDZ1lEVlFRRApFd05TTVRBd0hoY05NalV3TkRJNU1USXpNRFUxV2hjTk1qVXdOekk0TVRJek1EVTBXakFjTVJvd0dBWURWUVFECkRCRXFMbVJsZGk1aWFXZGlZVzVuTG0xcGJEQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0MKZ2dFQkFMNXdNMFB3QWpUU3ZSYWlzenU4dHRKVkd3R1hicjV4aEJBREZBSVNnYmRRaktKaWlYZ3pvOWtTODlTYgoyaHVJelJucjhEMGx0dFNvUmZhYUtDazVQMzg3eldyNmdPdlMzbnlrN0dSeXFJZjg1QUpEbHFqRGRrdUZJai9qCkdKb21FOGQxK3NtUmFOTVNGYzM0MDRXcWFJelM1Y0xFNXJXeGE1L3pwKy9LeHUwMUNkUnkzTUVpMEdONkwwVDcKbkJiWkg4UUdtU1crQ0RCQ3VpaEk4KzYwMDlQZnJtbzNCOHdiZXMzYWZkWEhNYUZDZ0M2N3VVT1BYZmhUMGxveApVWDIraXFJVGlENlJMVElsc21NWnBycE5JT1pPUlQ5ampMektuY2R0OE43Uzc1NE43eng1dU1hZ0doa3RJelIwClFRN29ZVXZZQlQwa2NXeFNiUkdQRmFDdE8xRUNBd0VBQWFPQ0FrVXdnZ0pCTUE0R0ExVWREd0VCL3dRRUF3SUYKb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZApCZ05WSFE0RUZnUVU1OWwvSDl1VmJDZGhzS3JIMjhIVmgzSnJ4Q1V3SHdZRFZSMGpCQmd3Rm9BVXU3ekRSNlhrCnZLbkd3NlJ5REJDTm9qWGh5T2d3VndZSUt3WUJCUVVIQVFFRVN6QkpNQ0lHQ0NzR0FRVUZCekFCaGhab2RIUncKT2k4dmNqRXdMbTh1YkdWdVkzSXViM0puTUNNR0NDc0dBUVVGQnpBQ2hoZG9kSFJ3T2k4dmNqRXdMbWt1YkdWdQpZM0l1YjNKbkx6QWNCZ05WSFJFRUZUQVRnaEVxTG1SbGRpNWlhV2RpWVc1bkxtMXBiREFUQmdOVkhTQUVEREFLCk1BZ0dCbWVCREFFQ0FUQXZCZ05WSFI4RUtEQW1NQ1NnSXFBZ2hoNW9kSFJ3T2k4dmNqRXdMbU11YkdWdVkzSXUKYjNKbkx6RXhPUzVqY213d2dnRURCZ29yQmdFRUFkWjVBZ1FDQklIMEJJSHhBTzhBZGdDa1FzVUdTV0JoVkk4UAoxT3FjKzNvdEprVk5oNmwvTDk5RldmWW5UenFFVkFBQUFaYUJ2UEJBQUFBRUF3QkhNRVVDSUVHVGw2dmJ3WkxZCklXQ2QvSEZCN0RvTXcxeVVSdGUrNDg4cEY2OVM5Rm9pQWlFQXR5bmlkU00wWHcvOVJQZVRsbXFlWm9Ba0NMNHMKTlkrbXFLMDFJdEhhVFlvQWRRRGQzTW8wbGRmaEZnWG5sVEw2eDUvNFBSeFEzOXNBT2hRU2Rnb3NyTHZJS2dBQQpBWmFCdlBDSUFBQUVBd0JHTUVRQ0lCTVl0Y3VOVmdsSTRrM1NQamV1UHFlZUVDVXJoaTg5UkxWaVlpenlsaDlYCkFpQVVnaGFmcW1md1d4ZzdrRy9jQlFTbTlQV3M5SUk4SEcyUTZkZld6bzg0cnpBTkJna3Foa2lHOXcwQkFRc0YKQUFPQ0FRRUFNeHhHVWdpU3l2c0ROcll2cjVDUkg2eWdZbUhUMkdCV2w2TXVWbDUvdVhNS0lFSnRCMjd6SW9EMgppTnBVNzNzNlFBTkxnRlpDZnV5alNRc3hsWGdqNTdFZEN4dFpOZ3ZvRXVIa3ZQTEJ6ZkpQclk0a2JWWGF0d0hEClh6cEJJYkRkZlJiTDBQZWYvdGd2bzR4endTQ2tHVW5mUWhaRzBZVDc2a2ZVNDAySXV5SFdWcDFsbWFxS2h6STMKVHBLZUhrOENlekRjZnUyYXdaejJhYmUyRC9kQ2FUazNkUkVCdUE3QzRWVHlDTnJ3cllTL0ppY1o1THF6eEdjcwoxdVVtaGxWb0dZVjV0K29VUHRQckd4VElKZGpqeVMzZzFMSC9LSE5pK21aN1BLVVZ1SGtWQUlEZGNlaTByYjdhCm9EWGV3eGowa0lnQUtpZFB0cWt1ZWtVb0tkTHhEdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZCVENDQXUyZ0F3SUJBZ0lRUzZoU2svZWFMNkp6Qmt1b0JJMTEwREFOQmdrcWhraUc5dzBCQVFzRkFEQlAKTVFzd0NRWURWUVFHRXdKVlV6RXBNQ2NHQTFVRUNoTWdTVzUwWlhKdVpYUWdVMlZqZFhKcGRIa2dVbVZ6WldGeQpZMmdnUjNKdmRYQXhGVEFUQmdOVkJBTVRERWxUVWtjZ1VtOXZkQ0JZTVRBZUZ3MHlOREF6TVRNd01EQXdNREJhCkZ3MHlOekF6TVRJeU16VTVOVGxhTURNeEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUtFdzFNWlhRbmN5QkYKYm1OeWVYQjBNUXd3Q2dZRFZRUURFd05TTVRBd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFSwpBb0lCQVFEUFYrWG14RlFTN2JSSC9za25XSFpHVUNpTUhUNkkzd1dkMWJVWUtiM2R0VnEvK3ZiT283NnZBQ0ZMCllscGFQQUV2eFZnRDlvbi9qaEZENjhHMTRCUUhsbzl2SDlmbnVvRTVDWFZsdDhLdkdGczNKaWpuby9RSEsyMGEKLzZ0WXZKV3VRUC9weTFmRXRWdC9lQTBZWWJ3WDUxVEd1MG1Selc0WTBZQ0Y3cVpsTnJ4MDZyeFFUT3I4SWZNNApGcE9VdXJEVGF6Z0d6UllTZXNwU2RjaXRkckxDbkYyWVJWeHZZWHZHTGU0OEUxS0dBZGxYNWpnYzM0MjFINUtSCm11ZEtITXhGcUhKVjhMRG1vd2ZzL2FjYlpwNC9TSXR4aEhGWXlUcjY3MTd5VzBRclBIVG5qN0pId1FkcXpacTMKRFpiM0VvRW1VVlFLN0dIMjkvWGk4b3JJbFEyTkFnTUJBQUdqZ2Znd2dmVXdEZ1lEVlIwUEFRSC9CQVFEQWdHRwpNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01DQmdnckJnRUZCUWNEQVRBU0JnTlZIUk1CQWY4RUNEQUdBUUgvCkFnRUFNQjBHQTFVZERnUVdCQlM3dk1OSHBlUzhxY2JEcEhJTUVJMmlOZUhJNkRBZkJnTlZIU01FR0RBV2dCUjUKdEZubWU3Ymw1QUZ6Z0FpSXlCcFk5dW1iYmpBeUJnZ3JCZ0VGQlFjQkFRUW1NQ1F3SWdZSUt3WUJCUVVITUFLRwpGbWgwZEhBNkx5OTRNUzVwTG14bGJtTnlMbTl5Wnk4d0V3WURWUjBnQkF3d0NqQUlCZ1puZ1F3QkFnRXdKd1lEClZSMGZCQ0F3SGpBY29CcWdHSVlXYUhSMGNEb3ZMM2d4TG1NdWJHVnVZM0l1YjNKbkx6QU5CZ2txaGtpRzl3MEIKQVFzRkFBT0NBZ0VBa3JIblFUZnJlWjJCNXMzaUplRTZJT21RUkpXamdWelB3MTM5dmFCdzFiR1dLQ0lMMHZJbwp6d3puMU9aRGpDUWlIY0ZDa3RFSnI1OUw5TWh3VHlBV3NWcmRBZllmK0I5aGF4UW5zSEtOWTY3dTRzNUx6emZkCnU2UFV6ZWV0VUsyOXYrUHNQbUkyY0preHAraU4zZXBpNGhLdTlaelVQU3dNcXRDY2ViN3FQVnhFYnBZeFkxcDkKMW41UEpLQkxCWDllYjlMVTZsOHpTeFBXVjdiSzNsRzRYYU1KZ25UOXgzaWVzN21zRnRwS0s1YkR0b3Rpai9sMApHYUtlQTk3cGI1dXdEOUtnV3ZhRlhNSUV0OGpWVGpMRXZ3UmR2Q24yOTRHUERGMDhVOGxBa0l2N3RnaGx1YVFoCjFRbmxFNFNFTjRMT0VDajhkc0lHSlhwR1VrM2FVM0trSno5aWNLeSthVWdBKzJjUDIxdWg2TmNESVMzWHlmYVoKUWptRFE5OTNDaElJOFNYV3VwUVpWQmlJcGNXTzRScVprM2xyN0J6NU1VQ3d6RElBMzU5ZTU3U1NxNUNDa1kwTgo0QjZWdWxrN0xrdGZ3cmRHTlZJNUJzQzlxcXhTd1NLZ1JKZVo5d3lnSWFlaGJIRkhGaGNCYU1ES3BpWmxCSHl6CnJzbm5sRlhDYjVzOEhLbjVMc1VnR3ZCMjRMN3NHTlpQMkNYN2RoSG92K1loRCtqb3pMVzJwOVc0OTU5QnoyRWkKUm1xRHRtaVhMbnpxVHBYYkkrc3V5Q3NvaEtSZzZVbjBSQzQ3K2NwaVZ3SGlYWkFXK2NuOGVpTklqcWJWZ1hMeApLUHBkenZ2dFRuT1BsQzdTUVpTWW1kdW5yM0JmOWI3N0FpQy9aaWRzdEszNmRSSUxLejdPQTU0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktZd2dnU2lBZ0VBQW9JQkFRQytjRE5EOEFJMDByMFcKb3JNN3ZMYlNWUnNCbDI2K2NZUVFBeFFDRW9HM1VJeWlZb2w0TTZQWkV2UFVtOW9iaU0wWjYvQTlKYmJVcUVYMgptaWdwT1Q5L084MXErb0RyMHQ1OHBPeGtjcWlIL09RQ1E1YW93M1pMaFNJLzR4aWFKaFBIZGZySmtXalRFaFhOCitOT0ZxbWlNMHVYQ3hPYTFzV3VmODZmdnlzYnROUW5VY3R6Qkl0QmplaTlFKzV3VzJSL0VCcGtsdmdnd1Fyb28KU1BQdXROUFQzNjVxTndmTUczck4ybjNWeHpHaFFvQXV1N2xEajEzNFU5SmFNVkY5dm9xaUU0ZytrUzB5SmJKagpHYWE2VFNEbVRrVS9ZNHk4eXAzSGJmRGUwdStlRGU4OGViakdvQm9aTFNNMGRFRU82R0ZMMkFVOUpIRnNVbTBSCmp4V2dyVHRSQWdNQkFBRUNnZ0VBSDcxOW5lWWp5QUFUeWZFR0pIKzRqT2ZvWDJTSTdhN256dTlrWjFBRVZMUlYKTEQ5MklCV2pTbXZSUGU5WDg5emlLbDdicEtWamlxQWRRUlBDZTlSeDA5ZjR6Y3JBc0ExdVRhSURVRjZYM2twMQpDamVQcGNNbU5VSVVTa2VrY3hURG1Tdjl4NWkzdXU0NXVpR3R4NHAyY0hvNkZ6TlFMSnBNa05WQWVVUDMwZE1LCkxYSXVtNEl1cXZsYXIwblNBY0IwV2hKa0ltUENCek9RaGl2UUxwcHZDZ3hJT0ZlaTZVNGQwTlVwZ25GZkJlckYKMkt0RVhUNndqbzNKbmNoUHNEcmg5RG02ZDZiSGxZazBmMDB6b1Zzek5EcVM4M05TVmV4ZTNVVDJ1OExLMS9GSAppSVhGdVZhL2xzdWVGaHdWSWVCU2Yyc0thSFc1ZlpGa3pGT2FwT20welFLQmdRRDJOQUNGblhaZGNGbHRYbm9zClhGQlptaVhDdFp5cms4ZURCdzA5Rm5lbGhzT1BTcE9qUkpXSFlnUmhnc1hsQUx3RHI4dk5yaDJHTG50Sk5ULy8KZjNDSXhZamZWUTJHb1hZeDIvVDdncjBtTk5rd0Q5cWt4ak9HRjl1Z2NLZTFtRWFIK1VjUGxBOEZPc1FRVmtTWgpNVmZEUkZteC8yWjh3V2hMQjhPdGtVTWxkd0tCZ1FER0JDTm5iMmNlYnRtb2dOa3pSWkxyZG0zSUdZNnZRQlJoCmxIektONWE5dnhsTmlZZHRPYzVrSVVMVGEvSFI4OEVQZFNOUSs1UzR0S0NpajFMc1o5bkJxbVQxREtQazVrNFoKRnVsYUZ0bEF3bFpJV1B6eVZ3b2FEN2FZSVVLc05ucEpBcDlVM283blVZRHZaQm1ZbGU1ekRXTU1mMHFsM2NadQpIdURVRVhmM2R3S0JnR2hnVTNoUjhVUmJ4UTNnNTlxMnFEblVaLzNNRU1lTXR5Q05kTWRaSnhBOXVkcWR1MG1VCllmQXJWY0FoT05TRkl6Qk03eElicHRpa0RCQlZTdlIraXE3eFQ3MmV5VVV5WG5GMDFyOXFCZGFVd1I3bkdjS1IKWkhhTTFzZUYreE81b3UweWVUWFpoeVNvYlVhZnpDVkdEZmJ5bXpRakdzZjVGc1g0WExUUXlLNnhBb0dBYmVQSwpDaE1HOVJxcmJCbmxiOURDa2kydEN3a3o2QW4xeFpsMEQzeitDTnRPblhzZlR2eHZqNTN0eWdyenJvSkp0OXhYCjl3OUhINklPSzJqQ3FqT1A0eXcrenNkdkJRN1NkSllFZGx5THdLYVkzNW1TOXFKYkZzOTFrOE9SanFURkJGT1MKUExVdU5TMUVFcFpJcGljK3AxYmNpd2p4VWs5YldhMkZNK3RsMmswQ2dZQXVDWnE3Ny9rSFNhcDFEdGZBLzVuYworK2YrWDNFTzc2amlQeWlYeFVtcGw2K0hJV1hqSnpIZjVoN2t3WkFVaVpSUGhtc2g4OUxtV0srczl6dStKeVAzCkR4TXRNV3A1d0tMbUo4V1FNUnYvK1ZvazFvMjBhN1pIWEQvcGpIUjlaMWN0ZFd4WlF1ZGFsRk1ac1AzNWM1YW8KY1hlVExzb3BoUy9YWkFwWVRtbGFNQT09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
---
# Source: bigbang/templates/istio-gateway/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: bigbang-istio-passthrough-gateway-values
  namespace: bigbang
type: generic
stringData:
  common: ""
  defaults:
    |-
      gateway:
        servers:
        - hosts:
          - '*.dev.bigbang.mil'
          port:
            name: http
            number: 8080
            protocol: HTTP
          tls:
            httpsRedirect: true
        - hosts:
          - '*.dev.bigbang.mil'
          port:
            name: https
            number: 8443
            protocol: HTTPS
          tls:
            mode: PASSTHROUGH
      monitoring:
        enabled: true
      networkPolicies:
        enabled: true
      upstream:
        imagePullPolicy: IfNotPresent
        imagePullSecrets:
        - name: private-registry
        labels:
          istio: ingressgateway
        serviceAccount:
          create: true
          name: passthrough-ingressgateway-ingressgateway-service-account
  overlays: |
    null
---
# Source: bigbang/templates/istio-gateway/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: bigbang-istio-public-gateway-values
  namespace: bigbang
type: generic
stringData:
  common: ""
  defaults:
    |-
      gateway:
        servers:
        - hosts:
          - '*.dev.bigbang.mil'
          port:
            name: http
            number: 8080
            protocol: HTTP
          tls:
            httpsRedirect: true
        - hosts:
          - '*.dev.bigbang.mil'
          port:
            name: https
            number: 8443
            protocol: HTTPS
          tls:
            credentialName: public-cert
            mode: SIMPLE
      monitoring:
        enabled: true
      networkPolicies:
        enabled: true
      upstream:
        imagePullPolicy: IfNotPresent
        imagePullSecrets:
        - name: private-registry
        labels:
          istio: ingressgateway
        serviceAccount:
          create: true
          name: public-ingressgateway-ingressgateway-service-account
  overlays: |
    gatewayCerts:
    - name: public-cert
      tls:
        cert: |
          -----BEGIN CERTIFICATE-----
          MIIFIjCCBAqgAwIBAgISBXVA50uT+ZS8HXGKDYrB+z72MA0GCSqGSIb3DQEBCwUA
          MDMxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MQwwCgYDVQQD
          EwNSMTAwHhcNMjUwNDI5MTIzMDU1WhcNMjUwNzI4MTIzMDU0WjAcMRowGAYDVQQD
          DBEqLmRldi5iaWdiYW5nLm1pbDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC
          ggEBAL5wM0PwAjTSvRaiszu8ttJVGwGXbr5xhBADFAISgbdQjKJiiXgzo9kS89Sb
          2huIzRnr8D0lttSoRfaaKCk5P387zWr6gOvS3nyk7GRyqIf85AJDlqjDdkuFIj/j
          GJomE8d1+smRaNMSFc3404WqaIzS5cLE5rWxa5/zp+/Kxu01CdRy3MEi0GN6L0T7
          nBbZH8QGmSW+CDBCuihI8+6009Pfrmo3B8wbes3afdXHMaFCgC67uUOPXfhT0lox
          UX2+iqITiD6RLTIlsmMZprpNIOZORT9jjLzKncdt8N7S754N7zx5uMagGhktIzR0
          QQ7oYUvYBT0kcWxSbRGPFaCtO1ECAwEAAaOCAkUwggJBMA4GA1UdDwEB/wQEAwIF
          oDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAd
          BgNVHQ4EFgQU59l/H9uVbCdhsKrH28HVh3JrxCUwHwYDVR0jBBgwFoAUu7zDR6Xk
          vKnGw6RyDBCNojXhyOgwVwYIKwYBBQUHAQEESzBJMCIGCCsGAQUFBzABhhZodHRw
          Oi8vcjEwLm8ubGVuY3Iub3JnMCMGCCsGAQUFBzAChhdodHRwOi8vcjEwLmkubGVu
          Y3Iub3JnLzAcBgNVHREEFTATghEqLmRldi5iaWdiYW5nLm1pbDATBgNVHSAEDDAK
          MAgGBmeBDAECATAvBgNVHR8EKDAmMCSgIqAghh5odHRwOi8vcjEwLmMubGVuY3Iu
          b3JnLzExOS5jcmwwggEDBgorBgEEAdZ5AgQCBIH0BIHxAO8AdgCkQsUGSWBhVI8P
          1Oqc+3otJkVNh6l/L99FWfYnTzqEVAAAAZaBvPBAAAAEAwBHMEUCIEGTl6vbwZLY
          IWCd/HFB7DoMw1yURte+488pF69S9FoiAiEAtynidSM0Xw/9RPeTlmqeZoAkCL4s
          NY+mqK01ItHaTYoAdQDd3Mo0ldfhFgXnlTL6x5/4PRxQ39sAOhQSdgosrLvIKgAA
          AZaBvPCIAAAEAwBGMEQCIBMYtcuNVglI4k3SPjeuPqeeECUrhi89RLViYizylh9X
          AiAUghafqmfwWxg7kG/cBQSm9PWs9II8HG2Q6dfWzo84rzANBgkqhkiG9w0BAQsF
          AAOCAQEAMxxGUgiSyvsDNrYvr5CRH6ygYmHT2GBWl6MuVl5/uXMKIEJtB27zIoD2
          iNpU73s6QANLgFZCfuyjSQsxlXgj57EdCxtZNgvoEuHkvPLBzfJPrY4kbVXatwHD
          XzpBIbDdfRbL0Pef/tgvo4xzwSCkGUnfQhZG0YT76kfU402IuyHWVp1lmaqKhzI3
          TpKeHk8CezDcfu2awZz2abe2D/dCaTk3dREBuA7C4VTyCNrwrYS/JicZ5LqzxGcs
          1uUmhlVoGYV5t+oUPtPrGxTIJdjjyS3g1LH/KHNi+mZ7PKUVuHkVAIDdcei0rb7a
          oDXewxj0kIgAKidPtqkuekUoKdLxDw==
          -----END CERTIFICATE-----
          -----BEGIN CERTIFICATE-----
          MIIFBTCCAu2gAwIBAgIQS6hSk/eaL6JzBkuoBI110DANBgkqhkiG9w0BAQsFADBP
          MQswCQYDVQQGEwJVUzEpMCcGA1UEChMgSW50ZXJuZXQgU2VjdXJpdHkgUmVzZWFy
          Y2ggR3JvdXAxFTATBgNVBAMTDElTUkcgUm9vdCBYMTAeFw0yNDAzMTMwMDAwMDBa
          Fw0yNzAzMTIyMzU5NTlaMDMxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBF
          bmNyeXB0MQwwCgYDVQQDEwNSMTAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
          AoIBAQDPV+XmxFQS7bRH/sknWHZGUCiMHT6I3wWd1bUYKb3dtVq/+vbOo76vACFL
          YlpaPAEvxVgD9on/jhFD68G14BQHlo9vH9fnuoE5CXVlt8KvGFs3Jijno/QHK20a
          /6tYvJWuQP/py1fEtVt/eA0YYbwX51TGu0mRzW4Y0YCF7qZlNrx06rxQTOr8IfM4
          FpOUurDTazgGzRYSespSdcitdrLCnF2YRVxvYXvGLe48E1KGAdlX5jgc3421H5KR
          mudKHMxFqHJV8LDmowfs/acbZp4/SItxhHFYyTr6717yW0QrPHTnj7JHwQdqzZq3
          DZb3EoEmUVQK7GH29/Xi8orIlQ2NAgMBAAGjgfgwgfUwDgYDVR0PAQH/BAQDAgGG
          MB0GA1UdJQQWMBQGCCsGAQUFBwMCBggrBgEFBQcDATASBgNVHRMBAf8ECDAGAQH/
          AgEAMB0GA1UdDgQWBBS7vMNHpeS8qcbDpHIMEI2iNeHI6DAfBgNVHSMEGDAWgBR5
          tFnme7bl5AFzgAiIyBpY9umbbjAyBggrBgEFBQcBAQQmMCQwIgYIKwYBBQUHMAKG
          Fmh0dHA6Ly94MS5pLmxlbmNyLm9yZy8wEwYDVR0gBAwwCjAIBgZngQwBAgEwJwYD
          VR0fBCAwHjAcoBqgGIYWaHR0cDovL3gxLmMubGVuY3Iub3JnLzANBgkqhkiG9w0B
          AQsFAAOCAgEAkrHnQTfreZ2B5s3iJeE6IOmQRJWjgVzPw139vaBw1bGWKCIL0vIo
          zwzn1OZDjCQiHcFCktEJr59L9MhwTyAWsVrdAfYf+B9haxQnsHKNY67u4s5Lzzfd
          u6PUzeetUK29v+PsPmI2cJkxp+iN3epi4hKu9ZzUPSwMqtCceb7qPVxEbpYxY1p9
          1n5PJKBLBX9eb9LU6l8zSxPWV7bK3lG4XaMJgnT9x3ies7msFtpKK5bDtotij/l0
          GaKeA97pb5uwD9KgWvaFXMIEt8jVTjLEvwRdvCn294GPDF08U8lAkIv7tghluaQh
          1QnlE4SEN4LOECj8dsIGJXpGUk3aU3KkJz9icKy+aUgA+2cP21uh6NcDIS3XyfaZ
          QjmDQ993ChII8SXWupQZVBiIpcWO4RqZk3lr7Bz5MUCwzDIA359e57SSq5CCkY0N
          4B6Vulk7LktfwrdGNVI5BsC9qqxSwSKgRJeZ9wygIaehbHFHFhcBaMDKpiZlBHyz
          rsnnlFXCb5s8HKn5LsUgGvB24L7sGNZP2CX7dhHov+YhD+jozLW2p9W4959Bz2Ei
          RmqDtmiXLnzqTpXbI+suyCsohKRg6Un0RC47+cpiVwHiXZAW+cn8eiNIjqbVgXLx
          KPpdzvvtTnOPlC7SQZSYmdunr3Bf9b77AiC/ZidstK36dRILKz7OA54=
          -----END CERTIFICATE-----
        key: |
          -----BEGIN PRIVATE KEY-----
          MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQC+cDND8AI00r0W
          orM7vLbSVRsBl26+cYQQAxQCEoG3UIyiYol4M6PZEvPUm9obiM0Z6/A9JbbUqEX2
          migpOT9/O81q+oDr0t58pOxkcqiH/OQCQ5aow3ZLhSI/4xiaJhPHdfrJkWjTEhXN
          +NOFqmiM0uXCxOa1sWuf86fvysbtNQnUctzBItBjei9E+5wW2R/EBpklvggwQroo
          SPPutNPT365qNwfMG3rN2n3VxzGhQoAuu7lDj134U9JaMVF9voqiE4g+kS0yJbJj
          Gaa6TSDmTkU/Y4y8yp3HbfDe0u+eDe88ebjGoBoZLSM0dEEO6GFL2AU9JHFsUm0R
          jxWgrTtRAgMBAAECggEAH719neYjyAATyfEGJH+4jOfoX2SI7a7nzu9kZ1AEVLRV
          LD92IBWjSmvRPe9X89ziKl7bpKVjiqAdQRPCe9Rx09f4zcrAsA1uTaIDUF6X3kp1
          CjePpcMmNUIUSkekcxTDmSv9x5i3uu45uiGtx4p2cHo6FzNQLJpMkNVAeUP30dMK
          LXIum4Iuqvlar0nSAcB0WhJkImPCBzOQhivQLppvCgxIOFei6U4d0NUpgnFfBerF
          2KtEXT6wjo3JnchPsDrh9Dm6d6bHlYk0f00zoVszNDqS83NSVexe3UT2u8LK1/FH
          iIXFuVa/lsueFhwVIeBSf2sKaHW5fZFkzFOapOm0zQKBgQD2NACFnXZdcFltXnos
          XFBZmiXCtZyrk8eDBw09FnelhsOPSpOjRJWHYgRhgsXlALwDr8vNrh2GLntJNT//
          f3CIxYjfVQ2GoXYx2/T7gr0mNNkwD9qkxjOGF9ugcKe1mEaH+UcPlA8FOsQQVkSZ
          MVfDRFmx/2Z8wWhLB8OtkUMldwKBgQDGBCNnb2cebtmogNkzRZLrdm3IGY6vQBRh
          lHzKN5a9vxlNiYdtOc5kIULTa/HR88EPdSNQ+5S4tKCij1LsZ9nBqmT1DKPk5k4Z
          FulaFtlAwlZIWPzyVwoaD7aYIUKsNnpJAp9U3o7nUYDvZBmYle5zDWMMf0ql3cZu
          HuDUEXf3dwKBgGhgU3hR8URbxQ3g59q2qDnUZ/3MEMeMtyCNdMdZJxA9udqdu0mU
          YfArVcAhONSFIzBM7xIbptikDBBVSvR+iq7xT72eyUUyXnF01r9qBdaUwR7nGcKR
          ZHaM1seF+xO5ou0yeTXZhySobUafzCVGDfbymzQjGsf5FsX4XLTQyK6xAoGAbePK
          ChMG9RqrbBnlb9DCki2tCwkz6An1xZl0D3z+CNtOnXsfTvxvj53tygrzroJJt9xX
          9w9HH6IOK2jCqjOP4yw+zsdvBQ7SdJYEdlyLwKaY35mS9qJbFs91k8ORjqTFBFOS
          PLUuNS1EEpZIpic+p1bciwjxUk9bWa2FM+tl2k0CgYAuCZq77/kHSap1DtfA/5nc
          ++f+X3EO76jiPyiXxUmpl6+HIWXjJzHf5h7kwZAUiZRPhmsh89LmWK+s9zu+JyP3
          DxMtMWp5wKLmJ8WQMRv/+Vok1o20a7ZHXD/pjHR9Z1ctdWxZQudalFMZsP35c5ao
          cXeTLsophS/XZApYTmlaMA==
          -----END PRIVATE KEY-----
    imagePullPolicy: IfNotPresent
    imagePullSecrets:
    - name: private-registry
---
# Source: bigbang/templates/istiod/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: bigbang-istiod-values
  namespace: bigbang
type: generic
stringData:
  common: ""
  defaults:
    |
      networkPolicies:
        enabled: true
        controlPlaneCIDRs:
          - 0.0.0.0/0
    
      monitoring:
        enabled: true
    
      authservice:
        enabled: false
    
      upstream:
        global:
          imagePullPolicy: IfNotPresent
          imagePullSecrets:
            - private-registry
        meshConfig:
          accessLogFormat: |
            [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %CONNECTION_TERMINATION_DETAILS% "%UPSTREAM_TRANSPORT_FAILURE_REASON%" %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%" %UPSTREAM_CLUSTER% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME% traceID=%REQ(x-b3-traceid)%
          enableTracing: true
          defaultConfig:
            tracing:
              sampling: 10
              zipkin:
                address: tempo-tempo.tempo.svc:9411
  overlays: |
    {}
---
# Source: bigbang/templates/kiali/grafana-auth-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: grafana-auth
  namespace: kiali
  labels:
    app.kubernetes.io/name: kiali
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
type: kubernetes.io/opaque
stringData:
  password: prom-operator
---
# Source: bigbang/templates/kiali/imagepullsecret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: private-registry
  namespace: kiali
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeTEuZHNvLm1pbCI6eyJ1c2VybmFtZSI6ImdtaWVybmlja2kiLCJwYXNzd29yZCI6IjRjZHp1RU8zRyIsImVtYWlsIjoiIiwiYXV0aCI6IloyMXBaWEp1YVdOcmFUbzBZMlI2ZFVWUE0wYz0ifX19
---
# Source: bigbang/templates/kiali/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: bigbang-kiali-values
  namespace: bigbang
type: generic
stringData:
  common: ""
  defaults:
    "\n# hostname is deprecated and replaced with domain. But if hostname exists then
      use it.\ndomain: dev.bigbang.mil\n\nsso:\n  enabled: false\n\nopenshift: false\n\nimage:\n
      \ pullPolicy: IfNotPresent\n\nistio:\n  enabled: true\n  hardened:\n    enabled:
      false\n    monitoring:\n      enabled: true\n  kiali:\n    gateways:\n      - istio-gateway/public-ingressgateway\npodAnnotations:\n
      \ bigbang.dev/istioVersion: 1.25.3\n\nmonitoring:\n  enabled: true\nupstream:\n
      \ cr:\n    spec:\n      istio_namespace: istio-system\n      deployment:\n        image_pull_policy:
      IfNotPresent\n        pod_annotations:\n          bigbang.dev/istioVersion: 1.25.3\n
      \       hpa:\n          spec:\n            maxReplicas: 2\n            minReplicas:
      1\n            targetCPUUtilizationPercentage: 80\n      server:\n        web_port:
      \"443\"\n      auth:\n        strategy: token\n      external_services:\n        grafana:\n
      \         enabled: true\n          url: https://grafana.dev.bigbang.mil\n          auth:\n
      \           username: admin\n            password: \"secret:grafana-auth:password\"\n
      \       tracing:\n          enabled: true\n          internal_url: http://tempo-tempo.tempo.svc.cluster.local:3100\n
      \         provider: tempo\n        istio:\n          component_status:\n            components:\n
      \             - app_label: istiod\n                is_core: true\n                is_proxy:
      false\n              - app_label: passthrough-ingressgateway\n                is_core:
      true\n                is_proxy: true\n                namespace: istio-gateway\n
      \             - app_label: public-ingressgateway\n                is_core: true\n
      \               is_proxy: true\n                namespace: istio-gateway\n          ingress_gateway_namespace:
      istio-gateway\n          egress_gateway_namespace: istio-gateway\nnetworkPolicies:\n
      \ enabled: true\n  controlPlaneCidr: 0.0.0.0/0\n  istioNamespaceSelector:\n  \n
      \   ingress: istio-gateway\n    egress: istio-system\n  ingressLabels:\n    app:
      public-ingressgateway\n    istio: ingressgateway"
  overlays: |
    bbtests:
      cypress:
        envs:
          cypress_check_data: "true"
          cypress_url: https://kiali.dev.bigbang.mil
      enabled: true
    upstream:
      cr:
        spec:
          auth:
            strategy: anonymous
---
# Source: bigbang/templates/kyverno-policies/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: bigbang-kyverno-policies-values
  namespace: bigbang
type: generic
stringData:
  common: ""
  defaults:
    "\n\nwaitforready:\n  imagePullSecrets:\n  - name: private-registry\n\npolicies:\n
      \ add-default-capability-drop:\n    enabled: true\n    exclude:\n      any:\n      #
      Neuvector needs access to host to inspect network traffic\n      - resources:\n
      \         namespaces:\n          - neuvector\n          names:\n          - neuvector-enforcer-pod*\n
      \         - neuvector-cert-upgrader-job*\n          - neuvector-controller-pod*\n
      \         - neuvector-scanner-pod*\n          - neuvector-prometheus-exporter-pod*\n
      \ disallow-host-namespaces:\n    exclude:\n      any:\n      # Neuvector needs access
      to host to inspect network traffic\n      - resources:\n          namespaces:\n
      \         - neuvector\n          names:\n          - neuvector-enforcer-pod*\n\n
      \ # Istio services (istio ingress) can create type: NodePort services\n  disallow-nodeport-services:\n
      \   validationFailureAction: Enforce\n    exclude:\n      any:\n      - resources:\n
      \         kinds:\n          - Service\n          names:\n          namespaces:\n
      \         - istio-system\n      - resources:\n          kinds:\n          - Service\n
      \         names:\n          - passthrough-ingressgateway\n          \n          -
      public-ingressgateway\n          namespaces:\n          - istio-gateway\n\n  disallow-image-tags:\n
      \   enabled: true\n    validationFailureAction: Enforce\n    exclude:\n      any:\n
      \     # istio/gateway sets the deployment image to `auto` by default\n      # and
      does not expose any way for the chart consumer to modify\n      # it. The idea is
      `istiod` will inject the correct image at\n      # pod creation based on `istiod`'s
      proxy config.\n      - resources:\n          namespaces:\n          - istio-gateway\n
      \         names:\n          - '*-ingressgateway'\n          - '*-egressgateway'\n\n
      \ disallow-istio-injection-bypass:\n    enabled: true\n    exclude:\n      any:\n
      \     # Istio does not inject itself\n      - resources:\n          namespaces:\n
      \         - istio-system\n          - istio-gateway\n\n  disallow-namespaces:\n
      \   enabled: true\n    validationFailureAction: Enforce\n    parameters:\n      disallow:\n
      \     - bigbang\n      - default\n  disallow-privileged-containers:\n    exclude:\n
      \     any:\n      # Neuvector needs privileged access for realtime scanning of files
      from the node / access to the container runtime\n      - resources:\n          namespaces:\n
      \         - neuvector\n          names:\n          - neuvector-enforcer-pod*\n          -
      neuvector-controller-pod*\n          - neuvector-scanner-pod*\n\n  # -- Prevent
      Automounting of Kubernetes API Credentials on Pods and Service Accounts\n  disallow-auto-mount-service-account-token:\n
      \   enabled: true\n    validationFailureAction: Audit\n    exclude:\n      any:\n
      \     - resources:\n          namespaces:\n          - kyverno-reporter\n          kinds:\n
      \         - Pod\n          - Deployment\n          names:\n          - kyverno-reporter*\n
      \     - resources:\n          namespaces:\n          - flux-system\n          kinds:\n
      \         - Pod\n          - Deployment\n          - StatefulSet\n          names:\n
      \         - notification-controller*\n          - helm-controller*\n          -
      source-controller*\n          - kustomize-controller*\n  disallow-tolerations:\n
      \   exclude:\n      any:\n      # Prometheus Node Exporter needs to be able to run
      on all nodes, regardless of taint, to gather node metrics\n      - resources:\n
      \         namespaces:\n          - monitoring\n          names:\n          - monitoring-monitoring-prometheus-node-exporter*\n\n
      \ require-drop-all-capabilities:\n    validationFailureAction: Enforce\n    exclude:\n
      \     any:\n      # Neuvector needs access to host to inspect network traffic\n
      \     - resources:\n          namespaces:\n          - neuvector\n          names:\n
      \         - neuvector-enforcer-pod*\n          - neuvector-cert-upgrader-job-*\n
      \         - neuvector-controller-pod*\n          - neuvector-scanner-pod*\n          -
      neuvector-prometheus-exporter-pod*\n\n  # Kyverno Beta feature - https://kyverno.io/docs/writing-policies/verify-images/\n
      \ require-image-signature:\n    enabled: false\n    validationFailureAction: Audit\n\n
      \ require-labels:\n    enabled: true\n    validationFailureAction: Audit\n    parameters:\n
      \     require:\n      - app.kubernetes.io/name\n      - app.kubernetes.io/version\n\n
      \ require-istio-on-namespaces:\n    enabled: true\n    exclude:\n      any:\n      -
      resources:\n          namespaces:\n          # Kuberentes control plane does not
      use Istio\n          - kube-node-lease\n          - kube-public\n          - kube-system\n
      \         # No pods in bigbang / default\n          - bigbang\n          - default\n
      \         # Flux is installed prior to Istio\n          - flux-system\n          #
      Istio does not inject itself\n          - istio-system\n          - istio-gateway\n\n
      \ add-default-securitycontext:\n    enabled: true\n    \n    parameters:\n      excludeContainers:\n
      \       - istio-init\n    exclude:\n      any:\n      - resources:\n          namespaces:\n
      \         - kube-system\n      # For GitLab runner CI jobs that require root access\n
      \     # promtail requires access to journalctl as well as /var/log.  This would
      require modifications\n      # to the host operating system, creating a user, adding
      that user to the  systemd-journal user group\n      # and then granting permissions
      recursively on /var/log.\n      # promtail requires access to /run/promtail for
      its buffering and persistent state.\n      - resources:\n          namespaces:\n
      \         - promtail\n          names:\n          - promtail-promtail*\n      #
      neuvector enforcers run as root to perform real time scanning on the nodes/cluster\n
      \     - resources:\n          namespaces:\n          - neuvector\n          names:\n
      \         - neuvector-enforcer-pod-*\n          - neuvector-controller-pod-*\n          -
      neuvector-cert-upgrader-job-*\n\n\n  require-non-root-group:\n    validationFailureAction:
      Enforce\n    \n    parameters:\n      excludeContainers:\n        - istio-init\n
      \   exclude:\n      any:\n      - resources:\n          namespaces:\n          -
      kube-system\n      \n      - resources:\n          namespaces:\n          - istio-system\n
      \         names:\n          - istiod*\n      # For GitLab runner CI jobs that require
      root access\n      # promtail requires access to journalctl as well as /var/log.
      \ This would require modifications\n      # to the host operating system, creating
      a user, adding that user to the  systemd-journal user group\n      # and then granting
      permissions recursively on /var/log.\n      # promtail requires access to /run/promtail
      for its buffering and persistent state.\n      - resources:\n          namespaces:\n
      \         - promtail\n          names:\n          - promtail-promtail*\n      #
      neuvector enforcers run as root to perform real time scanning on the nodes/cluster\n
      \     - resources:\n          namespaces:\n          - neuvector\n          names:\n
      \         - neuvector-enforcer-pod-*\n          - neuvector-controller-pod-*\n          -
      neuvector-cert-upgrader-job-*\n\n  require-non-root-user:\n    validationFailureAction:
      Enforce\n    \n    parameters:\n      excludeContainers:\n        - istio-init\n
      \   exclude:\n      any:\n      - resources:\n          namespaces:\n          -
      kube-system\n      # Kiali needs exception for operator to deploy Kiali server\n
      \     - resources:\n          namespaces:\n          - kiali\n          names:\n
      \         - kiali-*\n      # Neuvector needs privileged access for realtime scanning
      of files from the node / access to the container runtime\n      - resources:\n          namespaces:\n
      \         - neuvector\n          names:\n          - neuvector*\n      # For GitLab
      runner CI jobs that require root access\n      # promtail requires access to journalctl
      as well as /var/log.  This would require modifications\n      # to the host operating
      system, creating a user, adding that user to the systemd-journal user group\n      #
      and then granting permissions recursively on /var/log.\n      # promtail requires
      access to /run/promtail for its buffering and persistent state.\n      - resources:\n
      \         namespaces:\n          - promtail\n          names:\n          - promtail-promtail*\n\n
      \ restrict-capabilities:\n    validationFailureAction: Enforce\n    # NEEDS FURTHER
      JUSTIFICATION\n    # Twistlock Defenders require the following capabilities\n    #
      - NET_ADMIN  - Process monitoring and Iptables\n    # - NET_RAW    - Iptables (CNNF,
      runtime DNS, WAAS)  See https://bugzilla.redhat.com/show_bug.cgi?id=1895032\n    #
      - SYS_ADMIN  - filesystem monitoring\n    # - SYS_PTRACE - local audit monitoring\n
      \   # - SYS_CHROOT - changing mount namespace using setns\n    # - MKNOD      -
      Create special files using mknod, used by docker-less registry scanning\n    # -
      SETFCAP    - Set file capabilties, used by docker-less registry scanning\n    #
      - IPC_LOCK\n    #\n    parameters:\n      allow:\n      # Defaults from https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted\n
      \     - NET_BIND_SERVICE\n      # Istio requires NET_ADMIN and NET_RAW for sidecar
      init: https://istio.io/latest/docs/ops/deployment/requirements/#pod-requirements\n
      \     # It uses these permissions to setup iptables for network routing\n      #
      Cannot create exclusion since sidecar is injected in most containers, so allow the
      capabilities globally\n      - NET_ADMIN\n      - NET_RAW\n    # Twistlock Defenders
      run as root to perform real time scanning on the nodes/cluster, including:\n    #
      - read logs from `/var/log` to watch for malicious processes\n    # - audit modifications
      to `/etc/passwd` (watching for suspicious changes)\n    # - access the container
      runtime socket (observing all running containers on a node)\n  restrict-host-path-mount:\n
      \   validationFailureAction: Enforce\n    exclude:\n      any:\n          # Promtail
      mounts the following hostPaths:\n          # - `/var/log/pods`: to tail pod logs\n
      \         # - `/var/lib/docker/containers`: to tail container logs\n          #
      - `/run/promtail`: for Promtail's buffering and persistent state\n          # Since
      logs can have sensitive information, it is better to exclude\n          # Promtail
      from the policy than add the paths as allowable mounts\n      - resources:\n          namespaces:\n
      \         - promtail\n          names:\n          - promtail-promtail*\n      #
      Prometheus Node Exporter mounts the following hostPaths:\n      # - `/`: monitor
      disk usage on filesystem mounts using e2fs call\n      # - `/proc` and `/sys`: gather
      node metrics\n      # Since mounting the root would expose sensitive information,
      it is better to\n      # exlcude Prometheus Node Exporter than add the paths as
      allowable mounts\n      - resources:\n          namespaces:\n          - monitoring\n
      \         names:\n          - monitoring-monitoring-prometheus-node-exporter*\n
      \     # Neuvector mounts the following hostPaths:\n      # `/var/neuvector`: for
      Neuvector's buffering and persistent state\n      # `/var/run`: communication to
      docker daemon\n      # `/proc`: monitoring of proccesses for malicious activity\n
      \     # `/sys/fs/cgroup`: important files the controller wants to monitor for malicious
      content\n      - resources:\n          namespaces:\n          - neuvector\n          names:\n
      \         - neuvector-enforcer-pod*\n          - neuvector-cert-upgrader-job-*\n
      \         - neuvector-controller-pod*\n\n  # NOTE: This restricts the ability to
      have PVCs when using a local path provisioner storage class (i.e. k3d default).\n
      \ # To override either disable this policy (not ideal) or add an allowed wildcard
      matching where local paths are provisioned.\n  # See `docs/assets/configs/example/policy-overrides-k3d.yaml`
      for an example of how to do this for k3d.\n  restrict-host-path-mount-pv:\n    validationFailureAction:
      Enforce\n\n  restrict-host-path-write:\n    validationFailureAction: Enforce\n    exclude:\n
      \     any:\n      # NEEDS FURTHER JUSTIFICATION\n      # Twistlock mounts the following
      hostPaths as writable:\n      # - `/dev/log`: writing twistlock logs to syslog socket
      on node (if enabled)\n      # - `/var/lib/twistlock`: data folder reserved for twistlock\n
      \     # - `/run` or `/var/run`: communication to docker daemon and IP tables\n      #
      - `/var/lib/containers`: Container images data from CRI\n      # - `/var/log/audit`:
      Audit logs\n      # Because the mounts are dynamically created for defenders at
      runtime, we cannot\n      # anticipate all of the paths it may mount and must exclude
      it from the policy\n      # Neuvector mounts the following hostPaths as writeable:\n
      \     # `/var/neuvector`: for Neuvector's buffering and persistent state\n      -
      resources:\n          namespaces:\n          - neuvector\n          names:\n          -
      neuvector-controller-pod*\n          - neuvector-enforcer-pod*\n    parameters:\n
      \     allow:\n      # Promtail - `/run/promtail`: promtail buffering and persistent
      state\n      - /run/promtail\n\n  restrict-image-registries:\n    validationFailureAction:
      Enforce\n    parameters:\n      allow:\n      - registry1.dso.mil\n      - registry.dso.mil\n
      \   exclude:\n      any:\n      # istio/gateway sets the deployment image to `auto`
      by default\n      # and does not expose any way for the chart consumer to modify\n
      \     # it. The idea is `istiod` will inject the correct image at\n      # pod creation
      based on `istiod`'s proxy config.\n      - resources:\n          namespaces:\n          -
      istio-gateway\n          names:\n          - '*-ingressgateway'\n          - '*-egressgateway'\n
      \ restrict-selinux-type:\n    exclude:\n      any:\n      - resources:\n          namespaces:\n
      \         - promtail\n          names:\n          # NEEDS FURTHER JUSTIFICATION\n
      \         # Promtail needs selinux option type spc_t\n          - promtail-promtail*\n
      \ restrict-volume-types:\n    exclude:\n      any:\n      - resources:\n          namespaces:\n
      \         - promtail\n          names:\n          # NEEDS FURTHER JUSTIFICATION\n
      \         # Promtail requires HostPath volume types\n          # https://github.com/grafana/helm-charts/blob/main/charts/promtail/templates/daemonset.yaml#L120\n
      \         - promtail-promtail*\n      # Prometheus node exporter requires a HostPath
      volume to monitor host metrics in /proc and /sys\n      - resources:\n          namespaces:\n
      \         - monitoring\n          names:\n          - monitoring-monitoring-prometheus-node-exporter*\n
      \     # Neuvector requires HostPath volume types\n        # Neuvector mounts the
      following hostPaths:\n        # `/var/neuvector`: (as writable) for Neuvector's
      buffering and persistent state\n        # `/var/run`: communication to docker daemon\n
      \       # `/proc`: monitoring of proccesses for malicious activity\n        # `/sys/fs/cgroup`:
      important files the controller wants to monitor for malicious content\n      # https://github.com/neuvector/neuvector-helm/blob/master/charts/core/templates/enforcer-daemonset.yaml#L108\n
      \     - resources:\n          namespaces:\n          - neuvector\n          names:\n
      \         - neuvector-enforcer-pod*\n          - neuvector-controller-pod*\n\n  update-automountserviceaccounttokens-default:\n
      \   enabled: true\n    namespaces:\n      - istio-system\n      - twistlock\n      -
      argocd\n      - logging\n      - velero\n      - minio\n      - minio-operator\n
      \     - kyverno-reporter\n      - kyverno\n      - velero\n      - neuvector\n      -
      kiali\n      - harbor\n      - authservice\n      - anchore\n      - fortify\n      -
      vault\n      - promtail\n      - fluentbit\n      - eck-operator\n      - nexus-repository-manager\n
      \     - thanos\n      - mattermost\n      - mattermost-operator\n      - bigbang\n
      \     - flux-system\n      - keycloak\n      - monitoring\n      - gitlab\n      -
      gitlab-runner\n      - headlamp\n\n  update-automountserviceaccounttokens:\n    enabled:
      true\n    namespaces:\n      - namespace: istio-system\n        pods:\n          allow:\n
      \         - istiod-*\n          - passthrough-ingressgateway-*\n          - public-ingressgateway-*\n
      \     - namespace: twistlock\n        pods:\n          allow:\n          # twistlock-init
      pods require get/list/patch/etc to several resources.\n          # More details
      in twistlock/chart/templates/init/clusterrole.yaml\n          - twistlock-init-*\n
      \         # twistlock-volume-upgrade-job requires patch/get/list/update to deployments
      and get/list to pods\n          # More details in twistlock/chart/templates/init/volume-upgrade-role.yaml\n
      \         - twistlock-volume-upgrade-job\n          # Twistlock Defender enforces
      various policies that may involve the K8s cluster itself\n          # Enforcing
      said policies requires access to the API to get/list resources\n          - twistlock-defender-ds-*\n
      \         # bb-twistlock-upgrade-job requires patch/get/list/update/etc to deployments
      daemonsets pv's and pvc\n          # More details in twistlock/chart/templates/bigbang/upgrade-job.yaml\n
      \         - bb-twistlock-twistlock-upgrade-job-*\n      - namespace: logging\n        pods:\n
      \         allow:\n          - logging-loki-minio-*\n          deny:\n          -
      logging-ek-es-data*\n          - logging-ek-es-master*\n          - logging-ek-kb*\n
      \         - logging-ek-metrics*\n      - namespace: minio-operator\n        pods:\n
      \         allow:\n          # console pods require access to several API resources\n
      \         # More details in minio-operator/chart/templates/console-clusterrole.yaml\n
      \         - console-*\n          # operator pods require access to several API resources\n
      \         # More details in minio-operator/chart/templates/operator-clusterrole.yaml\n
      \         - minio-operator-*\n          # tenantPatchJob requires get/list/patch
      on tenants (minio CRD)\n          # More details in minio-operator/chart/templates/bigbang/tenant-patch-job.yaml\n
      \         - bb-minio-operator-minio-operator-tenant-patch\n      - namespace: minio\n
      \       pods:\n          allow:\n          # tenant pods require get/list/watch
      on secrets/tenants (CRD), and create/delete/get on services\n          # More details
      in role named minio-minio-minio-instance-role\n          - minio-minio-minio-instance-*\n
      \         - minio-instance-wait-job-*\n      - namespace: kyverno\n        pods:\n
      \         allow:\n          - kyverno-reports-controller-*\n          - kyverno-admission-controller-*\n
      \         - kyverno-cleanup-controller-*\n          - kyverno-cleanup-admission-reports-*\n
      \         - kyverno-admission-controller-*\n          - kyverno-background-controller-*\n
      \         - kyverno-admission-controller-*\n          - kyverno-cleanup-cluster-admission-reports-*\n
      \         - kyverno-cleanup-cluster-ephemeral-reports-*\n          - kyverno-cleanup-update-requests-*\n
      \         - kyverno-clean-reports-*\n      - namespace: velero\n        pods:\n
      \         allow:\n          - velero-cleanup-crds-*\n          - velero-velero-*\n
      \         - node-agent-*\n          - velero-label-namespace-*\n          - velero-script-test\n
      \         - velero-backup-restore-test\n      - namespace: neuvector\n        pods:\n
      \         allow:\n          - neuvector-manager-pod-*\n          - neuvector-scanner-pod-*\n
      \         - neuvector-cert-upgrader-job-*\n          - neuvector-controller-pod-*\n
      \         - neuvector-enforcer-pod-*\n          - neuvector-updater-pod-*\n          -
      neuvector-prometheus-exporter-pod-*\n          - neuvector-registry-adapter-pod-*\n
      \     - namespace: kiali\n        pods:\n          allow:\n          - kiali-*\n
      \     - namespace: argocd\n        pods:\n          allow:\n          # application-controller
      pods interact with secrets, configmaps, events, and Argo CRDs\n          # More
      details in argocd/chart/templates/argocd-application-controller/role.yaml\n          -
      argocd-argocd-application-controller-*\n          # dex pods interact with secrets
      and configmaps\n          # More details in argocd/chart/templates/dex/role.yaml\n
      \         - argocd-argocd-dex-server-*\n          # argocd-upgrade-job interacts
      with CRDs\n          # More details in argocd/chart/templates/bigbang/upgrade-job.yaml\n
      \         - argocd-upgrade-job-*\n          # argocd server pods interact with secrets,
      configmaps, events, and CRDs\n          # More details in argocd/chart/templates/argocd-server/role.yaml\n
      \         - argocd-argocd-server-*\n          # repo server pods require access
      to the K8s API if using RBAC\n          # Ref: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/rbac.md\n
      \         - argocd-argocd-repo-server-*\n          # The applicationSet controller
      pods interact with many API resources, including CRDs\n          # More details
      in argocd/chart/templates/argocd-applicationset/role.yaml\n          - argocd-argocd-applicationset-controller-*\n
      \         # notifications controller pods interact with secrets, configmaps, and
      CRDs\n          # More details in argocd/chart/templates/argocd-notifications/role.yaml\n
      \         # Additionally (this wildcard covers both)-\n          # notifications
      bot pods interact with secrets, configmaps, and CRDs\n          # More details in
      argocd/chart/templates/argocd-notifications/bots/slack/role.yaml\n          - argocd-argocd-notifications-controller-*\n
      \     - namespace: harbor\n        # Omitting the serviceAccount and Pods section
      forces the policy to apply to\n        # all of the serviceAccount and Pods in the
      namespace\n      - namespace: authservice\n        pods:\n          allow:\n          -
      authservice-authservice-redis-bb-*\n          - authservice-haproxy-sso-*\n      -
      namespace: monitoring\n        pods:\n          allow:\n          - monitoring-grafana*\n
      \         - monitoring-monitoring-kube-admission-create-*\n          - monitoring-monitoring-kube-admission-patch-*\n
      \         - monitoring-monitoring-kube-state-metrics*\n          - monitoring-monitoring-kube-operator*\n
      \         - prometheus-monitoring-monitoring-kube-prometheus*\n      - namespace:
      alloy\n        pods:\n          allow:\n          - alloy-*\n      - namespace:
      mimir\n        pods:\n          allow:\n          - mimir-mimir-rollout-operator-*\n
      \         - mimir-mimir-minio*\n      - namespace: anchore\n        pods:\n          allow:\n
      \         - anchore-ui-redis-*\n      - namespace: fortify\n        # Omitting the
      serviceAccount and pods section forces the policy to apply to\n        # all of
      the serviceAccounts and pods in the namespace\n      - namespace: vault\n        pods:\n
      \         allow:\n          - vault-vault-*\n          - vault-vault-agent-injector-*\n
      \         - vault-vault-job-init-*\n      - namespace: promtail\n        pods:\n
      \         allow:\n          - promtail-promtail-*\n      - namespace: fluentbit\n
      \       pods:\n          allow:\n          - fluentbit-fluent-bit-*\n      - namespace:
      eck-operator\n        pods:\n          allow:\n          - elastic-operator-*\n
      \     - namespace: nexus-repository-manager\n        pods:\n          allow:\n          -
      nexus-repository-manager-*\n      - namespace: thanos\n        pods:\n          allow:\n
      \         - thanos-minio-*\n          deny:\n          - thanos-query-frontend-*\n
      \         - thanos-storegateway*\n          - thanos-query*\n      - namespace:
      mattermost\n        pods:\n          allow:\n          - default-minio-bucket-creation-*\n
      \         - mattermost-minio-*\n          - mattermost-wait-job-*\n      - namespace:
      mattermost-operator\n        pods:\n          allow:\n          - mattermost-operator-*\n
      \     - namespace: keycloak\n        pods:\n          allow:\n          - keycloak-*\n
      \     - namespace: gitlab\n        pods:\n          allow:\n          - gitlab-shared-secrets*\n
      \         - gitlab-script-test\n      - namespace: gitlab-runner\n        pods:\n
      \         allow:\n          - gitlab-runner-*\n      - namespace: headlamp\n        pods:\n
      \         allow:\n          - headlamp-*\n\nistio:\n  enabled: true"
  overlays: |
    additionalPolicyExceptions:
      testpolicyexception:
        annotations:
          policies.kyverno.io/category: Test
          policies.kyverno.io/description: This Test PolicyException allows pods to deploy
            busybox for debugging.
          policies.kyverno.io/subject: Pod
          policies.kyverno.io/title: Test PolicyException
        enabled: true
        kind: PolicyException
        namespace: kyverno
        spec:
          conditions:
            any:
            - key: '{{ request.object.metadata.labels.app || '''' }}'
              operator: Equals
              value: busybox
          exceptions:
          - policyName: block-ephemeral-containers
            ruleNames:
            - block-ephemeral-containers
          match:
            any:
            - resources:
                kinds:
                - Pod
                names:
                - important-tool*
    bbtests:
      enabled: true
    exclude:
      any:
      - resources:
          names:
          - svclb-*
          namespaces:
          - istio-system
      - resources:
          names:
          - bad-test*
          - good-test*
          namespaces:
          - default
    excludeContainers:
    - not-me
    - or-me
    policies:
      add-default-capability-drop:
        exclude:
          any:
          - resources:
              names:
              - neuvector-enforcer-pod*
              - neuvector-cert-upgrader-job*
              - neuvector-controller-pod*
              - neuvector-scanner-pod*
              - neuvector-prometheus-exporter-pod*
              namespaces:
              - neuvector
          - resources:
              names:
              - require-drop-all-capabilities*
              namespaces:
              - default
          - resources:
              names:
              - guestbook-ui-*
              namespaces:
              - argocd
      add-default-securitycontext:
        exclude:
          any:
          - resources:
              namespaces:
              - kube-system
          - resources:
              names:
              - promtail-promtail*
              namespaces:
              - promtail
          - resources:
              names:
              - neuvector-enforcer-pod-*
              - neuvector-controller-pod-*
              - neuvector-cert-upgrader-job-*
              namespaces:
              - neuvector
          - resources:
              names:
              - speaker-*
              namespaces:
              - metallb-system
          - resources:
              names:
              - guestbook*
              namespaces:
              - argocd
          - resources:
              names:
              - velero-backup-restore-test*
              namespaces:
              - velero
          - resources:
              names:
              - volume-upgrade-job*
              namespaces:
              - twistlock
          - resources:
              names:
              - alloy-config-validator*
              - alloy-config-analysis*
              - alloy-test*
              namespaces:
              - alloy
      clone-configs:
        parameters:
          clone:
          - kind: ConfigMap
            name: clone-configs-1
            namespace: '{{ .Release.Namespace }}'
          - kind: Secret
            name: clone-configs-2
            namespace: '{{ .Release.Namespace }}'
      disallow-annotations:
        parameters:
          disallow:
          - 'kyverno-policies-bbtest/test: disallowed'
          - kyverno-policies-bbtest/disallowed
      disallow-labels:
        parameters:
          disallow:
          - 'kyverno-policies-bbtest/test: disallowed'
          - kyverno-policies-bbtest/disallowed
      disallow-namespaces:
        parameters:
          disallow:
          - bigbang
          - default
          - bigbang
      disallow-tolerations:
        parameters:
          disallow:
          - effect: NoSchedule
            key: notallowed
            value: "false"
          - effect: '*NoSchedule'
            key: disa??owed
            value: "true"
      require-annotations:
        parameters:
          require:
          - 'kyverno-policies-bbtest/test: required'
          - kyverno-policies-bbtest/required
      require-drop-all-capabilities:
        exclude:
          any:
          - resources:
              names:
              - neuvector-enforcer-pod*
              - neuvector-cert-upgrader-job-*
              - neuvector-controller-pod*
              - neuvector-scanner-pod*
              - neuvector-prometheus-exporter-pod*
              namespaces:
              - neuvector
          - resources:
              names:
              - twistlock-defender-ds*
              namespaces:
              - twistlock
          - resources:
              names:
              - neuvector-enforcer-pod*
              - neuvector-controller-pod*
              - neuvector-prometheus-exporter-pod*
              namespaces:
              - neuvector
          - resources:
              names:
              - guestbook-ui-*
              namespaces:
              - argocd
      require-image-signature:
        enabled: false
        parameters:
          require:
          - attestors:
            - count: 1
              entries:
              - keys:
                  publicKeys: |-
                    -----BEGIN PUBLIC KEY-----
                    MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE8nXRh950IZbRj8Ra/N9sbqOPZrfM
                    5/KAQN0/KjHcorm/J5yctVd7iEcnessRQjU917hmKO6JWVGHpDguIyakZA==
                    -----END PUBLIC KEY-----
                  rekor:
                    ignoreTlog: true
                    url: ""
            imageReferences:
            - ghcr.io/kyverno/test-verify-image:*
            mutateDigest: false
            verifyDigest: false
          - attestors:
            - count: 1
              entries:
              - keys:
                  publicKeys: |-
                    -----BEGIN PUBLIC KEY-----
                    MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE7CjMGH005DFFz6mffqTIGurBt6fL
                    UfTZxuEDFRBS8mFJx1xw8DEVvjMibLTtqmAoJxUmzmGFgzz+LV875syVEg==
                    -----END PUBLIC KEY-----
                  rekor:
                    ignoreTlog: true
                    url: ""
            imageReferences:
            - registry1.dso.mil/ironbank/*
            mutateDigest: false
            verifyDigest: false
        validationFailureAction: Audit
      require-labels:
        parameters:
          require:
          - app.kubernetes.io/name
          - app.kubernetes.io/version
          - 'kyverno-policies-bbtest/test: required'
          - kyverno-policies-bbtest/required
      require-non-root-group:
        exclude:
          any:
          - resources:
              namespaces:
              - kube-system
          - resources:
              names:
              - istiod*
              namespaces:
              - istio-system
          - resources:
              names:
              - promtail-promtail*
              namespaces:
              - promtail
          - resources:
              names:
              - neuvector-enforcer-pod-*
              - neuvector-controller-pod-*
              - neuvector-cert-upgrader-job-*
              namespaces:
              - neuvector
          - resources:
              names:
              - fortify-mysql-*
              namespaces:
              - fortify
          - resources:
              names:
              - speaker-*
              - controller-*
              namespaces:
              - metallb-system
          - resources:
              names:
              - velero-backup-restore-test*
              namespaces:
              - velero
          - resources:
              names:
              - alloy-config-validator*
              - alloy-config-analysis*
              - alloy-test*
              namespaces:
              - alloy
      require-non-root-user:
        exclude:
          any:
          - resources:
              namespaces:
              - kube-system
          - resources:
              names:
              - kiali-*
              namespaces:
              - kiali
          - resources:
              names:
              - neuvector*
              namespaces:
              - neuvector
          - resources:
              names:
              - promtail-promtail*
              namespaces:
              - promtail
          - resources:
              names:
              - speaker-*
              namespaces:
              - metallb-system
          - resources:
              names:
              - guestbook*
              namespaces:
              - argocd
          - resources:
              names:
              - velero-backup-restore-test*
              namespaces:
              - velero
          - resources:
              names:
              - volume-upgrade-job*
              namespaces:
              - twistlock
          - resources:
              names:
              - alloy-config-validator*
              - alloy-config-analysis*
              - alloy-test*
              namespaces:
              - alloy
      restrict-external-ips:
        parameters:
          allow:
          - 192.168.0.1
      restrict-external-names:
        parameters:
          allow:
          - allowed
      restrict-host-path-mount:
        exclude:
          any:
          - resources:
              names:
              - promtail-promtail*
              namespaces:
              - promtail
          - resources:
              names:
              - monitoring-monitoring-prometheus-node-exporter*
              namespaces:
              - monitoring
          - resources:
              names:
              - neuvector-enforcer-pod*
              - neuvector-cert-upgrader-job-*
              - neuvector-controller-pod*
              namespaces:
              - neuvector
          - resources:
              names:
              - '*-cypress-test*'
              namespaces:
              - anchore
              - backstage
              - bbctl
              - gitlab
              - gitlab-runner
              - kiali
              - cluster-auditor
              - mattermost
              - nexus-repository-manager
              - keycloak
              - kyverno-reporter
              - mimir
              - monitoring
              - vault
              - logging
              - twistlock
              - sonarqube
              - logging
              - tempo
              - argocd
              - minio
              - minio-operator
              - neuvector
              - harbor
              - fortify
              - thanos
              - alloy
              - headlamp
        parameters:
          allow:
          - /tmp/allowed
      restrict-host-path-mount-pv:
        parameters:
          allow:
          - /tmp/allowed
          - /var/lib/rancher/k3s/storage/pvc-*
        validationFailureAction: audit
      restrict-host-path-write:
        exclude:
          any:
          - resources:
              names:
              - neuvector-controller-pod*
              - neuvector-enforcer-pod*
              namespaces:
              - neuvector
          - resources:
              names:
              - '*-cypress-test*'
              namespaces:
              - anchore
              - backstage
              - bbctl
              - gitlab
              - gitlab-runner
              - kiali
              - cluster-auditor
              - mattermost
              - nexus-repository-manager
              - keycloak
              - kyverno-reporter
              - mimir
              - monitoring
              - vault
              - logging
              - twistlock
              - sonarqube
              - logging
              - tempo
              - argocd
              - minio
              - minio-operator
              - neuvector
              - harbor
              - fortify
              - thanos
              - alloy
              - headlamp
          - resources:
              names:
              - neuvector-enforcer-*
              - neuvector-manager-*
              namespaces:
              - neuvector
        parameters:
          allow:
          - /run/promtail
          - /tmp/allowed
      restrict-host-ports:
        parameters:
          allow:
          - "63999"
          - '>= 64000 & < 65000'
          - '> 65000'
      restrict-image-registries:
        exclude:
          any:
          - resources:
              names:
              - '*-ingressgateway'
              - '*-egressgateway'
              namespaces:
              - istio-gateway
          - resources:
              namespaces:
              - gitlab
      restrict-volume-types:
        exclude:
          any:
          - resources:
              names:
              - promtail-promtail*
              namespaces:
              - promtail
          - resources:
              names:
              - monitoring-monitoring-prometheus-node-exporter*
              namespaces:
              - monitoring
          - resources:
              names:
              - neuvector-enforcer-pod*
              - neuvector-controller-pod*
              namespaces:
              - neuvector
          - resources:
              names:
              - '*-cypress-test*'
              namespaces:
              - anchore
              - backstage
              - bbctl
              - gitlab
              - gitlab-runner
              - kiali
              - cluster-auditor
              - mattermost
              - nexus-repository-manager
              - keycloak
              - kyverno-reporter
              - mimir
              - monitoring
              - vault
              - logging
              - twistlock
              - sonarqube
              - logging
              - tempo
              - argocd
              - minio
              - minio-operator
              - neuvector
              - harbor
              - fortify
              - thanos
              - alloy
              - headlamp
      update-image-registry:
        parameters:
          update:
          - from: replace.image.registry
            to: registry1.dso.mil
---
# Source: bigbang/templates/kyverno-reporter/imagepullsecret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: private-registry
  namespace: kyverno-reporter
  labels:
    app.kubernetes.io/name: kyverno-reporter
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeTEuZHNvLm1pbCI6eyJ1c2VybmFtZSI6ImdtaWVybmlja2kiLCJwYXNzd29yZCI6IjRjZHp1RU8zRyIsImVtYWlsIjoiIiwiYXV0aCI6IloyMXBaWEp1YVdOcmFUbzBZMlI2ZFVWUE0wYz0ifX19
---
# Source: bigbang/templates/kyverno-reporter/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: bigbang-kyverno-reporter-values
  namespace: bigbang
type: generic
stringData:
  common: ""
  defaults:
    "\n\nglobal:\n  fullnameOverride: kyverno-reporter\n\nimage:\n  pullPolicy: IfNotPresent\nimagePullSecrets:\n-
      name: private-registry\nistio:\n  enabled: true\npodAnnotations:\n  bigbang.dev/istioVersion:
      1.25.3\n\nkyvernoPlugin:\n  image:\n    pullPolicy: IfNotPresent\n  imagePullSecrets:\n
      \ - name: private-registry\n  podAnnotations:\n    bigbang.dev/istioVersion: 1.25.3\n\nui:\n
      \ image:\n    pullPolicy: IfNotPresent\n  imagePullSecrets:\n  - name: private-registry\n
      \ podAnnotations:\n    bigbang.dev/istioVersion: 1.25.3\n\nmonitoring:\n  enabled:
      true\n  grafana:\n    namespace: monitoring\n  serviceMonitor:\n    scheme: https\n
      \   tlsConfig:\n      caFile: /etc/prom-certs/root-cert.pem\n      certFile: /etc/prom-certs/cert-chain.pem\n
      \     keyFile: /etc/prom-certs/key.pem\n      insecureSkipVerify: true  # Prometheus
      does not support Istio security naming, thus skip verifying target pod certificate\n
      \ kyverno:\n    serviceMonitor:\n      scheme: https\n      tlsConfig:\n        caFile:
      /etc/prom-certs/root-cert.pem\n        certFile: /etc/prom-certs/cert-chain.pem\n
      \       keyFile: /etc/prom-certs/key.pem\n        insecureSkipVerify: true  # Prometheus
      does not support Istio security naming, thus skip verifying target pod certificate\n\nopenshift:
      false\n\nnetworkPolicies:\n  enabled: true\n  istioNamespaceSelector:\n  \n    ingress:
      istio-gateway\n    egress: istio-system\n  controlPlaneCidr: 0.0.0.0/0"
  overlays: |
    bbtests:
      cypress:
        envs:
          cypress_check_datasource: "true"
          cypress_grafana_url: https://grafana.dev.bigbang.mil
          cypress_prometheus_url: https://prometheus.dev.bigbang.mil
        resources:
          limits:
            cpu: 2
            memory: 3Gi
          requests:
            cpu: 2
            memory: 3Gi
      enabled: true
    istio:
      hardened:
        customServiceEntries:
        - enabled: true
          name: cypress-service-entries-kyvernoreporter
          spec:
            exportTo:
            - .
            hosts:
            - registry.npmjs.org
            - download.cypress.io
            - cdn.cypress.io
            - repo1.dso.mil
            - prometheus.dev.bigbang.mil
            location: MESH_EXTERNAL
            ports:
            - name: https
              number: 443
              protocol: TLS
            resolution: DNS
---
# Source: bigbang/templates/kyverno/imagepullsecret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: private-registry
  namespace: kyverno
  labels:
    app.kubernetes.io/name: kyverno
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeTEuZHNvLm1pbCI6eyJ1c2VybmFtZSI6ImdtaWVybmlja2kiLCJwYXNzd29yZCI6IjRjZHp1RU8zRyIsImVtYWlsIjoiIiwiYXV0aCI6IloyMXBaWEp1YVdOcmFUbzBZMlI2ZFVWUE0wYz0ifX19
---
# Source: bigbang/templates/kyverno/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: bigbang-kyverno-values
  namespace: bigbang
type: generic
stringData:
  common: ""
  defaults:
    |2-
    
      replicaCount: 3
    
      image:
        pullSecrets:
        - name: private-registry
        pullPolicy: IfNotPresent
    
      openshift: false
    
      networkPolicies:
        enabled: true
        controlPlaneCidr: 0.0.0.0/0
    
      serviceMonitor:
        enabled: true
        dashboards:
          namespace: monitoring
    
      admissionController:
        serviceMonitor:
          enabled: true
    
      backgroundController:
        serviceMonitor:
          enabled: true
    
      cleanupController:
        serviceMonitor:
          enabled: true
    
      reportsController:
        serviceMonitor:
          enabled: true
    
      grafana:
        enabled: true
        namespace: monitoring
    
      istio:
        enabled: true
  overlays: |
    bbtests:
      enabled: true
    kyverno:
      admissionController:
        container:
          extraArgs:
            webhookTimeout: 30
          resources:
            limits:
              cpu: 1
              memory: 768Mi
            requests:
              cpu: 1
              memory: 768Mi
      features:
        policyexceptions:
          enabled: true
          namespace: kyverno
      networkPolicies:
        externalRegistries:
          allowEgress: true
---
# Source: bigbang/templates/loki/imagepullsecret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: private-registry
  namespace: logging
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeTEuZHNvLm1pbCI6eyJ1c2VybmFtZSI6ImdtaWVybmlja2kiLCJwYXNzd29yZCI6IjRjZHp1RU8zRyIsImVtYWlsIjoiIiwiYXV0aCI6IloyMXBaWEp1YVdOcmFUbzBZMlI2ZFVWUE0wYz0ifX19
---
# Source: bigbang/templates/loki/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: bigbang-loki-values
  namespace: bigbang
type: generic
stringData:
  common: ""
  defaults:
    "\n# hostname is deprecated and replaced with domain. But if hostname exists then
      use it.\nhostname: dev.bigbang.mil\ndomain: dev.bigbang.mil\n\nclusterName: \"\"\n\nopenshift:
      false\n\nistio:\n  enabled: true\n  loki:\n    enabled: true\n    gateways:\n      -
      istio-gateway/public-ingressgateway\n\nimagePullSecrets:\n  - name: private-registry\n\nimage:\n
      \ pullPolicy: IfNotPresent\n\nnetworkPolicies:\n  enabled: true\n  controlPlaneCidr:
      0.0.0.0/0\n  istioNamespaceSelector:\n  \n    ingress: istio-gateway\n    egress:
      istio-system\n\nmonitoring:\n  enabled: true\n  serviceMonitor:\n    enabled: true\n
      \   # conditional passes only for default istio: enabled, mTLS: SCRICT\n    scheme:
      https\n    tlsConfig:\n      caFile: /etc/prom-certs/root-cert.pem\n      certFile:
      /etc/prom-certs/cert-chain.pem\n      keyFile: /etc/prom-certs/key.pem\n      insecureSkipVerify:
      true  # Prometheus does not support Istio security naming, thus skip verifying target
      pod certificate\n  rules:\n    enabled: true\n    alerting: true\npromtail:\n  enabled:
      true\n\nloki:\n  extraMemberlistConfig:\n    bind_addr:\n      - ${MY_POD_IP}\n
      \ storage:\n    type: \"s3\"\n    bucketNames:\n      {}\n    s3:\n      endpoint:
      \n      region: \n      accessKeyId: \n      secretAccessKey: \n  # The bbctl violations
      dashboard output can be larger than the default loki line limit of 256KB\n  # Setting
      max_line_size = 0 removes the limit so the data can be ingested properly\n  limits_config:\n
      \   max_line_size: 0\n  podAnnotations:\n    bigbang.dev/istioVersion: 1.25.3\ndeploymentMode:
      SimpleScalable\nsingleBinary:\n  replicas: 0\nread:\n  replicas: 3\n  extraArgs:\n
      \   - -config.expand-env=true\n  extraEnv:\n    - name: MY_POD_IP\n      valueFrom:\n
      \       fieldRef:\n          fieldPath: status.podIP\nwrite:\n  replicas: 3\n  extraArgs:\n
      \   - -config.expand-env=true\n  extraEnv:\n    - name: MY_POD_IP\n      valueFrom:\n
      \       fieldRef:\n          fieldPath: status.podIP\nbackend:\n  replicas: 3\n
      \ extraArgs:\n    - -config.expand-env=true\n  extraEnv:\n    - name: MY_POD_IP\n
      \     valueFrom:\n        fieldRef:\n          fieldPath: status.podIP\ngateway:\n
      \ enabled: true\n  extraArgs:\n    - -config.expand-env=true\n  extraEnv:\n    -
      name: MY_POD_IP\n      valueFrom:\n        fieldRef:\n          fieldPath: status.podIP\n\n#
      Allows users to deploy distributed mode but calls out that we do not support it"
  overlays: |
    backend:
      persistence:
        size: 2Gi
      replicas: 3
      resources:
        limits:
          cpu: 500m
          memory: 1G
        requests:
          cpu: 500m
          memory: 1G
    bbtests:
      cypress:
        envs:
          cypress_check_datasource: "true"
          cypress_grafana_url: https://grafana.dev.bigbang.mil
      enabled: true
      scripts:
        envs:
          LOKI_URL: http://logging-loki-write.logging.svc:3100
    istio:
      hardened:
        customServiceEntries:
        - enabled: true
          name: cypress-service-entries-loki
          spec:
            hosts:
            - registry.npmjs.org
            - download.cypress.io
            - cdn.cypress.io
            - repo1.dso.mil
            - grafana.dev.bigbang.mil
            - optimizationguide-pa.googleapis.com
            - clientservices.googleapis.com
            - accounts.google.com
            - redirector.gvt1.com
            - content-autofill.googleapis.com
            - safebrowsing.googleapis.com
            location: MESH_EXTERNAL
            ports:
            - name: https
              number: 443
              protocol: TLS
            resolution: DNS
      loki:
        enabled: true
    minio:
      enabled: true
    read:
      persistence:
        size: 2Gi
      replicas: 3
      resources:
        limits:
          cpu: 400m
          memory: 500Mi
        requests:
          cpu: 400m
          memory: 500Mi
    write:
      persistence:
        size: 2Gi
      replicas: 3
      resources:
        limits:
          cpu: 1
          memory: 1G
        requests:
          cpu: 1
          memory: 1G
---
# Source: bigbang/templates/minio-operator/imagepullsecret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: private-registry
  namespace: minio-operator
  labels:
    app.kubernetes.io/name: minioOperator
    app.kubernetes.io/component: "application-utilities"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeTEuZHNvLm1pbCI6eyJ1c2VybmFtZSI6ImdtaWVybmlja2kiLCJwYXNzd29yZCI6IjRjZHp1RU8zRyIsImVtYWlsIjoiIiwiYXV0aCI6IloyMXBaWEp1YVdOcmFUbzBZMlI2ZFVWUE0wYz0ifX19
---
# Source: bigbang/templates/minio-operator/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: bigbang-minio-operator-values
  namespace: bigbang
type: generic
stringData:
  common: ""
  defaults:
    "\n# hostname is deprecated and replaced with domain. But if hostname exists then
      use it.\nhostname: dev.bigbang.mil\ndomain: dev.bigbang.mil\n\npodAnnotations:\n
      \ sidecar.istio.io/inject: \"true\"\n  traffic.sidecar.istio.io/includeInboundPorts:
      \"*\"\n  traffic.sidecar.istio.io/excludeInboundPorts: \"9443\"\n\nconsole:\n  imagePullSecrets:\n
      \   - name: private-registry\n\noperator:\n  image:\n    pullPolicy: IfNotPresent\n
      \ imagePullSecrets:\n    - name: private-registry\n  env:\n    - name: MINIO_OPERATOR_TLS_ENABLE\n
      \     value: \"on\"\n    - name: CLUSTER_DOMAIN\n      value: \"cluster.local\"\n
      \   - name: WATCHED_NAMESPACE\n      value: \"\"\n    - name: PROMETHEUS_NAMESPACE\n
      \     value: \"monitoring\"\n\nnetworkPolicies:\n  enabled: true\n  controlPlaneCidr:
      0.0.0.0/0\n  istioNamespaceSelector:\n  \n    ingress: istio-gateway\n    egress:
      istio-system\n  ingressLabels:\n    app: public-ingressgateway\n    istio: ingressgateway\n\nistio:\n
      \ enabled: true\n  hardened:\n    enabled: false\n  console:\n    gateways:\n      -
      istio-gateway/public-ingressgateway\nannotations:\n  bigbang.dev/istioVersion: 1.25.3\n\nmonitoring:\n
      \ enabled: true"
  overlays: |
    bbtests:
      enabled: true
    console:
      enabled: true
    istio:
      console:
        enabled: false
      hardened:
        customAuthorizationPolicies:
        - enabled: true
          name: allow-intranamespace-minio-operator
          spec:
            action: ALLOW
            rules:
            - from:
              - source:
                  namespaces:
                  - minio-operator
        customServiceEntries:
        - enabled: true
          name: cypress-service-entries-minio-operator
          spec:
            exportTo:
            - .
            hosts:
            - registry.npmjs.org
            - download.cypress.io
            - cdn.cypress.io
            - repo1.dso.mil
            - minio-operator.dev.bigbang.mil
            location: MESH_EXTERNAL
            ports:
            - name: https
              number: 443
              protocol: TLS
            resolution: DNS
---
# Source: bigbang/templates/monitoring/imagepullsecret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: private-registry
  namespace: monitoring
  labels:
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeTEuZHNvLm1pbCI6eyJ1c2VybmFtZSI6ImdtaWVybmlja2kiLCJwYXNzd29yZCI6IjRjZHp1RU8zRyIsImVtYWlsIjoiIiwiYXV0aCI6IloyMXBaWEp1YVdOcmFUbzBZMlI2ZFVWUE0wYz0ifX19
---
# Source: bigbang/templates/monitoring/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: bigbang-monitoring-values
  namespace: bigbang
type: generic
stringData:
  common: ""
  defaults:
    "\n# hostname is deprecated and replaced with domain. But if hostname exists then
      use it.\nhostname: dev.bigbang.mil\ndomain: dev.bigbang.mil\n\nflux:\n  enabled:
      true\n\nnetworkPolicies:\n  enabled: true\n  istioNamespaceSelector:\n  \n    ingress:
      istio-gateway\n    egress: istio-system\n  controlPlaneCidr: 0.0.0.0/0\n  ingressLabels:\n
      \   app: public-ingressgateway\n    istio: ingressgateway\n\nopenshift: false\n\nminioOperator:\n
      \ enabled: true\n\ngitlabRunner:\n  enabled: false\n\nistio:\n  enabled: true\n
      \ hardened:\n    enabled: false\n    loki:\n      enabled: false\n    alloy:\n      enabled:
      false\n  clusterWideHardenedEnabled: false\n  prometheus:\n    enabled: true\n    gateways:\n
      \     - istio-gateway/public-ingressgateway\n  alertmanager:\n    enabled: true\n
      \   gateways:\n      - istio-gateway/public-ingressgateway\n  injection: enabled\n\nalertmanager:\n
      \ alertmanagerSpec:\n    # The operator performs a strategic merge to add our imagePullPolicy
      definition to the default containers\n    # NOTE: This functionality is not actively
      maintained upstream and may not work in a future monitoring upgrade\n    containers:\n
      \     - name: \"alertmanager\"\n        imagePullPolicy: IfNotPresent\n      - name:
      \"config-reloader\"\n        imagePullPolicy: IfNotPresent\n    podMetadata:\n      labels:\n
      \     annotations:\n        bigbang.dev/istioVersion: 1.25.3\n  serviceMonitor:\n
      \   scheme: https\n    tlsConfig:\n      caFile: /etc/prom-certs/root-cert.pem\n
      \     certFile: /etc/prom-certs/cert-chain.pem\n      keyFile: /etc/prom-certs/key.pem\n
      \     insecureSkipVerify: true  # Prometheus does not support Istio security naming,
      thus skip verifying target pod certificate\n\nprometheus:\n  monitor:\n    relabelings:\n
      \     - action: replace\n        replacement: logging-loki\n        targetLabel:
      cluster\n  prometheusSpec:\n    alertingEndpoints:\n    - name: monitoring-monitoring-kube-alertmanager\n
      \     namespace: monitoring\n      apiVersion: v2\n      port: http-web\n      pathPrefix:
      /\n      scheme: https\n      tlsConfig:\n        caFile: /etc/prom-certs/root-cert.pem\n
      \       certFile: /etc/prom-certs/cert-chain.pem\n        keyFile: /etc/prom-certs/key.pem\n
      \       insecureSkipVerify: true  # Prometheus does not support Istio security naming,
      thus skip verifying target pod certificate\n\n    # The operator performs a strategic
      merge to add our imagePullPolicy definition to the default containers\n    # NOTE:
      This functionality is not actively maintained upstream and may not work in a future
      monitoring upgrade\n    containers:\n      - name: \"prometheus\"\n        imagePullPolicy:
      IfNotPresent\n      - name: \"config-reloader\"\n        imagePullPolicy: IfNotPresent\n
      \   enableRemoteWriteReceiver: true\n    podMetadata:\n      labels:\n        app:
      prometheus\n      annotations:\n        bigbang.dev/istioVersion: 1.25.3\n        traffic.sidecar.istio.io/includeOutboundIPRanges:
      \"\"\n        proxy.istio.io/config: |\n          proxyMetadata:\n            OUTPUT_CERTS:
      /etc/istio-output-certs\n        sidecar.istio.io/userVolumeMount: '[{\"name\":
      \"istio-certs\", \"mountPath\": \"/etc/istio-output-certs\"}]'           \n    #
      Scrape config for service endpoints.\n    #\n    # The relabeling allows the actual
      service scrape endpoint to be configured\n    # via the following annotations:\n
      \   #\n    # * `prometheus.io/scrape`: Only scrape services that have a value of
      `true`\n    # * `prometheus.io/scheme`: If the metrics endpoint is secured then
      you will need\n    # to set this to `https` & most likely set the `tls_config` of
      the scrape config.\n    # * `prometheus.io/path`: If the metrics path is not `/metrics`
      override this.\n    # * `prometheus.io/port`: If the metrics are exposed on a different
      port to the\n    # service then set this appropriately.\n    # Example scrape config
      for pods\n    #\n    # The relabeling allows the actual pod scrape endpoint to be
      configured via the\n    # following annotations:\n    #\n    # * `prometheus.io/scrape`:
      Only scrape pods that have a value of `true`\n    # * `prometheus.io/path`: If the
      metrics path is not `/metrics` override this.\n    # * `prometheus.io/port`: Scrape
      the pod on the indicated port instead of the default of `9102`.    \n    # Add volume/mount
      for Istio certs for mTLS scraping\n    volumes:\n      - emptyDir:\n          medium:
      Memory\n        name: istio-certs\n    volumeMounts:\n      - mountPath: /etc/prom-certs/\n
      \       name: istio-certs\n\n\nanchore:\n  enabled: false\n\nkiali:\n  enabled:
      true\n\nloki:\n  enabled: true\n\ntempo:\n  enabled: true\n\nvault:\n  enabled:
      false\n  tlsDisable: false\n\nglobal:\n  imagePullSecrets:\n  - name: private-registry\n\nsso:\n
      \ enabled: false\n\nprometheus-node-exporter:\n  image:\n    pullPolicy: IfNotPresent\n
      \ prometheus:\n    monitor:\n      relabelings:\n        - action: replace\n          replacement:
      logging-loki\n          targetLabel: cluster\n        - targetLabel: \"instance\"\n
      \         sourceLabels:\n            - \"__meta_kubernetes_pod_node_name\"\n      scheme:
      https\n      tlsConfig:\n        caFile: /etc/prom-certs/root-cert.pem\n        certFile:
      /etc/prom-certs/cert-chain.pem\n        keyFile: /etc/prom-certs/key.pem\n        insecureSkipVerify:
      true  # Prometheus does not support Istio security naming, thus skip verifying target
      pod certificate\n  podAnnotations:\n    bigbang.dev/istioVersion: 1.25.3\nkubelet:\n
      \ serviceMonitor:\n    cAdvisorRelabelings:\n      - action: replace\n        replacement:
      logging-loki\n        targetLabel: cluster\n      - targetLabel: metrics_path\n
      \       sourceLabels:\n          - \"__metrics_path__\"\n      - targetLabel: \"instance\"\n
      \       sourceLabels:\n          - \"node\"\ndefaultRules:\n  additionalRuleLabels:\n
      \   cluster: logging-loki\n\nkube-state-metrics:\n  image:\n    pullPolicy: IfNotPresent\n
      \ prometheus:\n    monitor:\n      relabelings:\n        - action: replace\n          replacement:
      logging-loki\n          targetLabel: cluster\n        - targetLabel: \"instance\"\n
      \         sourceLabels:\n            - \"__meta_kubernetes_pod_node_name\"\n      scheme:
      https\n      tlsConfig:\n        caFile: /etc/prom-certs/root-cert.pem\n        certFile:
      /etc/prom-certs/cert-chain.pem\n        keyFile: /etc/prom-certs/key.pem\n        insecureSkipVerify:
      true  # Prometheus does not support Istio security naming, thus skip verifying target
      pod certificate\n  podAnnotations:\n    bigbang.dev/istioVersion: 1.25.3\n  \n  #
      Add in the custom resource states, so the grafana flux charts work\n  # See Documentation
      for flux -- https://fluxcd.io/flux/monitoring/metrics/\n  # These overrides are
      found in https://github.com/fluxcd/flux2-monitoring-example/blob/main/monitoring/controllers/kube-prometheus-stack/kube-state-metrics-config.yaml\n
      \ #\n  # For kube-prometheus-stacks that are already installed and configured with\n
      \ # custom collectors, commenting out the collectors and extraArgs below will\n
      \ # retain any existing kube-state-metrics configuration.\n  #collectors: [ ]\n
      \ #extraArgs:  \n  #  - --custom-resource-state-only=true\n  rbac:\n    extraRules:\n
      \     - apiGroups:\n          - source.toolkit.fluxcd.io\n          - kustomize.toolkit.fluxcd.io\n
      \         - helm.toolkit.fluxcd.io\n          - notification.toolkit.fluxcd.io\n
      \         - image.toolkit.fluxcd.io\n        resources:\n          - gitrepositories\n
      \         - buckets\n          - helmrepositories\n          - helmcharts\n          -
      ocirepositories\n          - kustomizations\n          - helmreleases\n          -
      alerts\n          - providers\n          - receivers\n          - imagerepositories\n
      \         - imagepolicies\n          - imageupdateautomations\n        verbs: [
      \"list\", \"watch\" ]\n  customResourceState:\n    enabled: true\n    config:\n
      \     spec:\n        resources:\n          - groupVersionKind:\n              group:
      kustomize.toolkit.fluxcd.io\n              version: v1\n              kind: Kustomization\n
      \           metricNamePrefix: gotk\n            metrics:\n              - name:
      \"resource_info\"\n                help: \"The current state of a Flux Kustomization
      resource.\"\n                each:\n                  type: Info\n                  info:\n
      \                   labelsFromPath:\n                      name: [ metadata, name
      ]\n                labelsFromPath:\n                  exported_namespace: [ metadata,
      namespace ]\n                  ready: [ status, conditions, \"[type=Ready]\", status
      ]\n                  suspended: [ spec, suspend ]\n                  revision: [
      status, lastAppliedRevision ]\n                  source_name: [ spec, sourceRef,
      name ]\n          - groupVersionKind:\n              group: helm.toolkit.fluxcd.io\n
      \             version: v2\n              kind: HelmRelease\n            metricNamePrefix:
      gotk\n            metrics:\n              - name: \"resource_info\"\n                help:
      \"The current state of a Flux HelmRelease resource.\"\n                each:\n                  type:
      Info\n                  info:\n                    labelsFromPath:\n                      name:
      [ metadata, name ]\n                labelsFromPath:\n                  exported_namespace:
      [ metadata, namespace ]\n                  ready: [ status, conditions, \"[type=Ready]\",
      status ]\n                  suspended: [ spec, suspend ]\n                  revision:
      [ status, history, \"0\", chartVersion ]\n                  chart_name: [ status,
      history, \"0\", chartName ]\n                  chart_app_version: [ status, history,
      \"0\", appVersion ]\n                  chart_ref_name: [ spec, chartRef, name ]\n
      \                 chart_source_name: [ spec, chart, spec, sourceRef, name ]\n          -
      groupVersionKind:\n              group: source.toolkit.fluxcd.io\n              version:
      v1\n              kind: GitRepository\n            metricNamePrefix: gotk\n            metrics:\n
      \             - name: \"resource_info\"\n                help: \"The current state
      of a Flux GitRepository resource.\"\n                each:\n                  type:
      Info\n                  info:\n                    labelsFromPath:\n                      name:
      [ metadata, name ]\n                labelsFromPath:\n                  exported_namespace:
      [ metadata, namespace ]\n                  ready: [ status, conditions, \"[type=Ready]\",
      status ]\n                  suspended: [ spec, suspend ]\n                  revision:
      [ status, artifact, revision ]\n                  url: [ spec, url ]\n          -
      groupVersionKind:\n              group: source.toolkit.fluxcd.io\n              version:
      v1\n              kind: Bucket\n            metricNamePrefix: gotk\n            metrics:\n
      \             - name: \"resource_info\"\n                help: \"The current state
      of a Flux Bucket resource.\"\n                each:\n                  type: Info\n
      \                 info:\n                    labelsFromPath:\n                      name:
      [ metadata, name ]\n                labelsFromPath:\n                  exported_namespace:
      [ metadata, namespace ]\n                  ready: [ status, conditions, \"[type=Ready]\",
      status ]\n                  suspended: [ spec, suspend ]\n                  revision:
      [ status, artifact, revision ]\n                  endpoint: [ spec, endpoint ]\n
      \                 bucket_name: [ spec, bucketName ]\n          - groupVersionKind:\n
      \             group: source.toolkit.fluxcd.io\n              version: v1\n              kind:
      HelmRepository\n            metricNamePrefix: gotk\n            metrics:\n              -
      name: \"resource_info\"\n                help: \"The current state of a Flux HelmRepository
      resource.\"\n                each:\n                  type: Info\n                  info:\n
      \                   labelsFromPath:\n                      name: [ metadata, name
      ]\n                labelsFromPath:\n                  exported_namespace: [ metadata,
      namespace ]\n                  ready: [ status, conditions, \"[type=Ready]\", status
      ]\n                  suspended: [ spec, suspend ]\n                  revision: [
      status, artifact, revision ]\n                  url: [ spec, url ]\n          -
      groupVersionKind:\n              group: source.toolkit.fluxcd.io\n              version:
      v1\n              kind: HelmChart\n            metricNamePrefix: gotk\n            metrics:\n
      \             - name: \"resource_info\"\n                help: \"The current state
      of a Flux HelmChart resource.\"\n                each:\n                  type:
      Info\n                  info:\n                    labelsFromPath:\n                      name:
      [ metadata, name ]\n                labelsFromPath:\n                  exported_namespace:
      [ metadata, namespace ]\n                  ready: [ status, conditions, \"[type=Ready]\",
      status ]\n                  suspended: [ spec, suspend ]\n                  revision:
      [ status, artifact, revision ]\n                  chart_name: [ spec, chart ]\n
      \                 chart_version: [ spec, version ]\n          - groupVersionKind:\n
      \             group: source.toolkit.fluxcd.io\n              version: v1beta2\n
      \             kind: OCIRepository\n            metricNamePrefix: gotk\n            metrics:\n
      \             - name: \"resource_info\"\n                help: \"The current state
      of a Flux OCIRepository resource.\"\n                each:\n                  type:
      Info\n                  info:\n                    labelsFromPath:\n                      name:
      [ metadata, name ]\n                labelsFromPath:\n                  exported_namespace:
      [ metadata, namespace ]\n                  ready: [ status, conditions, \"[type=Ready]\",
      status ]\n                  suspended: [ spec, suspend ]\n                  revision:
      [ status, artifact, revision ]\n                  url: [ spec, url ]\n          -
      groupVersionKind:\n              group: notification.toolkit.fluxcd.io\n              version:
      v1beta3\n              kind: Alert\n            metricNamePrefix: gotk\n            metrics:\n
      \             - name: \"resource_info\"\n                help: \"The current state
      of a Flux Alert resource.\"\n                each:\n                  type: Info\n
      \                 info:\n                    labelsFromPath:\n                      name:
      [ metadata, name ]\n                labelsFromPath:\n                  exported_namespace:
      [ metadata, namespace ]\n                  suspended: [ spec, suspend ]\n          -
      groupVersionKind:\n              group: notification.toolkit.fluxcd.io\n              version:
      v1beta3\n              kind: Provider\n            metricNamePrefix: gotk\n            metrics:\n
      \             - name: \"resource_info\"\n                help: \"The current state
      of a Flux Provider resource.\"\n                each:\n                  type: Info\n
      \                 info:\n                    labelsFromPath:\n                      name:
      [ metadata, name ]\n                labelsFromPath:\n                  exported_namespace:
      [ metadata, namespace ]\n                  suspended: [ spec, suspend ]\n          -
      groupVersionKind:\n              group: notification.toolkit.fluxcd.io\n              version:
      v1\n              kind: Receiver\n            metricNamePrefix: gotk\n            metrics:\n
      \             - name: \"resource_info\"\n                help: \"The current state
      of a Flux Receiver resource.\"\n                each:\n                  type: Info\n
      \                 info:\n                    labelsFromPath:\n                      name:
      [ metadata, name ]\n                labelsFromPath:\n                  exported_namespace:
      [ metadata, namespace ]\n                  ready: [ status, conditions, \"[type=Ready]\",
      status ]\n                  suspended: [ spec, suspend ]\n                  webhook_path:
      [ status, webhookPath ]\n          - groupVersionKind:\n              group: image.toolkit.fluxcd.io\n
      \             version: v1beta2\n              kind: ImageRepository\n            metricNamePrefix:
      gotk\n            metrics:\n              - name: \"resource_info\"\n                help:
      \"The current state of a Flux ImageRepository resource.\"\n                each:\n
      \                 type: Info\n                  info:\n                    labelsFromPath:\n
      \                     name: [ metadata, name ]\n                labelsFromPath:\n
      \                 exported_namespace: [ metadata, namespace ]\n                  ready:
      [ status, conditions, \"[type=Ready]\", status ]\n                  suspended: [
      spec, suspend ]\n                  image: [ spec, image ]\n          - groupVersionKind:\n
      \             group: image.toolkit.fluxcd.io\n              version: v1beta2\n              kind:
      ImagePolicy\n            metricNamePrefix: gotk\n            metrics:\n              -
      name: \"resource_info\"\n                help: \"The current state of a Flux ImagePolicy
      resource.\"\n                each:\n                  type: Info\n                  info:\n
      \                   labelsFromPath:\n                      name: [ metadata, name
      ]\n                labelsFromPath:\n                  exported_namespace: [ metadata,
      namespace ]\n                  ready: [ status, conditions, \"[type=Ready]\", status
      ]\n                  suspended: [ spec, suspend ]\n                  source_name:
      [ spec, imageRepositoryRef, name ]\n          - groupVersionKind:\n              group:
      image.toolkit.fluxcd.io\n              version: v1beta2\n              kind: ImageUpdateAutomation\n
      \           metricNamePrefix: gotk\n            metrics:\n              - name:
      \"resource_info\"\n                help: \"The current state of a Flux ImageUpdateAutomation
      resource.\"\n                each:\n                  type: Info\n                  info:\n
      \                   labelsFromPath:\n                      name: [ metadata, name
      ]\n                labelsFromPath:\n                  exported_namespace: [ metadata,
      namespace ]\n                  ready: [ status, conditions, \"[type=Ready]\", status
      ]\n                  suspended: [ spec, suspend ]\n                  source_name:
      [ spec, sourceRef, name ]\n\nprometheusOperator:\n  image:\n    pullPolicy: IfNotPresent\n
      \ admissionWebhooks:\n    cleanupProxy:\n      image:\n        pullPolicy: IfNotPresent\n
      \   patch:\n      image:\n        pullPolicy: IfNotPresent\n  podAnnotations:\n
      \   bigbang.dev/istioVersion: 1.25.3"
  overlays: |
    bbtests:
      cypress:
        envs:
          cypress_alertmanager_url: https://alertmanager.dev.bigbang.mil
          cypress_bigbang_integration: "true"
          cypress_check_istio_dashboards: "true"
          cypress_grafana_url: https://grafana.dev.bigbang.mil
          cypress_keycloak_test_enable: "false"
          cypress_prometheus_url: https://prometheus.dev.bigbang.mil
          cypress_tnr_password: tnr_w!G33ZyAt@C8
          cypress_tnr_username: cypress
      enabled: true
    istio:
      hardened:
        customServiceEntries:
        - enabled: true
          name: cypress-service-entries-monitoring
          spec:
            hosts:
            - registry.npmjs.org
            - download.cypress.io
            - cdn.cypress.io
            - repo1.dso.mil
            - prometheus.dev.bigbang.mil
            - grafana.dev.bigbang.mil
            - alertmanager.dev.bigbang.mil
            location: MESH_EXTERNAL
            ports:
            - name: https
              number: 443
              protocol: TLS
            resolution: DNS
    kube-state-metrics:
      resources:
        limits:
          cpu: 200m
          memory: 512Mi
        requests:
          cpu: 40m
          memory: 128Mi
    prometheus-node-exporter:
      resources:
        limits: {}
        requests:
          cpu: 100m
          memory: 30Mi
---
# Source: bigbang/templates/neuvector/imagepullsecret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: private-registry
  namespace: neuvector
  labels:
    app.kubernetes.io/name: neuvector
    app.kubernetes.io/component: "sandbox"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeTEuZHNvLm1pbCI6eyJ1c2VybmFtZSI6ImdtaWVybmlja2kiLCJwYXNzd29yZCI6IjRjZHp1RU8zRyIsImVtYWlsIjoiIiwiYXV0aCI6IloyMXBaWEp1YVdOcmFUbzBZMlI2ZFVWUE0wYz0ifX19
---
# Source: bigbang/templates/neuvector/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: bigbang-neuvector-values
  namespace: bigbang
type: generic
stringData:
  common: ""
  defaults:
    "# Includes suffix of \"A1a\" to ensure password always meets default minimum password
      requirements\n\n# hostname is deprecated and replaced with domain. But if hostname
      exists then use it.\ndomain: dev.bigbang.mil\n\nopenshift: false\n\nistio:\n  enabled:
      true\n  hardened:\n    enabled: false\n  neuvector:\n    gateways:\n      - istio-gateway/public-ingressgateway\n
      \ injection: enabled\n\nmonitoring:\n  enabled: true\ncontroller:\n  podAnnotations:\n
      \   bigbang.dev/istioVersion: 1.25.3\n  secret:\n    enabled: true\n    data:\n
      \     userinitcfg.yaml:\n        always_reload: true\n        users:\n        -
      username: metrics\n          password: E59OnAqB0GVqMNtj10\n          role: reader\n
      \         fullname: metrics\n\nmonitor:\n  install: true\n  exporter:\n    enabled:
      true\n    podAnnotations:\n      checksum/metrics-pass: 32e21f5542dca1a51bd842832b1b011ae53a21e60e570470c10a07bcf0352a52\n
      \     bigbang.dev/istioVersion: 1.25.3\n    serviceMonitor:\n      enabled: true\n
      \     # conditional passes only for default istio: enabled, mTLS: SCRICT\n      scheme:
      https\n      tlsConfig:\n        caFile: /etc/prom-certs/root-cert.pem\n        certFile:
      /etc/prom-certs/cert-chain.pem\n        keyFile: /etc/prom-certs/key.pem\n        insecureSkipVerify:
      true  # Prometheus does not support Istio security naming, thus skip verifying target
      pod certificate\n    svc:\n      enabled: true\n      type: ClusterIP\n    CTRL_USERNAME:
      metrics\n    CTRL_PASSWORD: E59OnAqB0GVqMNtj10\nenforcer:\n  podAnnotations:\n    bigbang.dev/istioVersion:
      1.25.3\ncve:\n  updater:\n    podAnnotations:\n      bigbang.dev/istioVersion: 1.25.3\n
      \ scanner:\n    podAnnotations:\n      bigbang.dev/istioVersion: 1.25.3\nmanager:\n
      \ podAnnotations:\n    bigbang.dev/istioVersion: 1.25.3\n\nnetworkPolicies:\n  enabled:
      true\n  controlPlaneCidr: 0.0.0.0/0\n  istioNamespaceSelector:\n  \n    ingress:
      istio-gateway\n    egress: istio-system\n  ingressLabels:\n    app: public-ingressgateway\n
      \   istio: ingressgateway"
  overlays: |
    bbtests:
      cypress:
        envs:
          cypress_url: https://neuvector.dev.bigbang.mil
      enabled: true
    enforcer:
      podAnnotations:
        sidecar.istio.io/proxyMemoryLimit: 2Gi
    istio:
      hardened:
        customServiceEntries:
        - enabled: true
          name: cypress-service-entries-neuvector
          spec:
            hosts:
            - registry.npmjs.org
            - download.cypress.io
            - cdn.cypress.io
            - repo1.dso.mil
            - neuvector.dev.bigbang.mil
            location: MESH_EXTERNAL
            ports:
            - name: https
              number: 443
              protocol: TLS
            resolution: DNS
    k3s:
      enabled: true
---
# Source: bigbang/templates/promtail/imagepullsecret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: private-registry
  namespace: promtail
  labels:
    app.kubernetes.io/name: promtail
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeTEuZHNvLm1pbCI6eyJ1c2VybmFtZSI6ImdtaWVybmlja2kiLCJwYXNzd29yZCI6IjRjZHp1RU8zRyIsImVtYWlsIjoiIiwiYXV0aCI6IloyMXBaWEp1YVdOcmFUbzBZMlI2ZFVWUE0wYz0ifX19
---
# Source: bigbang/templates/promtail/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: bigbang-promtail-values
  namespace: bigbang
type: generic
stringData:
  common: ""
  defaults:
    "\nhostname: \n\nimage:\n  pullPolicy: IfNotPresent\n\nopenshift: false\n\nistio:\n
      \ enabled: true\n  hardened:\n    enabled: false\n\nloki:\n  enabled: true\n\nserviceMonitor:\n
      \ enabled: true\n  # conditional passes only for default istio: enabled, mTLS: SCRICT\n
      \ scheme: https\n  tlsConfig:\n    caFile: /etc/prom-certs/root-cert.pem\n    certFile:
      /etc/prom-certs/cert-chain.pem\n    keyFile: /etc/prom-certs/key.pem\n    insecureSkipVerify:
      true  # Prometheus does not support Istio security naming, thus skip verifying target
      pod certificate\n\nmonitoring:\n  enabled: true\n\nnetworkPolicies:\n  enabled:
      true\n  controlPlaneCidr: 0.0.0.0/0\n  istioNamespaceSelector:\n  \n    ingress:
      istio-gateway\n    egress: istio-system\npodAnnotations:\n  bigbang.dev/istioVersion:
      1.25.3\nimagePullSecrets:\n  - name: private-registry\nconfig:\n  clients:\n    -
      url: http://logging-loki-write.logging.svc.cluster.local:3100/loki/api/v1/push\n
      \     external_labels:\n        cluster: logging-loki\n# If loki is disabled and
      promtail is not"
  overlays: |
    {}
---
# Source: bigbang/templates/tempo/imagepullsecret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: private-registry
  namespace: tempo
  labels:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeTEuZHNvLm1pbCI6eyJ1c2VybmFtZSI6ImdtaWVybmlja2kiLCJwYXNzd29yZCI6IjRjZHp1RU8zRyIsImVtYWlsIjoiIiwiYXV0aCI6IloyMXBaWEp1YVdOcmFUbzBZMlI2ZFVWUE0wYz0ifX19
---
# Source: bigbang/templates/tempo/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: bigbang-tempo-values
  namespace: bigbang
type: generic
stringData:
  common: ""
  defaults:
    "\npodAnnotations:\n  bigbang.dev/istioVersion: 1.25.3\n\nobjectStorage: \n  access_key_id:
      \n  secret_access_key: \n\ntempo:\n  pullPolicy: IfNotPresent\n  global_overrides:\n
      \   ingestion_rate_limit_bytes: 30000000\n  metricsGenerator:\n    enabled: true\n
      \   remoteWriteUrl: \"http://monitoring-monitoring-kube-prometheus.monitoring.svc.cluster.local:9090/api/v1/write\"\n\n#
      hostname is deprecated and replaced with domain. But if hostname exists then use
      it.\nhostname: dev.bigbang.mil\ndomain: dev.bigbang.mil\n\ntempoQuery:\n  pullPolicy:
      IfNotPresent\n\nserviceAccount:\n  imagePullSecrets:\n    - name: private-registry\n\nnetworkPolicies:\n
      \ enabled: true\n  istioNamespaceSelector:\n  \n    ingress: istio-gateway\n    egress:
      istio-system\n  controlPlaneCidr: 0.0.0.0/0\n  ingressLabels:\n    app: public-ingressgateway\n
      \   istio: ingressgateway\n\nistio:\n  enabled: true\n  hardened:\n    enabled:
      false\n  tempoQuery:\n    gateways:\n      - istio-gateway/public-ingressgateway\n\nmonitoring:\n
      \ enabled: true\n\nserviceMonitor:\n  enabled: true\n  # conditional passes only
      if all conditionals are true:\n  # - istio: enabled\n  # - mTLS: SCRICT\n  scheme:
      https\n  tlsConfig:\n    caFile: /etc/prom-certs/root-cert.pem\n    certFile: /etc/prom-certs/cert-chain.pem\n
      \   keyFile: /etc/prom-certs/key.pem\n    insecureSkipVerify: true  # Prometheus
      does not support Istio security naming, thus skip verifying target pod certificate\n\nsso:\n
      \ enabled: false\npodLabels:"
  overlays: |
    bbtests:
      cypress:
        envs:
          cypress_check_datasource: "true"
          cypress_grafana_url: https://grafana.dev.bigbang.mil
          cypress_tempo_datasource: http://tempo-tempo.tempo.svc:3100
          cypress_url: https://tempo.dev.bigbang.mil
      enabled: true
      scripts:
        enabled: false
        envs:
          TEMPO_METRICS_URL: http://tempo-tempo.tempo.svc:3100
    istio:
      hardened:
        customServiceEntries:
        - enabled: true
          name: cypress-service-entries-tempo
          spec:
            hosts:
            - registry.npmjs.org
            - download.cypress.io
            - cdn.cypress.io
            - repo1.dso.mil
            - tempo.dev.bigbang.mil
            - grafana.dev.bigbang.mil
            - grafana.com
            location: MESH_EXTERNAL
            ports:
            - name: https
              number: 443
              protocol: TLS
            resolution: DNS
      tempoQuery:
        hosts:
        - tempo.{{ .Values.domain }}
    persistence:
      size: 5Gi
    tempo:
      resources:
        limits: null
        requests:
          cpu: 200m
          memory: 128Mi
    tempoQuery:
      resources:
        limits: null
        requests:
          cpu: 200m
          memory: 128Mi
---
# Source: bigbang/templates/grafana/flux-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: flux-grafana-dashboards 
  namespace: monitoring
  labels:
    grafana_dashboard: "1"
data:
  flux-cluster-dashboard.json: |
    
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          },
          {
            "datasource": {
              "type": "datasource",
              "uid": "grafana"
            },
            "enable": true,
            "iconColor": "red",
            "name": "flux events",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [
                "flux"
              ],
              "type": "tags"
            }
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "id": 1,
      "links": [],
      "liveNow": false,
      "panels": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "decimals": 0,
              "mappings": [],
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "blue",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 100
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 6,
            "x": 0,
            "y": 0
          },
          "id": 24,
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "value"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "prometheus"
              },
              "editorMode": "code",
              "exemplar": false,
              "expr": "count(gotk_resource_info{exported_namespace=~\"$namespace\", customresource_kind=~\"Kustomization|HelmRelease\"})",
              "instant": true,
              "interval": "",
              "legendFormat": "",
              "range": false,
              "refId": "A"
            }
          ],
          "title": "Cluster Reconcilers",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "decimals": 0,
              "mappings": [],
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 6,
            "x": 6,
            "y": 0
          },
          "id": 28,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "value"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "prometheus"
              },
              "editorMode": "code",
              "exemplar": false,
              "expr": "count(gotk_resource_info{exported_namespace=~\"$namespace\", customresource_kind=~\"Kustomization|HelmRelease\", ready=\"False\"})",
              "instant": true,
              "interval": "",
              "legendFormat": "",
              "range": false,
              "refId": "A"
            }
          ],
          "title": "Failing Reconcilers",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "decimals": 0,
              "mappings": [],
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "blue",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 100
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 6,
            "x": 12,
            "y": 0
          },
          "id": 29,
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "value"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "prometheus"
              },
              "editorMode": "code",
              "exemplar": false,
              "expr": "count(gotk_resource_info{exported_namespace=~\"$namespace\", customresource_kind=~\"GitRepository|HelmRepository|Bucket|OCIRepository\"})",
              "instant": true,
              "interval": "",
              "legendFormat": "",
              "range": false,
              "refId": "A"
            }
          ],
          "title": "Kubernetes Manifests Sources",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "decimals": 0,
              "mappings": [],
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 6,
            "x": 18,
            "y": 0
          },
          "id": 30,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "value"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "prometheus"
              },
              "editorMode": "code",
              "exemplar": false,
              "expr": "count(gotk_resource_info{exported_namespace=~\"$namespace\", customresource_kind=~\"GitRepository|HelmRepository|Bucket|OCIRepository\", ready=\"False\"})",
              "instant": true,
              "interval": "",
              "legendFormat": "",
              "range": false,
              "refId": "A"
            }
          ],
          "title": "Failing Sources",
          "type": "stat"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "#EAB839",
                    "value": 1
                  },
                  {
                    "color": "red",
                    "value": 61
                  }
                ]
              },
              "unit": "s"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 12,
            "x": 0,
            "y": 5
          },
          "id": 8,
          "options": {
            "displayMode": "gradient",
            "minVizHeight": 10,
            "minVizWidth": 0,
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "mean"
              ],
              "fields": "",
              "values": false
            },
            "showUnfilled": true,
            "text": {},
            "valueMode": "color"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "exemplar": true,
              "expr": "sum(rate(gotk_reconcile_duration_seconds_sum{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",kind=~\"Kustomization|HelmRelease\"}[5m])) by (kind)\n/\n  sum(rate(gotk_reconcile_duration_seconds_count{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",kind=~\"Kustomization|HelmRelease\"}[5m])) by (kind)",
              "interval": "",
              "legendFormat": "{{kind}}",
              "refId": "A"
            }
          ],
          "title": "Reconciler ops avg. duration",
          "type": "bargauge"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "#EAB839",
                    "value": 1
                  },
                  {
                    "color": "red",
                    "value": 61
                  }
                ]
              },
              "unit": "s"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 12,
            "x": 12,
            "y": 5
          },
          "id": 31,
          "options": {
            "displayMode": "gradient",
            "minVizHeight": 10,
            "minVizWidth": 0,
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "mean"
              ],
              "fields": "",
              "values": false
            },
            "showUnfilled": true,
            "text": {},
            "valueMode": "color"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "exemplar": true,
              "expr": "sum(rate(gotk_reconcile_duration_seconds_sum{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",kind=~\"GitRepository|HelmRepository|Bucket|OCIRepository\"}[5m])) by (kind)\n/\n  sum(rate(gotk_reconcile_duration_seconds_count{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",kind=~\"GitRepository|HelmRepository|Bucket|OCIRepository\"}[5m])) by (kind)",
              "interval": "",
              "legendFormat": "{{kind}}",
              "refId": "A"
            }
          ],
          "title": "Source ops avg. duration",
          "type": "bargauge"
        },
        {
          "collapsed": false,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 9
          },
          "id": 15,
          "panels": [],
          "title": "Status",
          "type": "row"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "filterable": true,
                "inspect": false
              },
              "mappings": [
                {
                  "options": {
                    "False": {
                      "color": "red",
                      "index": 1,
                      "text": "Not Ready"
                    },
                    "True": {
                      "color": "blue",
                      "index": 0,
                      "text": "Ready"
                    }
                  },
                  "type": "value"
                }
              ],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "transparent",
                    "value": null
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byType",
                  "options": "string"
                },
                "properties": [
                  {
                    "id": "custom.cellOptions",
                    "value": {
                      "mode": "basic",
                      "type": "color-background"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 22,
            "w": 12,
            "x": 0,
            "y": 10
          },
          "id": 33,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": true,
                "displayName": "Status"
              }
            ]
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "prometheus"
              },
              "editorMode": "code",
              "exemplar": true,
              "expr": "gotk_resource_info{exported_namespace=~\"$namespace\", customresource_kind=~\"Kustomization|HelmRelease\"}",
              "format": "table",
              "instant": true,
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "title": "Cluster reconciliation readiness ",
          "transformations": [
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "Time": false,
                  "Value": false,
                  "__name__": false,
                  "app": false,
                  "chart_name": false,
                  "chart_source_name": false,
                  "container": false,
                  "customresource_group": false,
                  "customresource_kind": false,
                  "customresource_version": false,
                  "endpoint": false,
                  "exported_namespace": false,
                  "gotk_type": false,
                  "instance": false,
                  "job": false,
                  "kubernetes_namespace": false,
                  "kubernetes_pod_name": false,
                  "namespace": false,
                  "pod": false,
                  "pod_template_hash": false,
                  "revision": false,
                  "service": false,
                  "source_name": false,
                  "status": false,
                  "suspended": false,
                  "type": false
                },
                "indexByName": {
                  "Time": 0,
                  "Value": 15,
                  "__name__": 1,
                  "container": 2,
                  "customresource_group": 4,
                  "customresource_kind": 5,
                  "customresource_version": 6,
                  "endpoint": 7,
                  "exported_namespace": 3,
                  "instance": 8,
                  "job": 9,
                  "name": 10,
                  "namespace": 11,
                  "pod": 12,
                  "ready": 13,
                  "service": 14
                },
                "renameByName": {
                  "Value": "",
                  "customresource_kind": "Kind",
                  "exported_namespace": "Namespace",
                  "kind": "Kind",
                  "name": "Name",
                  "namespace": "Operator Namespace",
                  "ready": "Status"
                }
              }
            },
            {
              "id": "filterFieldsByName",
              "options": {
                "include": {
                  "pattern": "(Namespace|Kind|Name|Status)"
                }
              }
            }
          ],
          "type": "table"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "filterable": true,
                "inspect": false
              },
              "mappings": [
                {
                  "options": {
                    "False": {
                      "color": "red",
                      "index": 1,
                      "text": "Not Ready"
                    },
                    "True": {
                      "color": "blue",
                      "index": 0,
                      "text": "Ready"
                    }
                  },
                  "type": "value"
                }
              ],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "transparent",
                    "value": null
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byType",
                  "options": "string"
                },
                "properties": [
                  {
                    "id": "custom.cellOptions",
                    "value": {
                      "mode": "basic",
                      "type": "color-background"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Status"
                },
                "properties": [
                  {
                    "id": "noValue",
                    "value": "Ready"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 11,
            "w": 12,
            "x": 12,
            "y": 10
          },
          "id": 34,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": true,
                "displayName": "Status"
              }
            ]
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "prometheus"
              },
              "editorMode": "code",
              "exemplar": true,
              "expr": "gotk_resource_info{exported_namespace=~\"$namespace\", customresource_kind=~\"GitRepository|HelmRepository|Bucket|OCIRepository\"}",
              "format": "table",
              "instant": true,
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "title": "Source acquisition readiness ",
          "transformations": [
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "Time": false,
                  "Value": false,
                  "__name__": false,
                  "app": false,
                  "bucket_name": false,
                  "container": false,
                  "customresource_group": false,
                  "customresource_kind": false,
                  "customresource_version": false,
                  "endpoint": false,
                  "exported_namespace": false,
                  "gotk_type": false,
                  "instance": false,
                  "job": false,
                  "kubernetes_namespace": false,
                  "kubernetes_pod_name": false,
                  "namespace": false,
                  "pod": false,
                  "pod_template_hash": false,
                  "ready": false,
                  "revision": false,
                  "service": false,
                  "status": false,
                  "suspended": false,
                  "type": false,
                  "url": false
                },
                "indexByName": {
                  "Time": 0,
                  "Value": 15,
                  "__name__": 1,
                  "container": 2,
                  "customresource_group": 5,
                  "customresource_kind": 6,
                  "customresource_version": 7,
                  "endpoint": 8,
                  "exported_namespace": 4,
                  "instance": 9,
                  "job": 10,
                  "name": 11,
                  "namespace": 3,
                  "pod": 12,
                  "ready": 13,
                  "service": 14
                },
                "renameByName": {
                  "Value": "",
                  "customresource_kind": "Kind",
                  "exported_namespace": "Namespace",
                  "kind": "Kind",
                  "name": "Name",
                  "namespace": "Operator Namespace",
                  "ready": "Status"
                }
              }
            },
            {
              "id": "filterFieldsByName",
              "options": {
                "include": {
                  "pattern": "(Namespace|Kind|Name|Status)"
                }
              }
            }
          ],
          "type": "table"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "filterable": true,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "transparent",
                    "value": null
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byType",
                  "options": "string"
                },
                "properties": [
                  {
                    "id": "custom.cellOptions",
                    "value": {
                      "mode": "basic",
                      "type": "color-background"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 11,
            "w": 12,
            "x": 12,
            "y": 21
          },
          "id": 36,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": true,
                "displayName": "Namespace"
              }
            ]
          },
          "pluginVersion": "10.1.0",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "prometheus"
              },
              "editorMode": "code",
              "exemplar": true,
              "expr": "gotk_resource_info{exported_namespace=~\"$namespace\", suspended=\"true\"}",
              "format": "table",
              "instant": true,
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "title": "Suspended Objects",
          "transformations": [
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "Time": false,
                  "Value": false,
                  "__name__": false,
                  "app": false,
                  "bucket_name": false,
                  "container": false,
                  "customresource_group": false,
                  "customresource_kind": false,
                  "customresource_version": false,
                  "endpoint": false,
                  "exported_namespace": false,
                  "gotk_type": false,
                  "instance": false,
                  "job": false,
                  "kubernetes_namespace": false,
                  "kubernetes_pod_name": false,
                  "namespace": false,
                  "pod": false,
                  "pod_template_hash": false,
                  "ready": false,
                  "revision": false,
                  "service": false,
                  "source_name": false,
                  "status": false,
                  "suspended": false,
                  "type": false,
                  "url": false
                },
                "indexByName": {
                  "Time": 0,
                  "Value": 15,
                  "__name__": 1,
                  "container": 2,
                  "customresource_group": 5,
                  "customresource_kind": 6,
                  "customresource_version": 7,
                  "endpoint": 8,
                  "exported_namespace": 4,
                  "instance": 9,
                  "job": 10,
                  "name": 11,
                  "namespace": 3,
                  "pod": 12,
                  "ready": 13,
                  "service": 14
                },
                "renameByName": {
                  "customresource_kind": "Kind",
                  "exported_namespace": "Namespace",
                  "name": "Name"
                }
              }
            },
            {
              "id": "filterFieldsByName",
              "options": {
                "include": {
                  "pattern": "(Namespace|Name|Kind)"
                }
              }
            }
          ],
          "type": "table"
        },
        {
          "collapsed": false,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 32
          },
          "id": 17,
          "panels": [],
          "title": "Timing",
          "type": "row"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "s"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byValue",
                  "options": {
                    "op": "gte",
                    "reducer": "allIsZero",
                    "value": 0
                  }
                },
                "properties": [
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": true,
                      "tooltip": true,
                      "viz": false
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byValue",
                  "options": {
                    "op": "gte",
                    "reducer": "allIsNull",
                    "value": 0
                  }
                },
                "properties": [
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": true,
                      "tooltip": true,
                      "viz": false
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 33
          },
          "id": 27,
          "options": {
            "legend": {
              "calcs": [
                "mean"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "desc"
            }
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "exemplar": true,
              "expr": "sum(rate(gotk_reconcile_duration_seconds_sum{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",kind=~\"Kustomization|HelmRelease\"}[5m])) by (kind, name)\n/\n  sum(rate(gotk_reconcile_duration_seconds_count{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",kind=~\"Kustomization|HelmRelease\"}[5m])) by (kind, name)",
              "hide": false,
              "interval": "",
              "legendFormat": "{{kind}}/{{name}}",
              "refId": "B"
            }
          ],
          "title": "Cluster reconciliation duration",
          "type": "timeseries"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "s"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byValue",
                  "options": {
                    "op": "gte",
                    "reducer": "allIsZero",
                    "value": 0
                  }
                },
                "properties": [
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": true,
                      "tooltip": true,
                      "viz": false
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byValue",
                  "options": {
                    "op": "gte",
                    "reducer": "allIsNull",
                    "value": 0
                  }
                },
                "properties": [
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": true,
                      "tooltip": true,
                      "viz": false
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 41
          },
          "id": 35,
          "options": {
            "legend": {
              "calcs": [
                "mean"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "desc"
            }
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "exemplar": true,
              "expr": "sum(rate(gotk_reconcile_duration_seconds_sum{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",kind=~\"GitRepository|HelmRepository|Bucket|OCIRepository\"}[5m])) by (kind, name)\n/\n  sum(rate(gotk_reconcile_duration_seconds_count{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",kind=~\"GitRepository|HelmRepository|Bucket|OCIRepository\"}[5m])) by (kind, name)",
              "hide": false,
              "interval": "",
              "legendFormat": "{{kind}}/{{name}}",
              "refId": "B"
            }
          ],
          "title": "Source acquisition duration",
          "type": "timeseries"
        }
      ],
      "refresh": "30s",
      "schemaVersion": 38,
      "style": "light",
      "tags": [
        "flux"
      ],
      "templating": {
        "list": [
          {
            "allValue": "",
            "current": {
              "selected": true,
              "text": [
                "All"
              ],
              "value": [
                "$__all"
              ]
            },
            "datasource": {
              "type": "prometheus",
              "uid": "$DS_PROMETHEUS"
            },
            "definition": "label_values(gotk_resource_info, exported_namespace)",
            "hide": 0,
            "includeAll": true,
            "multi": true,
            "name": "operator_namespace",
            "options": [],
            "query": {
              "query": "label_values(gotk_reconcile_duration_seconds_sum, namespace)",
              "refId": "StandardVariableQuery"
            },
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 5,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "current": {
              "selected": true,
              "text": [
                "All"
              ],
              "value": [
                "$__all"
              ]
            },
            "datasource": {
              "type": "prometheus",
              "uid": "$DS_PROMETHEUS"
            },
            "definition": "label_values(gotk_resource_info,exported_namespace)",
            "hide": 0,
            "includeAll": true,
            "multi": true,
            "name": "namespace",
            "options": [],
            "query": {
              "query": "label_values(gotk_resource_info,exported_namespace)",
              "refId": "PrometheusVariableQueryEditor-VariableQuery"
            },
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "current": {
              "selected": false,
              "text": "Prometheus",
              "value": "Prometheus"
            },
            "hide": 0,
            "includeAll": false,
            "label": "Datasource",
            "multi": false,
            "name": "DS_PROMETHEUS",
            "options": [],
            "query": "prometheus",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "type": "datasource"
          }
        ]
      },
      "time": {
        "from": "now-15m",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "10s",
          "30s",
          "1m",
          "5m",
          "15m",
          "30m",
          "1h",
          "2h",
          "1d"
        ]
      },
      "timezone": "",
      "title": "Flux Cluster Stats",
      "uid": "flux-cluster",
      "version": 4,
      "weekStart": ""
    }
    
  flux-control-plane-dashboard.json: |
    
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": {
              "type": "datasource",
              "uid": "grafana"
            },
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [],
              "type": "dashboard"
            },
            "type": "dashboard"
          },
          {
            "datasource": {
              "type": "datasource",
              "uid": "grafana"
            },
            "enable": true,
            "iconColor": "red",
            "name": "flux events",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [
                "flux"
              ],
              "type": "tags"
            }
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "id": 1,
      "links": [],
      "liveNow": false,
      "panels": [
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "blue",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 100
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 6,
            "x": 0,
            "y": 0
          },
          "id": 24,
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "value"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(go_info{namespace=\"$namespace\",pod=~\".*-controller-.*\"})",
              "interval": "",
              "legendFormat": "pods",
              "refId": "A"
            }
          ],
          "title": "Controllers",
          "type": "stat"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "blue",
                    "value": null
                  },
                  {
                    "color": "#EAB839",
                    "value": 50
                  },
                  {
                    "color": "red",
                    "value": 100
                  }
                ]
              },
              "unit": "s"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 6,
            "x": 6,
            "y": 0
          },
          "id": 23,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "max(workqueue_longest_running_processor_seconds{namespace=\"$namespace\",pod=~\".*-controller-.*\"})",
              "hide": false,
              "interval": "",
              "legendFormat": "seconds",
              "refId": "B"
            }
          ],
          "title": "Max Work Queue",
          "type": "stat"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "blue",
                    "value": null
                  },
                  {
                    "color": "#EAB839",
                    "value": 500000000
                  },
                  {
                    "color": "red",
                    "value": 900000000
                  }
                ]
              },
              "unit": "decbits"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 6,
            "x": 12,
            "y": 0
          },
          "id": 25,
          "options": {
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showThresholdLabels": false,
            "showThresholdMarkers": true,
            "text": {}
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(go_memstats_alloc_bytes{namespace=\"$namespace\",pod=~\".*-controller-.*\"})",
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "title": "Memory",
          "type": "gauge"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "blue",
                    "value": null
                  },
                  {
                    "color": "#EAB839",
                    "value": 50
                  },
                  {
                    "color": "red",
                    "value": 100
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 6,
            "x": 18,
            "y": 0
          },
          "id": 26,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "mean"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(rate(rest_client_requests_total{namespace=\"$namespace\",pod=~\".*-controller-.*\"}[1m]))",
              "interval": "",
              "legendFormat": "requests",
              "refId": "A"
            }
          ],
          "title": "API Requests",
          "type": "stat"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 5
          },
          "id": 21,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(rate(rest_client_requests_total{namespace=\"$namespace\"}[1m]))",
              "hide": false,
              "interval": "",
              "legendFormat": "total",
              "refId": "A"
            },
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(rate(rest_client_requests_total{namespace=\"$namespace\",code!~\"2..\"}[1m]))",
              "hide": false,
              "interval": "",
              "legendFormat": "errors",
              "refId": "B"
            }
          ],
          "title": "Kubernetes API Requests",
          "type": "timeseries"
        },
        {
          "collapsed": false,
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 13
          },
          "id": 15,
          "panels": [],
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "refId": "A"
            }
          ],
          "title": "Resource Usage",
          "type": "row"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "s"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 11,
            "w": 12,
            "x": 0,
            "y": 14
          },
          "id": 11,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "rate(process_cpu_seconds_total{namespace=\"$namespace\",pod=~\".*-controller-.*\"}[1m])",
              "interval": "",
              "legendFormat": "{{pod}}",
              "refId": "A"
            }
          ],
          "title": "CPU Usage",
          "type": "timeseries"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "bytes"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 11,
            "w": 12,
            "x": 12,
            "y": 14
          },
          "id": 13,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(container_memory_working_set_bytes{namespace=\"$namespace\",pod=~\".*-controller-.*\"}) by (pod)",
              "hide": false,
              "interval": "",
              "legendFormat": "{{pod}}",
              "refId": "A"
            }
          ],
          "title": "Memory Usage",
          "type": "timeseries"
        },
        {
          "collapsed": false,
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 25
          },
          "id": 17,
          "panels": [],
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "refId": "A"
            }
          ],
          "title": "Reconciliation Stats",
          "type": "row"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "s"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 26
          },
          "id": 27,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "workqueue_longest_running_processor_seconds{name=\"kustomization\"}",
              "hide": false,
              "interval": "",
              "legendFormat": "kustomizations",
              "refId": "B"
            }
          ],
          "title": "Cluster Reconciliation Duration",
          "type": "timeseries"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "bars",
                "fillOpacity": 100,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "stepAfter",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "opm"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 34
          },
          "id": 2,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"kustomization\",result!=\"error\"}[1m])) by (controller)",
              "format": "time_series",
              "interval": "",
              "legendFormat": "successful reconciliations ",
              "refId": "A"
            },
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"kustomization\",result=\"error\"}[1m])) by (controller)",
              "format": "time_series",
              "interval": "",
              "legendFormat": "failed reconciliations ",
              "refId": "B"
            }
          ],
          "title": "Cluster Reconciliations ops/min",
          "type": "timeseries"
        },
        {
          "collapsed": false,
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 42
          },
          "id": 29,
          "panels": [],
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "refId": "A"
            }
          ],
          "title": "Sources Stats",
          "type": "row"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "bars",
                "fillOpacity": 100,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "stepAfter",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "opm"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 43
          },
          "id": 4,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"gitrepository\",result!=\"error\"}[1m]))",
              "format": "time_series",
              "interval": "",
              "legendFormat": "successful git pulls",
              "refId": "A"
            },
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"gitrepository\",result=\"error\"}[1m]))",
              "format": "time_series",
              "interval": "",
              "legendFormat": "failed git pulls",
              "refId": "B"
            }
          ],
          "title": "Git Repos ops/min",
          "type": "timeseries"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "bars",
                "fillOpacity": 100,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "stepAfter",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "opm"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 43
          },
          "id": 30,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"ocirepository\",result!=\"error\"}[1m]))",
              "format": "time_series",
              "interval": "",
              "legendFormat": "successful oci pulls",
              "refId": "A"
            },
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"ocirepository\",result=\"error\"}[1m]))",
              "format": "time_series",
              "interval": "",
              "legendFormat": "failed oci pulls",
              "refId": "B"
            }
          ],
          "title": "OCI Repos ops/min",
          "type": "timeseries"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "bars",
                "fillOpacity": 100,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "stepAfter",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "opm"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 52
          },
          "id": 31,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"helmrepository\",result!=\"error\"}[1m]))",
              "format": "time_series",
              "interval": "",
              "legendFormat": "successful helm pulls",
              "refId": "A"
            },
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"helmrepository\",result=\"error\"}[1m]))",
              "format": "time_series",
              "interval": "",
              "legendFormat": "failed helm pulls",
              "refId": "B"
            }
          ],
          "title": "Helm Repos ops/min",
          "type": "timeseries"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "bars",
                "fillOpacity": 100,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "stepAfter",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "opm"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 52
          },
          "id": 32,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"bucket\",result!=\"error\"}[1m]))",
              "format": "time_series",
              "interval": "",
              "legendFormat": "successful bucket pulls",
              "refId": "A"
            },
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"bucket\",result=\"error\"}[1m]))",
              "format": "time_series",
              "interval": "",
              "legendFormat": "failed bucket pulls",
              "refId": "B"
            }
          ],
          "title": "Buckets ops/min",
          "type": "timeseries"
        },
        {
          "collapsed": false,
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 61
          },
          "id": 19,
          "panels": [],
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "refId": "A"
            }
          ],
          "title": "Helm Stats",
          "type": "row"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "s"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 62
          },
          "id": 9,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "lastNotNull"
              ],
              "displayMode": "list",
              "placement": "right",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "histogram_quantile(0.50, sum(rate(controller_runtime_reconcile_time_seconds_bucket{controller=\"helmrelease\"}[5m])) by (le))",
              "hide": true,
              "interval": "",
              "legendFormat": "P50",
              "refId": "A"
            },
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "histogram_quantile(0.90, sum(rate(controller_runtime_reconcile_time_seconds_bucket{controller=\"helmrelease\"}[5m])) by (le))",
              "hide": true,
              "interval": "",
              "legendFormat": "P90",
              "refId": "B"
            },
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "histogram_quantile(0.99, sum(rate(controller_runtime_reconcile_time_seconds_bucket{controller=\"helmrelease\"}[5m])) by (le))",
              "hide": false,
              "interval": "",
              "legendFormat": "P99",
              "refId": "C"
            }
          ],
          "title": "Helm Release Duration",
          "type": "timeseries"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "bars",
                "fillOpacity": 100,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "stepAfter",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "opm"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 70
          },
          "id": 5,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"helmrelease\",result!=\"error\"}[1m])) by (controller)",
              "format": "time_series",
              "interval": "",
              "legendFormat": "successful reconciliations ",
              "refId": "A"
            },
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"helmrelease\",result=\"error\"}[1m])) by (controller)",
              "format": "time_series",
              "interval": "",
              "legendFormat": "failed reconciliations ",
              "refId": "B"
            }
          ],
          "title": "Helm Releases ops/min",
          "type": "timeseries"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "bars",
                "fillOpacity": 100,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "stepAfter",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "opm"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 70
          },
          "id": 6,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"helmchart\",result!=\"error\"}[1m])) by (controller)",
              "format": "time_series",
              "interval": "",
              "legendFormat": "successful chart pulls",
              "refId": "A"
            },
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"helmchart\",result=\"error\"}[1m])) by (controller)",
              "format": "time_series",
              "interval": "",
              "legendFormat": "failed chart pulls",
              "refId": "B"
            }
          ],
          "title": "Helm Charts ops/min",
          "type": "timeseries"
        }
      ],
      "refresh": "10s",
      "schemaVersion": 38,
      "style": "light",
      "tags": [
        "flux"
      ],
      "templating": {
        "list": [
          {
            "current": {
              "selected": false,
              "text": "Prometheus",
              "value": "Prometheus"
            },
            "hide": 2,
            "includeAll": false,
            "multi": false,
            "name": "DS_PROMETHEUS",
            "options": [],
            "query": "prometheus",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "type": "datasource"
          },
          {
            "current": {
              "selected": false,
              "text": "flux-system",
              "value": "flux-system"
            },
            "datasource": {
              "type": "prometheus",
              "uid": "${DS_PROMETHEUS}"
            },
            "definition": "workqueue_work_duration_seconds_count",
            "hide": 0,
            "includeAll": false,
            "multi": false,
            "name": "namespace",
            "options": [],
            "query": {
              "query": "workqueue_work_duration_seconds_count",
              "refId": "Prometheus-namespace-Variable-Query"
            },
            "refresh": 2,
            "regex": "/.*namespace=\"([^\"]*).*/",
            "skipUrlSync": false,
            "sort": 0,
            "tagValuesQuery": "",
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          }
        ]
      },
      "time": {
        "from": "now-15m",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "10s",
          "30s",
          "1m",
          "5m",
          "15m",
          "30m",
          "1h",
          "2h",
          "1d"
        ]
      },
      "timezone": "",
      "title": "Flux Control Plane",
      "uid": "flux-control-plane",
      "version": 2,
      "weekStart": ""
    }
    
  flux-logs-dashboard.json: |
    
    {
      "__inputs": [
        {
          "name": "DS_LOKI",
          "label": "Loki",
          "description": "",
          "type": "datasource",
          "pluginId": "loki",
          "pluginName": "Loki"
        }
      ],
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [],
              "type": "dashboard"
            },
            "type": "dashboard"
          },
          {
            "datasource": {
              "type": "datasource",
              "uid": "grafana"
            },
            "enable": true,
            "iconColor": "red",
            "name": "flux events",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [
                "flux"
              ],
              "type": "tags"
            }
          }
        ]
      },
      "description": "Flux logs collected from Kubernetes, stored in Loki",
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "id": 29,
      "iteration": 1653748775696,
      "links": [],
      "liveNow": false,
      "panels": [
        {
          "datasource": "${DS_LOKI}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "bars",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 4,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "hidden",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": "${DS_LOKI}",
              "expr": "sum(count_over_time({namespace=~\"$namespace\", stream=~\"$stream\", app =~\"$controller\"} | json | __error__!=\"JSONParserErr\" | level=~\"$level\" |= \"$query\" [$__interval]))",
              "instant": false,
              "legendFormat": "Log count",
              "range": true,
              "refId": "A"
            }
          ],
          "type": "timeseries"
        },
        {
          "datasource": "${DS_LOKI}",
          "description": "Logs from services running in Kubernetes",
          "gridPos": {
            "h": 25,
            "w": 24,
            "x": 0,
            "y": 4
          },
          "id": 2,
          "options": {
            "dedupStrategy": "numbers",
            "enableLogDetails": false,
            "prettifyLogMessage": true,
            "showCommonLabels": false,
            "showLabels": false,
            "showTime": false,
            "sortOrder": "Descending",
            "wrapLogMessage": false
          },
          "targets": [
            {
              "datasource": "${DS_LOKI}",
              "expr": "{namespace=~\"$namespace\", stream=~\"$stream\", app =~\"$controller\"} | json | __error__!=\"JSONParserErr\" | level=~\"$level\" |= \"$query\"",
              "refId": "A"
            }
          ],
          "type": "logs"
        }
      ],
      "refresh": "10s",
      "schemaVersion": 36,
      "style": "light",
      "tags": [
        "flux"
      ],
      "templating": {
        "list": [
          {
            "current": {
              "selected": false,
              "text": "",
              "value": ""
            },
            "description": "String to search for",
            "hide": 0,
            "label": "Search Query",
            "name": "query",
            "options": [
              {
                "selected": true,
                "text": "",
                "value": ""
              }
            ],
            "query": "",
            "skipUrlSync": false,
            "type": "textbox"
          },
          {
            "allValue": "info|error",
            "current": {
              "selected": false,
              "text": "All",
              "value": "$__all"
            },
            "hide": 0,
            "includeAll": true,
            "multi": false,
            "name": "level",
            "options": [
              {
                "selected": true,
                "text": "All",
                "value": "$__all"
              },
              {
                "selected": false,
                "text": "info",
                "value": "info"
              },
              {
                "selected": false,
                "text": "error",
                "value": "error"
              }
            ],
            "query": "info,error",
            "queryValue": "",
            "skipUrlSync": false,
            "type": "custom"
          },
          {
            "allValue": ".+",
            "current": {
              "selected": true,
              "text": [
                "All"
              ],
              "value": [
                "$__all"
              ]
            },
            "datasource": "${DS_LOKI}",
            "definition": "label_values(app)",
            "hide": 0,
            "includeAll": true,
            "multi": true,
            "name": "controller",
            "options": [],
            "query": "label_values(app)",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "type": "query"
          },
          {
            "allValue": ".+",
            "current": {
              "selected": true,
              "text": [
                "flux-system"
              ],
              "value": [
                "flux-system"
              ]
            },
            "datasource": "${DS_LOKI}",
            "definition": "label_values(namespace)",
            "hide": 0,
            "includeAll": true,
            "multi": true,
            "name": "namespace",
            "options": [],
            "query": "label_values(namespace)",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "type": "query"
          },
          {
            "allValue": ".+",
            "current": {
              "selected": false,
              "text": "All",
              "value": "$__all"
            },
            "datasource": "${DS_LOKI}",
            "definition": "label_values(stream)",
            "hide": 0,
            "includeAll": true,
            "multi": true,
            "name": "stream",
            "options": [],
            "query": "label_values(stream)",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "type": "query"
          },
          {
            "current": {
              "selected": false,
              "text": "Loki",
              "value": "Loki"
            },
            "hide": 0,
            "includeAll": false,
            "label": "Datasource",
            "multi": false,
            "name": "DS_LOKI",
            "options": [],
            "query": "loki",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "type": "datasource"
          }
        ]
      },
      "time": {
        "from": "now-6h",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "Flux Logs",
      "uid": "flux-logs",
      "version": 2
    }
---
# Source: bigbang/templates/grafana/flux/alert.yaml
apiVersion: notification.toolkit.fluxcd.io/v1beta3
kind: Alert
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
spec:
  providerRef:
    name: grafana
  eventSeverity: info
  eventSources:
    - kind: GitRepository
      name: '*'
      namespace: bigbang
---
# Source: bigbang/templates/grafana/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: grafana
  namespace: bigbang
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/product/packages/grafana.git
  ref:
    tag: 8.14.0-bb.0
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/istio-crds/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: istio-crds
  namespace: bigbang
  labels:
    app.kubernetes.io/name: istio-crds
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/apps/sandbox/istio-crds.git
  ref:
    tag: 1.25.3-bb.0
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/istio-gateway/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: istio-gateway
  namespace: bigbang
  labels:
    app.kubernetes.io/name: istio-gateway
    app.kubernetes.io/component: core
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/product/packages/istio-gateway.git
  ref:
    tag: 1.25.3-bb.1
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/istiod/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: istiod
  namespace: bigbang
  labels:
    app.kubernetes.io/name: istiod
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/apps/sandbox/istiod.git
  ref:
    tag: 1.25.3-bb.0
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/kiali/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: kiali
  namespace: bigbang
  labels:
    app.kubernetes.io/name: kiali
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/product/packages/kiali.git
  ref:
    tag: 2.9.0-bb.2
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/kyverno-policies/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: kyverno-policies
  namespace: bigbang
  labels:
    app.kubernetes.io/name: kyverno-policies
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/product/packages/kyverno-policies.git
  ref:
    tag: 3.3.4-bb.10
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/kyverno-reporter/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: kyverno-reporter
  namespace: bigbang
  labels:
    app.kubernetes.io/name: kyverno-reporter
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/product/packages/kyverno-reporter.git
  ref:
    tag: 3.0.3-bb.1
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/kyverno/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: kyverno
  namespace: bigbang
  labels:
    app.kubernetes.io/name: kyverno
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/product/packages/kyverno.git
  ref:
    tag: 3.3.6-bb.3
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/loki/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: loki
  namespace: bigbang
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/product/packages/loki.git
  ref:
    tag: 6.30.1-bb.1
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/minio-operator/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: minio-operator
  namespace: bigbang
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/product/packages/minio-operator.git
  ref:
    tag: 7.1.1-bb.0
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/minio/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: minio
  namespace: bigbang
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/product/packages/minio.git
  ref:
    tag: 7.1.1-bb.1
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/monitoring/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: monitoring
  namespace: bigbang
  labels:
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/product/packages/monitoring.git
  ref:
    tag: 72.2.0-bb.3
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/neuvector/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: neuvector
  namespace: bigbang
  labels:
    app.kubernetes.io/name: neuvector
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/product/packages/neuvector.git
  ref:
    tag: 2.8.6-bb.0
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/promtail/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: promtail
  namespace: bigbang
  labels:
    app.kubernetes.io/name: promtail
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/product/packages/promtail.git
  ref:
    tag: 6.16.6-bb.4
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/tempo/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: tempo
  namespace: bigbang
  labels:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/product/packages/tempo.git
  ref:
    tag: 1.21.1-bb.0
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/grafana/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
  namespace: bigbang
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
  annotations:
    checksum/bigbang-values: 37a6bf886ba9feab6ba0de74cfa062150ca57e846a5bdc8c334cf2d4ee489d24
spec:
  driftDetection:
    mode: warn
  targetNamespace: monitoring
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: grafana
        namespace: bigbang
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: bigbang-grafana-values
      kind: Secret
      valuesKey: "common"
    - name: bigbang-grafana-values
      kind: Secret
      valuesKey: "defaults"
    - name: bigbang-grafana-values
      kind: Secret
      valuesKey: "overlays"
  dependsOn:
    - name: istiod
      namespace: bigbang
    - name: kyverno-policies
      namespace: bigbang
    - name: monitoring
      namespace: bigbang
---
# Source: bigbang/templates/istio-crds/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: istio-crds
  namespace: bigbang
  labels:
    app.kubernetes.io/name: istio-crds
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
  annotations:
    checksum/bigbang-values: c9bacfe9019508d3ddc33d959b54d5128b60eddce76ebcd461e0f801c3a7c1df
spec:
  releaseName: istio-crds
  targetNamespace: istio-system
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: istio-crds
        namespace: bigbang
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: bigbang-istio-crds-values
      kind: Secret
      valuesKey: "common"
    - name: bigbang-istio-crds-values
      kind: Secret
      valuesKey: "defaults"
    - name: bigbang-istio-crds-values
      kind: Secret
      valuesKey: "overlays"
  dependsOn:
    - name: kyverno-policies
      namespace: bigbang
---
# Source: bigbang/templates/istio-gateway/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: passthrough-ingressgateway
  namespace: bigbang
  labels:
    app.kubernetes.io/name: istio-gateway-passthrough
    app.kubernetes.io/component: core
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
  annotations:
    checksum/bigbang-values: bf1045366f69ff8d4b6ded37e74ce8815bc2405575caab569e89eb3675b9f0b7
spec:
  releaseName: passthrough-ingressgateway
  targetNamespace: istio-gateway
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: istio-gateway
        namespace: bigbang
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3
  
  valuesFrom:
    - name: bigbang-istio-passthrough-gateway-values
      kind: Secret
      valuesKey: "common"
    - name: bigbang-istio-passthrough-gateway-values
      kind: Secret
      valuesKey: "defaults"
    - name: bigbang-istio-passthrough-gateway-values
      kind: Secret
      valuesKey: "overlays"

  dependsOn:
    - name: istiod
      namespace: bigbang
    - name: kyverno-policies
      namespace: bigbang
status: {}
---
# Source: bigbang/templates/istio-gateway/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: public-ingressgateway
  namespace: bigbang
  labels:
    app.kubernetes.io/name: istio-gateway-public
    app.kubernetes.io/component: core
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
  annotations:
    checksum/bigbang-values: bf1045366f69ff8d4b6ded37e74ce8815bc2405575caab569e89eb3675b9f0b7
spec:
  releaseName: public-ingressgateway
  targetNamespace: istio-gateway
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: istio-gateway
        namespace: bigbang
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3
  
  valuesFrom:
    - name: bigbang-istio-public-gateway-values
      kind: Secret
      valuesKey: "common"
    - name: bigbang-istio-public-gateway-values
      kind: Secret
      valuesKey: "defaults"
    - name: bigbang-istio-public-gateway-values
      kind: Secret
      valuesKey: "overlays"

  dependsOn:
    - name: istiod
      namespace: bigbang
    - name: kyverno-policies
      namespace: bigbang
status: {}
---
# Source: bigbang/templates/istiod/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: istiod
  namespace: bigbang
  labels:
    app.kubernetes.io/name: istiod
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
  annotations:
    checksum/bigbang-values: 600d8bb463b617f4429e9c05ca9df2ef8e602e48390b46455f82d917dcf9cd1e
spec:
  releaseName: istiod
  targetNamespace: istio-system
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: istiod
        namespace: bigbang
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: bigbang-istiod-values
      kind: Secret
      valuesKey: "common"
    - name: bigbang-istiod-values
      kind: Secret
      valuesKey: "defaults"
    - name: bigbang-istiod-values
      kind: Secret
      valuesKey: "overlays"

  dependsOn:
    - name: istio-crds
      namespace: bigbang
    - name: kyverno-policies
      namespace: bigbang
---
# Source: bigbang/templates/kiali/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kiali
  namespace: bigbang
  labels:
    app.kubernetes.io/name: kiali
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
  annotations:
    checksum/bigbang-values: 8acdd82c9264f9064f3c7d468afd574cb262242f4cdd8079588e6238205f6d2e
spec:
  targetNamespace: kiali
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: kiali
        namespace: bigbang
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: bigbang-kiali-values
      kind: Secret
      valuesKey: "common"
    - name: bigbang-kiali-values
      kind: Secret
      valuesKey: "defaults"
    - name: bigbang-kiali-values
      kind: Secret
      valuesKey: "overlays"

  
  dependsOn:
    - name: istiod
      namespace: bigbang
    - name: monitoring
      namespace: bigbang
---
# Source: bigbang/templates/kyverno-policies/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kyverno-policies
  namespace: bigbang
  labels:
    app.kubernetes.io/name: kyverno-policies
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
  annotations:
    checksum/bigbang-values: ca8e63bd9e438e01a4bb33f3130975b151ee7c8a0ff26af093b21b34ffbfa729
spec:
  targetNamespace: kyverno
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: kyverno-policies
        namespace: bigbang
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: bigbang-kyverno-policies-values
      kind: Secret
      valuesKey: "common"
    - name: bigbang-kyverno-policies-values
      kind: Secret
      valuesKey: "defaults"
    - name: bigbang-kyverno-policies-values
      kind: Secret
      valuesKey: "overlays"
  dependsOn:
    - name: kyverno
      namespace: bigbang
---
# Source: bigbang/templates/kyverno-reporter/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kyverno-reporter
  namespace: bigbang
  labels:
    app.kubernetes.io/name: kyverno-reporter
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
  annotations:
    checksum/bigbang-values: 4896f359c20da86a2691d9e143bd5851caa8e783b6f252093baadcad8c3b3e9d
spec:
  targetNamespace: kyverno-reporter
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: kyverno-reporter
        namespace: bigbang
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: bigbang-kyverno-reporter-values
      kind: Secret
      valuesKey: "common"
    - name: bigbang-kyverno-reporter-values
      kind: Secret
      valuesKey: "defaults"
    - name: bigbang-kyverno-reporter-values
      kind: Secret
      valuesKey: "overlays"
  dependsOn:
    - name: kyverno
      namespace: bigbang
    - name: kyverno-policies
      namespace: bigbang
    - name: monitoring
      namespace: bigbang
    - name: istiod
      namespace: bigbang
---
# Source: bigbang/templates/kyverno/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kyverno
  namespace: bigbang
  labels:
    app.kubernetes.io/name: kyverno
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
  annotations:
    checksum/bigbang-values: 238a8f7e60900be5e70922996586f16f702b1e5eb457e3523f13ce28ac8330e4
spec:
  targetNamespace: kyverno
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: kyverno
        namespace: bigbang
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: bigbang-kyverno-values
      kind: Secret
      valuesKey: "common"
    - name: bigbang-kyverno-values
      kind: Secret
      valuesKey: "defaults"
    - name: bigbang-kyverno-values
      kind: Secret
      valuesKey: "overlays"
---
# Source: bigbang/templates/loki/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: loki
  namespace: bigbang
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
  annotations:
    checksum/bigbang-values: 14dc759767c2462a244393c3280088dd5117fe08c97af75432db666f6545be81
spec:
  driftDetection:
    mode: warn
    ignore:
      - paths: [""]
        target:
          kind: Tenant
      - paths: [""]
        target:
         kind: Sidecar
  releaseName: logging-loki
  targetNamespace: logging
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: loki
        namespace: bigbang
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: bigbang-loki-values
      kind: Secret
      valuesKey: "common"
    - name: bigbang-loki-values
      kind: Secret
      valuesKey: "defaults"
    - name: bigbang-loki-values
      kind: Secret
      valuesKey: "overlays"
  dependsOn:
    - name: monitoring
      namespace: bigbang
    - name: istiod
      namespace: bigbang
    - name: kyverno-policies
      namespace: bigbang
    - name: minio-operator
      namespace: bigbang
---
# Source: bigbang/templates/minio-operator/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: minio-operator
  namespace: bigbang
  annotations:
    checksum/bigbang-values: 49d7bbe53bf94f0f6691e11ccd55c2830d0ed657827c363e93b6a1e06b1308ca
spec:
  targetNamespace: minio-operator
  driftDetection:
    mode: warn
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: minio-operator
        namespace: bigbang
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: bigbang-minio-operator-values
      kind: Secret
      valuesKey: "common"
    - name: bigbang-minio-operator-values
      kind: Secret
      valuesKey: "defaults"
    - name: bigbang-minio-operator-values
      kind: Secret
      valuesKey: "overlays"

  values:
    podAnnotations:
      sidecar.istio.io/inject: "true"
      traffic.sidecar.istio.io/includeInboundPorts: "*"
      traffic.sidecar.istio.io/excludeInboundPorts: "9443"
    imagePullSecrets:
      - name: private-registry
  dependsOn:
    - name: istiod
      namespace: bigbang
    - name: kyverno-policies
      namespace: bigbang
---
# Source: bigbang/templates/monitoring/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: monitoring
  namespace: bigbang
  labels:
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
  annotations:
    checksum/bigbang-values: daa94d2b10cb6f0396aa760924218225aff1848c76220d458ca9c9740e0a72ed
spec:
  targetNamespace: monitoring
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: monitoring
        namespace: bigbang
      interval: 5m
  install:
    crds: CreateReplace
    disableOpenAPIValidation: true
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 20m
  upgrade:
    cleanupOnFail: false
    crds: CreateReplace
    disableOpenAPIValidation: true
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: bigbang-monitoring-values
      kind: Secret
      valuesKey: "common"
    - name: bigbang-monitoring-values
      kind: Secret
      valuesKey: "defaults"
    - name: bigbang-monitoring-values
      kind: Secret
      valuesKey: "overlays"
  dependsOn:
    - name: istiod
      namespace: bigbang
    - name: kyverno-policies
      namespace: bigbang
---
# Source: bigbang/templates/neuvector/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: neuvector
  namespace: bigbang
  labels:
    app.kubernetes.io/name: neuvector
    app.kubernetes.io/component: "sandbox"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
  annotations:
    checksum/bigbang-values: 2ad73c10787e7a97a94a6cb1cc6b8625b00b18aff64ea6260d67c018173533ca
spec:
  targetNamespace: neuvector
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: neuvector
        namespace: bigbang
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: bigbang-neuvector-values
      kind: Secret
      valuesKey: "common"
    - name: bigbang-neuvector-values
      kind: Secret
      valuesKey: "defaults"
    - name: bigbang-neuvector-values
      kind: Secret
      valuesKey: "overlays"
  dependsOn:
    - name: istiod
      namespace: bigbang
    - name: kyverno-policies
      namespace: bigbang
    - name: monitoring
      namespace: bigbang
---
# Source: bigbang/templates/promtail/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: promtail
  namespace: bigbang
  labels:
    app.kubernetes.io/name: promtail
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
  annotations:
    checksum/bigbang-values: 37e6ec452f49e4066e6c1cd8b9aa287f008c7692e7a2bc73f89945c634bacda9
spec:
  driftDetection:
    mode: warn
  targetNamespace: promtail
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: promtail
        namespace: bigbang
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: bigbang-promtail-values
      kind: Secret
      valuesKey: "common"
    - name: bigbang-promtail-values
      kind: Secret
      valuesKey: "defaults"
    - name: bigbang-promtail-values
      kind: Secret
      valuesKey: "overlays"

  dependsOn:
    - name: loki
      namespace: bigbang
    - name: istiod
      namespace: bigbang
    - name: kyverno-policies
      namespace: bigbang
---
# Source: bigbang/templates/tempo/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: tempo
  namespace: bigbang
  labels:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
  annotations:
    checksum/bigbang-values: f81b371ac164fa3d82776330fccd60c69022512e4c72feee57662d2f8b05b11d
spec:
  driftDetection:
    mode: warn
  targetNamespace: tempo
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: tempo
        namespace: bigbang
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: bigbang-tempo-values
      kind: Secret
      valuesKey: "common"
    - name: bigbang-tempo-values
      kind: Secret
      valuesKey: "defaults"
    - name: bigbang-tempo-values
      kind: Secret
      valuesKey: "overlays"
  dependsOn:
    - name: monitoring
      namespace: bigbang
    - name: istiod
      namespace: bigbang
---
# Source: bigbang/templates/grafana/flux/provider.yaml
apiVersion: notification.toolkit.fluxcd.io/v1beta3
kind: Provider
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: bigbang
    app.kubernetes.io/version: 2.54.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.54.0
spec:
  type: grafana
  address: "http://monitoring-monitoring-grafana.monitoring/api/annotations"
  secretRef:
    name: grafana-flux-auth
