USER-SUPPLIED VALUES:
addons:
  anchoreEnterprise:
    adminPassword: admin
    enabled: false
    enterprise:
      enabled: true
      licenseYaml: |
        "TBD"
    sso:
      client_id: platform1_a8604cc9-f5e9-4656-802d-d05624370245_bb8-anchore
      enabled: true
    values:
      analyzer:
        replicaCount: 1
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
      api:
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
      bbtests:
        cypress:
          envs:
            cypress_url: https://anchore.dev.bigbang.mil
        enabled: true
        scripts:
          envs:
            ANCHORE_CLI_URL: https://anchore-api.dev.bigbang.mil/v1
      catalog:
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
      ensureDbJobs:
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
      feeds:
        feeds-db:
          metrics:
            resources:
              requests:
                memory: 200Mi
          resources:
            requests:
              memory: 200Mi
        feedsUpgradeJob:
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
      istio:
        hardened:
          customServiceEntries:
          - enabled: true
            name: anchore-allow-cypress-tests
            spec:
              hosts:
              - registry.npmjs.org
              - download.cypress.io
              - cdn.cypress.io
              - repo1.dso.mil
              - auth.docker.io
              - registry-1.docker.io
              - anchore.dev.bigbang.mil
              location: MESH_EXTERNAL
              ports:
              - name: https
                number: 443
                protocol: TLS
              resolution: DNS
      notifications:
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
      policyEngine:
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
      postgresql:
        metrics:
          resources:
            requests:
              memory: 200Mi
        persistence:
          size: 256Mi
        resources:
          requests:
            memory: 1024Mi
      rbacManager:
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
      reports:
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
      simpleQueue:
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
      sso:
        resources:
          requests:
            memory: 200Mi
      ui:
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
      ui-redis:
        replica:
          autoscaling:
            enabled: false
          replicaCount: 0
      upgradeJob:
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
  argocd:
    enabled: false
    sso:
      client_id: platform1_a8604cc9-f5e9-4656-802d-d05624370245_bb8-argocd
      client_secret: anything-for-dev
      enabled: true
      groups: |
        g, Impact Level 2 Authorized, role:admin
    values:
      bbtests:
        cypress:
          envs:
            cypress_url: https://argocd.dev.bigbang.mil
          resources:
            limits:
              memory: 12Gi
        enabled: true
        istio:
          sidecar:
            resources:
              cpu:
                limits: 2000m
                requests: 100m
              memory:
                limits: 2048Mi
                requests: 512Mi
        scripts:
          envs:
            ARGOCD_SERVER: https://argocd.dev.bigbang.mil
      global:
        redis:
          password: ci-testing
      istio:
        hardened:
          customServiceEntries:
          - enabled: true
            name: cypress-service-entries-argocd
            spec:
              hosts:
              - registry.npmjs.org
              - download.cypress.io
              - cdn.cypress.io
              - repo1.dso.mil
              - argocd.dev.bigbang.mil
              location: MESH_EXTERNAL
              ports:
              - name: https
                number: 443
                protocol: HTTPS
              - name: http
                number: 80
                protocol: HTTP
              resolution: DNS
      redis-bb:
        master:
          persistence:
            size: 512Mi
        replica:
          autoscaling:
            enabled: false
          persistence:
            size: 512Mi
          replicaCount: 0
      upstream:
        configs:
          rbac:
            policy.default: role:admin
          secret:
            argocdServerAdminPassword: $2a$10$rUDZDckdDZ2TEwk9PDs3QuqjkL58qR1IHE1Kj4MwDx.7/m5dytZJm
        controller:
          resources:
            requests:
              memory: 2Gi
        redis:
          resources:
            requests:
              memory: 256Mi
        repoServer:
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
  authservice:
    chains:
      minimal:
        callback_uri: https://minimal.dev.bigbang.mil/login
    enabled: true
    values:
      redis:
        enabled: true
      redis-bb:
        master:
          persistence:
            size: 256Mi
        replica:
          autoscaling:
            enabled: false
          persistence:
            size: 256Mi
          replicaCount: 0
      resources:
        requests:
          memory: 100Mi
  backstage:
    enabled: false
    values:
      backstage:
        backstage:
          appConfig:
            auth:
              environment: development
              providers:
                guest:
                  dangerouslyAllowOutsideDevelopment: true
            organization:
              name: P1
            proxy:
              /grafana/api:
                headers:
                  Authorization: Bearer abc-123
                target: https://example.com
      bbtests:
        cypress:
          envs:
            cypress_url: https://backstage.dev.bigbang.mil
        enabled: true
  confluence:
    sso:
      client_id: platform1_a8604cc9-f5e9-4656-802d-d05624370245_bb8-confluence
      enabled: true
  externalSecrets:
    enabled: false
    values:
      bbtests:
        enabled: true
  fortify:
    enabled: false
    flux:
      timeout: 15m
    ingress:
      gateway: ""
    sso:
      client_id: platform1_a8604cc9-f5e9-4656-802d-d05624370245_bb8-fortify
      enabled: true
    values:
      bbtests:
        cypress:
          envs:
            cypress_url: https://fortify.dev.bigbang.mil
        enabled: true
      databaseSecret:
        useRoot: true
      fortify_autoconfig: |
        appProperties:
          host.validation: false
        datasourceProperties:
          db.username: root
          db.password: password
          jdbc.url: 'jdbc:mysql://fortify-mysql:3306/ssc_db?sessionVariables=collation_connection=latin1_general_cs&rewriteBatchedStatements=true'
        dbMigrationProperties:
          migration.enabled: true
          migration.username: root
          migration.password: password
      initContainer:
        resources:
          limits:
            cpu: 1
            memory: 500Mi
      istio:
        hardened:
          customServiceEntries:
          - enabled: true
            name: cypress-service-entries-fortify
            spec:
              hosts:
              - registry.npmjs.org
              - download.cypress.io
              - cdn.cypress.io
              - fortify.dev.bigbang.mil
              - repo1.dso.mil
              location: MESH_EXTERNAL
              ports:
              - name: https
                number: 443
                protocol: TLS
              resolution: DNS
      jvmMaxRAMPercentage: 85
      mysql:
        metrics:
          resources:
            limits:
              cpu: 100m
              memory: 500Mi
        primary:
          resources:
            limits:
              cpu: 2
              memory: 2Gi
            requests:
              cpu: 100m
              memory: 500Mi
        secondary:
          resources:
            limits:
              cpu: 100m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 500Mi
      storage:
        volume: 5Gi
  gitlab:
    enabled: false
    flux:
      timeout: 30m
    sso:
      client_id: platform1_a8604cc9-f5e9-4656-802d-d05624370245_bb8-gitlab
      enabled: true
    values:
      bbtests:
        cypress:
          envs:
            cypress_url: https://gitlab.dev.bigbang.mil
        enabled: true
        scripts:
          envs:
            GITLAB_REGISTRY: registry.dev.bigbang.mil
      gitlab:
        gitaly:
          persistence:
            size: 256Mi
        gitlab-shell:
          maxReplicas: 1
          minReplicas: 1
        migrations:
          resources:
            requests:
              cpu: 10m
        shared-secrets:
          resources:
            requests:
              cpu: 10m
        sidekiq:
          maxReplicas: 1
          minReplicas: 1
        toolbox:
          persistence:
            size: 256Mi
          resources:
            requests:
              cpu: 10m
        webservice:
          maxReplicas: 1
          minReplicas: 1
      gitlab-runner:
        resources:
          requests:
            cpu: 10m
      global:
        rails:
          bootstrap:
            enabled: false
      istio:
        hardened:
          customServiceEntries:
          - enabled: true
            name: cypress-service-entries-gitlab
            spec:
              hosts:
              - registry.npmjs.org
              - download.cypress.io
              - cdn.cypress.io
              - gitlab.dev.bigbang.mil
              - registry.dev.bigbang.mil
              - keycloak.dev.bigbang.mil
              - repo1.dso.mil
              - registry1.dso.mil
              - ib-prod-harbor-storage.s3.us-gov-west-1.amazonaws.com
              - ib-prod-harbor-storage.s3.us-gov-east-1.amazonaws.com
              location: MESH_EXTERNAL
              ports:
              - name: https
                number: 443
                protocol: TLS
              resolution: DNS
      minio:
        persistence:
          size: 256Mi
        resources:
          requests:
            cpu: 50m
      postgresql:
        metrics:
          resources:
            requests:
              cpu: 10m
        persistence:
          size: 256Mi
      redis:
        master:
          persistence:
            size: 256Mi
        slave:
          persistence:
            size: 256Mi
      registry:
        hpa:
          maxReplicas: 1
          minReplicas: 1
  gitlabRunner:
    enabled: false
    values:
      bbtests:
        cypress:
          envs:
            cypress_gitlab_email: gitlab@dev.bigbang.mil
            cypress_gitlab_first_name: testrunner
            cypress_gitlab_last_name: userrunner
            cypress_gitlab_password: Runner_PaSsw0rd123
            cypress_gitlab_username: gitlabrunner_user
            cypress_url: https://gitlab.dev.bigbang.mil
          resources:
            limits:
              cpu: 4
              memory: 6Gi
            requests:
              cpu: 2
              memory: 4Gi
        enabled: true
      istio:
        hardened:
          customServiceEntries:
          - enabled: true
            name: cypress-service-entries-gitlab-runner
            spec:
              hosts:
              - registry.npmjs.org
              - download.cypress.io
              - cdn.cypress.io
              - gitlab.dev.bigbang.mil
              - repo1.dso.mil
              location: MESH_EXTERNAL
              ports:
              - name: https
                number: 443
                protocol: TLS
              resolution: DNS
      networkPolicies:
        additionalPolicies:
        - name: egress-runner-jobs
          spec:
            egress:
            - to:
              - ipBlock:
                  cidr: 0.0.0.0/0
            podSelector: {}
            policyTypes:
            - Egress
      resources:
        limits: {}
        requests:
          cpu: 50m
          memory: 64Mi
      upstream:
        runners:
          protected: false
  harbor:
    enabled: false
    values:
      bbtests:
        cypress:
          artifacts: true
          envs:
            cypress_url: https://harbor.dev.bigbang.mil
        enabled: true
        scripts:
          envs:
            HARBOR_REGISTRY: harbor.dev.bigbang.mil
      core:
        replicas: 2
        secretName: ci-only
      exporter:
        replicas: 2
      expose:
        tls:
          enabled: false
        type: clusterIP
      externalURL: https://harbor.dev.bigbang.mil
      internalTLS:
        enabled: false
      istio:
        hardened:
          customServiceEntries:
          - enabled: true
            name: allow-npm-for-cypress-tests
            spec:
              hosts:
              - registry.npmjs.org
              - registry1.dso.mil
              - ib-prod-harbor-storage.s3.us-gov-west-1.amazonaws.com
              - ib-prod-harbor-storage.s3.us-gov-east-1.amazonaws.com
              - download.cypress.io
              - cdn.cypress.io
              - repo1.dso.mil
              - index.docker.io
              - auth.docker.io
              - production.cloudflare.docker.com
              location: MESH_EXTERNAL
              ports:
              - name: https
                number: 443
                protocol: TLS
              resolution: DNS
      nginx:
        replicas: 2
      portal:
        replicas: 2
      trivy:
        resources:
          limits:
            cpu: 300m
            memory: 500Mi
          requests:
            cpu: 160m
            memory: 300Mi
  headlamp:
    values:
      bbtests:
        cypress:
          artifacts: true
          envs:
            cypress_url: https://headlamp.dev.bigbang.mil
        enabled: true
      istio:
        hardened:
          enabled: true
      networkPolicies:
        enabled: true
  jira:
    sso:
      client_id: platform1_a8604cc9-f5e9-4656-802d-d05624370245_bb8-jira
      enabled: true
  keycloak:
    enabled: false
    ingress:
      cert: |
        -----BEGIN CERTIFICATE-----
        MIIFIjCCBAqgAwIBAgISBXVA50uT+ZS8HXGKDYrB+z72MA0GCSqGSIb3DQEBCwUA
        MDMxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MQwwCgYDVQQD
        EwNSMTAwHhcNMjUwNDI5MTIzMDU1WhcNMjUwNzI4MTIzMDU0WjAcMRowGAYDVQQD
        DBEqLmRldi5iaWdiYW5nLm1pbDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC
        ggEBAL5wM0PwAjTSvRaiszu8ttJVGwGXbr5xhBADFAISgbdQjKJiiXgzo9kS89Sb
        2huIzRnr8D0lttSoRfaaKCk5P387zWr6gOvS3nyk7GRyqIf85AJDlqjDdkuFIj/j
        GJomE8d1+smRaNMSFc3404WqaIzS5cLE5rWxa5/zp+/Kxu01CdRy3MEi0GN6L0T7
        nBbZH8QGmSW+CDBCuihI8+6009Pfrmo3B8wbes3afdXHMaFCgC67uUOPXfhT0lox
        UX2+iqITiD6RLTIlsmMZprpNIOZORT9jjLzKncdt8N7S754N7zx5uMagGhktIzR0
        QQ7oYUvYBT0kcWxSbRGPFaCtO1ECAwEAAaOCAkUwggJBMA4GA1UdDwEB/wQEAwIF
        oDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAd
        BgNVHQ4EFgQU59l/H9uVbCdhsKrH28HVh3JrxCUwHwYDVR0jBBgwFoAUu7zDR6Xk
        vKnGw6RyDBCNojXhyOgwVwYIKwYBBQUHAQEESzBJMCIGCCsGAQUFBzABhhZodHRw
        Oi8vcjEwLm8ubGVuY3Iub3JnMCMGCCsGAQUFBzAChhdodHRwOi8vcjEwLmkubGVu
        Y3Iub3JnLzAcBgNVHREEFTATghEqLmRldi5iaWdiYW5nLm1pbDATBgNVHSAEDDAK
        MAgGBmeBDAECATAvBgNVHR8EKDAmMCSgIqAghh5odHRwOi8vcjEwLmMubGVuY3Iu
        b3JnLzExOS5jcmwwggEDBgorBgEEAdZ5AgQCBIH0BIHxAO8AdgCkQsUGSWBhVI8P
        1Oqc+3otJkVNh6l/L99FWfYnTzqEVAAAAZaBvPBAAAAEAwBHMEUCIEGTl6vbwZLY
        IWCd/HFB7DoMw1yURte+488pF69S9FoiAiEAtynidSM0Xw/9RPeTlmqeZoAkCL4s
        NY+mqK01ItHaTYoAdQDd3Mo0ldfhFgXnlTL6x5/4PRxQ39sAOhQSdgosrLvIKgAA
        AZaBvPCIAAAEAwBGMEQCIBMYtcuNVglI4k3SPjeuPqeeECUrhi89RLViYizylh9X
        AiAUghafqmfwWxg7kG/cBQSm9PWs9II8HG2Q6dfWzo84rzANBgkqhkiG9w0BAQsF
        AAOCAQEAMxxGUgiSyvsDNrYvr5CRH6ygYmHT2GBWl6MuVl5/uXMKIEJtB27zIoD2
        iNpU73s6QANLgFZCfuyjSQsxlXgj57EdCxtZNgvoEuHkvPLBzfJPrY4kbVXatwHD
        XzpBIbDdfRbL0Pef/tgvo4xzwSCkGUnfQhZG0YT76kfU402IuyHWVp1lmaqKhzI3
        TpKeHk8CezDcfu2awZz2abe2D/dCaTk3dREBuA7C4VTyCNrwrYS/JicZ5LqzxGcs
        1uUmhlVoGYV5t+oUPtPrGxTIJdjjyS3g1LH/KHNi+mZ7PKUVuHkVAIDdcei0rb7a
        oDXewxj0kIgAKidPtqkuekUoKdLxDw==
        -----END CERTIFICATE-----
        -----BEGIN CERTIFICATE-----
        MIIFBTCCAu2gAwIBAgIQS6hSk/eaL6JzBkuoBI110DANBgkqhkiG9w0BAQsFADBP
        MQswCQYDVQQGEwJVUzEpMCcGA1UEChMgSW50ZXJuZXQgU2VjdXJpdHkgUmVzZWFy
        Y2ggR3JvdXAxFTATBgNVBAMTDElTUkcgUm9vdCBYMTAeFw0yNDAzMTMwMDAwMDBa
        Fw0yNzAzMTIyMzU5NTlaMDMxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBF
        bmNyeXB0MQwwCgYDVQQDEwNSMTAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
        AoIBAQDPV+XmxFQS7bRH/sknWHZGUCiMHT6I3wWd1bUYKb3dtVq/+vbOo76vACFL
        YlpaPAEvxVgD9on/jhFD68G14BQHlo9vH9fnuoE5CXVlt8KvGFs3Jijno/QHK20a
        /6tYvJWuQP/py1fEtVt/eA0YYbwX51TGu0mRzW4Y0YCF7qZlNrx06rxQTOr8IfM4
        FpOUurDTazgGzRYSespSdcitdrLCnF2YRVxvYXvGLe48E1KGAdlX5jgc3421H5KR
        mudKHMxFqHJV8LDmowfs/acbZp4/SItxhHFYyTr6717yW0QrPHTnj7JHwQdqzZq3
        DZb3EoEmUVQK7GH29/Xi8orIlQ2NAgMBAAGjgfgwgfUwDgYDVR0PAQH/BAQDAgGG
        MB0GA1UdJQQWMBQGCCsGAQUFBwMCBggrBgEFBQcDATASBgNVHRMBAf8ECDAGAQH/
        AgEAMB0GA1UdDgQWBBS7vMNHpeS8qcbDpHIMEI2iNeHI6DAfBgNVHSMEGDAWgBR5
        tFnme7bl5AFzgAiIyBpY9umbbjAyBggrBgEFBQcBAQQmMCQwIgYIKwYBBQUHMAKG
        Fmh0dHA6Ly94MS5pLmxlbmNyLm9yZy8wEwYDVR0gBAwwCjAIBgZngQwBAgEwJwYD
        VR0fBCAwHjAcoBqgGIYWaHR0cDovL3gxLmMubGVuY3Iub3JnLzANBgkqhkiG9w0B
        AQsFAAOCAgEAkrHnQTfreZ2B5s3iJeE6IOmQRJWjgVzPw139vaBw1bGWKCIL0vIo
        zwzn1OZDjCQiHcFCktEJr59L9MhwTyAWsVrdAfYf+B9haxQnsHKNY67u4s5Lzzfd
        u6PUzeetUK29v+PsPmI2cJkxp+iN3epi4hKu9ZzUPSwMqtCceb7qPVxEbpYxY1p9
        1n5PJKBLBX9eb9LU6l8zSxPWV7bK3lG4XaMJgnT9x3ies7msFtpKK5bDtotij/l0
        GaKeA97pb5uwD9KgWvaFXMIEt8jVTjLEvwRdvCn294GPDF08U8lAkIv7tghluaQh
        1QnlE4SEN4LOECj8dsIGJXpGUk3aU3KkJz9icKy+aUgA+2cP21uh6NcDIS3XyfaZ
        QjmDQ993ChII8SXWupQZVBiIpcWO4RqZk3lr7Bz5MUCwzDIA359e57SSq5CCkY0N
        4B6Vulk7LktfwrdGNVI5BsC9qqxSwSKgRJeZ9wygIaehbHFHFhcBaMDKpiZlBHyz
        rsnnlFXCb5s8HKn5LsUgGvB24L7sGNZP2CX7dhHov+YhD+jozLW2p9W4959Bz2Ei
        RmqDtmiXLnzqTpXbI+suyCsohKRg6Un0RC47+cpiVwHiXZAW+cn8eiNIjqbVgXLx
        KPpdzvvtTnOPlC7SQZSYmdunr3Bf9b77AiC/ZidstK36dRILKz7OA54=
        -----END CERTIFICATE-----
      gateway: ""
      key: |
        -----BEGIN PRIVATE KEY-----
        MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQC+cDND8AI00r0W
        orM7vLbSVRsBl26+cYQQAxQCEoG3UIyiYol4M6PZEvPUm9obiM0Z6/A9JbbUqEX2
        migpOT9/O81q+oDr0t58pOxkcqiH/OQCQ5aow3ZLhSI/4xiaJhPHdfrJkWjTEhXN
        +NOFqmiM0uXCxOa1sWuf86fvysbtNQnUctzBItBjei9E+5wW2R/EBpklvggwQroo
        SPPutNPT365qNwfMG3rN2n3VxzGhQoAuu7lDj134U9JaMVF9voqiE4g+kS0yJbJj
        Gaa6TSDmTkU/Y4y8yp3HbfDe0u+eDe88ebjGoBoZLSM0dEEO6GFL2AU9JHFsUm0R
        jxWgrTtRAgMBAAECggEAH719neYjyAATyfEGJH+4jOfoX2SI7a7nzu9kZ1AEVLRV
        LD92IBWjSmvRPe9X89ziKl7bpKVjiqAdQRPCe9Rx09f4zcrAsA1uTaIDUF6X3kp1
        CjePpcMmNUIUSkekcxTDmSv9x5i3uu45uiGtx4p2cHo6FzNQLJpMkNVAeUP30dMK
        LXIum4Iuqvlar0nSAcB0WhJkImPCBzOQhivQLppvCgxIOFei6U4d0NUpgnFfBerF
        2KtEXT6wjo3JnchPsDrh9Dm6d6bHlYk0f00zoVszNDqS83NSVexe3UT2u8LK1/FH
        iIXFuVa/lsueFhwVIeBSf2sKaHW5fZFkzFOapOm0zQKBgQD2NACFnXZdcFltXnos
        XFBZmiXCtZyrk8eDBw09FnelhsOPSpOjRJWHYgRhgsXlALwDr8vNrh2GLntJNT//
        f3CIxYjfVQ2GoXYx2/T7gr0mNNkwD9qkxjOGF9ugcKe1mEaH+UcPlA8FOsQQVkSZ
        MVfDRFmx/2Z8wWhLB8OtkUMldwKBgQDGBCNnb2cebtmogNkzRZLrdm3IGY6vQBRh
        lHzKN5a9vxlNiYdtOc5kIULTa/HR88EPdSNQ+5S4tKCij1LsZ9nBqmT1DKPk5k4Z
        FulaFtlAwlZIWPzyVwoaD7aYIUKsNnpJAp9U3o7nUYDvZBmYle5zDWMMf0ql3cZu
        HuDUEXf3dwKBgGhgU3hR8URbxQ3g59q2qDnUZ/3MEMeMtyCNdMdZJxA9udqdu0mU
        YfArVcAhONSFIzBM7xIbptikDBBVSvR+iq7xT72eyUUyXnF01r9qBdaUwR7nGcKR
        ZHaM1seF+xO5ou0yeTXZhySobUafzCVGDfbymzQjGsf5FsX4XLTQyK6xAoGAbePK
        ChMG9RqrbBnlb9DCki2tCwkz6An1xZl0D3z+CNtOnXsfTvxvj53tygrzroJJt9xX
        9w9HH6IOK2jCqjOP4yw+zsdvBQ7SdJYEdlyLwKaY35mS9qJbFs91k8ORjqTFBFOS
        PLUuNS1EEpZIpic+p1bciwjxUk9bWa2FM+tl2k0CgYAuCZq77/kHSap1DtfA/5nc
        ++f+X3EO76jiPyiXxUmpl6+HIWXjJzHf5h7kwZAUiZRPhmsh89LmWK+s9zu+JyP3
        DxMtMWp5wKLmJ8WQMRv/+Vok1o20a7ZHXD/pjHR9Z1ctdWxZQudalFMZsP35c5ao
        cXeTLsophS/XZApYTmlaMA==
        -----END PRIVATE KEY-----
    values:
      bbtests:
        cypress:
          envs:
            cypress_url: https://keycloak.dev.bigbang.mil
        enabled: true
      istio:
        hardened:
          customAuthorizationPolicies:
          - enabled: true
            name: allow-intranamespace-keycloak
            spec:
              action: ALLOW
              rules:
              - from:
                - source:
                    namespaces:
                    - keycloak
          customServiceEntries:
          - enabled: true
            name: cypress-service-entries-keycloak
            spec:
              exportTo:
              - .
              hosts:
              - keycloak.dev.bigbang.mil
              - repo1.dso.mil
              location: MESH_EXTERNAL
              ports:
              - name: https
                number: 443
                protocol: TLS
              resolution: DNS
      upstream:
        args:
        - start
        - --import-realm
        command:
        - /opt/keycloak/bin/kc.sh
        extraEnv: |-
          - name: JAVA_OPTS_APPEND
            value: >-
              -Djgroups.dns.query={{ include "keycloak.fullname" . }}-headless
          - name: KC_HTTPS_CERTIFICATE_FILE
            value: /opt/keycloak/conf/tls.crt
          - name: KC_HTTPS_CERTIFICATE_KEY_FILE
            value: /opt/keycloak/conf/tls.key
          - name: KC_HTTPS_CLIENT_AUTH
            value: request
          - name: KC_TRUSTSTORE_PATHS
            value: /etc/ssl/certs/
          - name: KC_HOSTNAME
            value: keycloak.dev.bigbang.mil
          - name: KC_HOSTNAME_STRICT
            value: "true"
          - name: KC_LOG_LEVEL
            value: "ALL"
        extraInitContainers: |
          - name: plugin
            image: registry1.dso.mil/ironbank/big-bang/p1-keycloak-plugin:3.6.7
            imagePullPolicy: Always
            command:
            - sh
            - -c
            - |
              cp /app/p1-keycloak-plugin.jar /init
              ls -l /init
            volumeMounts:
            - name: plugin
              mountPath: "/init"
            securityContext:
              capabilities:
                drop:
                - ALL
        extraVolumeMounts: |-
          - name: tlscert
            mountPath: /etc/x509/https/tls.crt
            subPath: tls.crt
            readOnly: true
          - name: tlskey
            mountPath: /etc/x509/https/tls.key
            subPath: tls.key
            readOnly: true
          - name: tlscert
            mountPath: /opt/keycloak/conf/tls.crt
            subPath: tls.crt
            readOnly: true
          - name: tlskey
            mountPath: /opt/keycloak/conf/tls.key
            subPath: tls.key
            readOnly: true
          - name: customreg
            mountPath: /opt/keycloak/conf/customreg.yaml
            subPath: customreg.yaml
            readOnly: true
          - name: realm
            mountPath: /opt/keycloak/data/import/realm.json
            subPath: realm.json
          - name: plugin
            mountPath: /opt/keycloak/providers/p1-keycloak-plugin.jar
            subPath: p1-keycloak-plugin.jar
          - name: quarkusproperties
            mountPath: /opt/keycloak/conf/quarkus.properties
            subPath: quarkus.properties
        extraVolumes: |-
          - name: customreg
            secret:
              secretName: {{ include "keycloak.fullname" . }}-customreg
          - name: realm
            secret:
              secretName: {{ include "keycloak.fullname" . }}-realm
          - name: plugin
            emptyDir: {}
          - name: quarkusproperties
            secret:
              secretName: {{ include "keycloak.fullname" . }}-quarkusproperties
              defaultMode: 0777
          - name: tlscert
            secret:
              secretName: {{ include "keycloak.fullname" . }}-tlscert
          - name: tlskey
            secret:
              secretName: {{ include "keycloak.fullname" . }}-tlskey
        http:
          internalScheme: HTTPS
        replicas: 1
        secrets:
          customreg:
            stringData:
              customreg.yaml: |-
                x509:
                  # User attribute to bind to when associating PKI with a user account
                  userIdentityAttribute: "usercertificate"

                  # Reset on every login to "", tracks if the current login session is using PKI at all, even if not bound to the user
                  userActive509Attribute: "activecac"

                  # When a user with valid PKI registers, join to the listed groups
                  autoJoinGroup:
                  - "/Impact Level 2 Authorized"
                  - "/Impact Level 4 Authorized"
                  - "/Impact Level 5 Authorized"

                  # Policies that must match to consider the cert valid
                  requiredCertificatePolicies:
                  - "2.16.840.1.101.2.1.11.5" #id-US-dod-medium
                  - "2.16.840.1.101.2.1.11.9" #id-US-dod-mediumhardware
                  - "2.16.840.1.101.2.1.11.10" #id-US-dod-PIV-Auth
                  - "2.16.840.1.101.2.1.11.17" #id-US-dod-mediumNPE
                  - "2.16.840.1.101.2.1.11.18" #id-US-dod-medium-2048
                  - "2.16.840.1.101.2.1.11.19" #id-US-dod-mediumHardware-2048
                  - "2.16.840.1.101.2.1.11.20" #id-US-dod-PIV-Auth-2048
                  - "2.16.840.1.101.2.1.11.31" #id-US-dod-peerInterop
                  - "2.16.840.1.101.2.1.11.36" #id-US-dod-mediumNPE-112
                  - "2.16.840.1.101.2.1.11.37" #id-US-dod-mediumNPE-128
                  - "2.16.840.1.101.2.1.11.38" #id-US-dod-mediumNPE-192
                  - "2.16.840.1.101.2.1.11.39" #id-US-dod-medium-112
                  - "2.16.840.1.101.2.1.11.40" #id-US-dod-medium-128
                  - "2.16.840.1.101.2.1.11.41" #id-US-dod-medium-192
                  - "2.16.840.1.101.2.1.11.42" #id-US-dod-mediumHardware-112
                  - "2.16.840.1.101.2.1.11.43" #id-US-dod-mediumHardware-128
                  - "2.16.840.1.101.2.1.11.44" #id-US-dod-mediumHardware-192
                  - "2.16.840.1.101.2.1.11.59" #id-US-dod-admin
                  - "2.16.840.1.101.2.1.11.60" #id-US-dod-internalNPE-112
                  - "2.16.840.1.101.2.1.11.61" #id-US-dod-internalNPE-128
                  - "2.16.840.1.101.2.1.11.62" #id-US-dod-internalNPE-192
                  - "2.16.840.1.101.3.2.1.12.1" #id-eca-medium
                  - "2.16.840.1.101.3.2.1.12.2" #id-eca-medium-hardware
                  - "2.16.840.1.101.3.2.1.12.3" #id-eca-medium-token
                  - "2.16.840.1.101.3.2.1.12.4" #id-eca-medium-sha256
                  - "2.16.840.1.101.3.2.1.12.5" #id-eca-medium-token-sha256
                  - "2.16.840.1.101.3.2.1.12.6" #id-eca-medium-hardware-pivi
                  - "2.16.840.1.101.3.2.1.12.8" #id-eca-contentsigning-pivi
                  - "2.16.840.1.101.3.2.1.12.9" #id-eca-medium-device-sha256
                  - "2.16.840.1.101.3.2.1.12.10" #id-eca-medium-hardware-sha256
                  - "2.16.840.1.101.3.2.1.3.4" #id-fpki-certpcy-highAssurance
                  - "2.16.840.1.101.3.2.1.3.7" #id-fpki-common-hardware
                  - "2.16.840.1.101.3.2.1.3.12" #id-fpki-certpcy-mediumHardware
                  - "2.16.840.1.101.3.2.1.3.13" #id-fpki-common-authentication
                  - "2.16.840.1.101.3.2.1.3.16" #id-fpki-common-High
                  - "2.16.840.1.101.3.2.1.3.18" #id-fpki-certpcy-pivi-hardware
                  - "2.16.840.1.101.3.2.1.3.20" #id-fpki-certpcy-pivi-contentSigning
                  - "2.16.840.1.101.3.2.1.3.36" #id-fpki-common-devicesHardware
                  - "2.16.840.1.101.3.2.1.3.38" #id-fpki-certpcy-mediumDeviceHardware
                  - "2.16.840.1.101.3.2.1.3.39" #id-fpki-common-piv-contentSigning
                  - "2.16.840.1.101.3.2.1.3.24" #id-fpki-SHA1-hardware

                # White-list clients that do not require P1 group protection logic
                groupProtectionIgnoreClients:
                - "account"
                - "account-console"
                - "broker"
                - "security-admin-console"
                # Nexus hardcodes the client id so the group logic in custom plugin code must be skipped
                - "https://nexus.dev.bigbang.mil/service/rest/v1/security/saml/metadata"

                # When a user registers without matching any top-level domain in emailMatchAutoJoinGroup, join to the listed groups
                noEmailMatchAutoJoinGroup:
                - "/Randos"

                # When a user registers with the given top-level domain, join to the listed groups
                emailMatchAutoJoinGroup:
                - description: DoD IL4 Users
                  groups:
                  - "/Impact Level 2 Authorized"
                  - "/Impact Level 4 Authorized"
                  domains:
                  - ".gov"
                  - ".mil"

                - description: DoD IL2 Users
                  groups:
                  - "/Impact Level 2 Authorized"
                  domains:
                  - "@test-domain.very-long-fake-tld"
          env:
            stringData:
              CUSTOM_REGISTRATION_CONFIG: /opt/keycloak/conf/customreg.yaml
          quarkusproperties:
            stringData:
              quarkus.properties: |
                quarkus.http.non-application-root-path=/
                quarkus.kc-routing.path-redirect./=/auth/realms/baby-yoda/account
                quarkus.kc-routing.path-redirect./auth=/auth/realms/baby-yoda/account
                quarkus.kc-routing.path-redirect./register=/auth/realms/baby-yoda/protocol/openid-connect/registrations?client_id=account&response_type=code
                quarkus.kc-routing.path-prefix./oauth/authorize=/auth/realms/baby-yoda/protocol/openid-connect/auth
                quarkus.kc-routing.path-filter./api/v4/user=/auth/realms/baby-yoda/protocol/openid-connect/userinfo
                quarkus.kc-routing.path-filter./oauth/token=/auth/realms/baby-yoda/protocol/openid-connect/token
                quarkus.kc-routing.path-recursive-block./metrics=8443
                quarkus.kc-routing.path-recursive-block./health=8443
          realm:
            stringData:
              realm.json: |-
                {
                  "id": "baby-yoda",
                  "realm": "baby-yoda",
                  "displayName": "DoD Platform One",
                  "displayNameHtml": "DevSecOps Collaboration Workspace",
                  "notBefore": 0,
                  "defaultSignatureAlgorithm": "RS256",
                  "revokeRefreshToken": false,
                  "refreshTokenMaxReuse": 0,
                  "accessTokenLifespan": 300,
                  "accessTokenLifespanForImplicitFlow": 900,
                  "ssoSessionIdleTimeout": 1800,
                  "ssoSessionMaxLifespan": 86400,
                  "ssoSessionIdleTimeoutRememberMe": 0,
                  "ssoSessionMaxLifespanRememberMe": 0,
                  "offlineSessionIdleTimeout": 2592000,
                  "offlineSessionMaxLifespanEnabled": false,
                  "offlineSessionMaxLifespan": 5184000,
                  "clientSessionIdleTimeout": 3600,
                  "clientSessionMaxLifespan": 86400,
                  "clientOfflineSessionIdleTimeout": 0,
                  "clientOfflineSessionMaxLifespan": 0,
                  "accessCodeLifespan": 60,
                  "accessCodeLifespanUserAction": 300,
                  "accessCodeLifespanLogin": 1800,
                  "actionTokenGeneratedByAdminLifespan": 43200,
                  "actionTokenGeneratedByUserLifespan": 21600,
                  "oauth2DeviceCodeLifespan": 600,
                  "oauth2DevicePollingInterval": 5,
                  "enabled": true,
                  "sslRequired": "external",
                  "registrationAllowed": true,
                  "registrationEmailAsUsername": false,
                  "rememberMe": false,
                  "verifyEmail": true,
                  "loginWithEmailAllowed": true,
                  "duplicateEmailsAllowed": false,
                  "resetPasswordAllowed": true,
                  "editUsernameAllowed": true,
                  "bruteForceProtected": true,
                  "permanentLockout": true,
                  "maxFailureWaitSeconds": 900,
                  "minimumQuickLoginWaitSeconds": 60,
                  "waitIncrementSeconds": 60,
                  "quickLoginCheckMilliSeconds": 1000,
                  "maxDeltaTimeSeconds": 43200,
                  "failureFactor": 5,
                  "roles": {
                    "realm": [
                      {
                        "id": "c35fb832-b30f-4f3d-8499-bf101681340c",
                        "name": "offline_access",
                        "description": "${role_offline-access}",
                        "composite": false,
                        "clientRole": false,
                        "containerId": "baby-yoda",
                        "attributes": {}
                      },
                      {
                        "id": "35d729cd-81aa-40bd-bdce-6e4d15ccfb58",
                        "name": "default-roles-baby-yoda",
                        "description": "${role_default-roles}",
                        "composite": true,
                        "composites": {
                          "client": {
                            "account": [
                              "view-profile",
                              "manage-account"
                            ]
                          }
                        },
                        "clientRole": false,
                        "containerId": "baby-yoda",
                        "attributes": {}
                      },
                      {
                        "id": "95d52c1d-ef5b-4a9b-bd21-6b24df3fb034",
                        "name": "uma_authorization",
                        "description": "${role_uma_authorization}",
                        "composite": false,
                        "clientRole": false,
                        "containerId": "baby-yoda",
                        "attributes": {}
                      }
                    ],
                    "client": {
                      "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_vault": [],
                      "realm-management": [
                        {
                          "id": "85f6c964-c389-47c5-8389-5b25422f0c79",
                          "name": "query-groups",
                          "description": "${role_query-groups}",
                          "composite": false,
                          "clientRole": true,
                          "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                          "attributes": {}
                        },
                        {
                          "id": "e283d507-1abc-4adc-ade4-99f3d35055a4",
                          "name": "query-realms",
                          "description": "${role_query-realms}",
                          "composite": false,
                          "clientRole": true,
                          "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                          "attributes": {}
                        },
                        {
                          "id": "afc1d97c-3938-48d0-a1e5-e8b06957c35c",
                          "name": "impersonation",
                          "description": "${role_impersonation}",
                          "composite": false,
                          "clientRole": true,
                          "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                          "attributes": {}
                        },
                        {
                          "id": "711d4fbe-8da7-4cb9-852c-1a7ef4c2b184",
                          "name": "manage-identity-providers",
                          "description": "${role_manage-identity-providers}",
                          "composite": false,
                          "clientRole": true,
                          "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                          "attributes": {}
                        },
                        {
                          "id": "e1ba3124-82db-488c-9dec-87fa31d5d0cb",
                          "name": "manage-authorization",
                          "description": "${role_manage-authorization}",
                          "composite": false,
                          "clientRole": true,
                          "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                          "attributes": {}
                        },
                        {
                          "id": "6b14fc50-b577-4ec4-b6cd-7bc87ed76f35",
                          "name": "manage-realm",
                          "description": "${role_manage-realm}",
                          "composite": false,
                          "clientRole": true,
                          "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                          "attributes": {}
                        },
                        {
                          "id": "4aa4d009-eb3b-48cb-bb09-6cba77a4757c",
                          "name": "create-client",
                          "description": "${role_create-client}",
                          "composite": false,
                          "clientRole": true,
                          "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                          "attributes": {}
                        },
                        {
                          "id": "d53d01f5-7bcc-4d5f-8da5-f6593e2ea2cf",
                          "name": "query-users",
                          "description": "${role_query-users}",
                          "composite": false,
                          "clientRole": true,
                          "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                          "attributes": {}
                        },
                        {
                          "id": "542e2cae-8fd1-43ad-a356-fcc82d677d43",
                          "name": "view-clients",
                          "description": "${role_view-clients}",
                          "composite": true,
                          "composites": {
                            "client": {
                              "realm-management": [
                                "query-clients"
                              ]
                            }
                          },
                          "clientRole": true,
                          "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                          "attributes": {}
                        },
                        {
                          "id": "4c7ea783-e83b-4928-a174-1eb87c7b00e0",
                          "name": "manage-clients",
                          "description": "${role_manage-clients}",
                          "composite": false,
                          "clientRole": true,
                          "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                          "attributes": {}
                        },
                        {
                          "id": "27035625-3185-4743-8b17-11ba700cfd58",
                          "name": "view-authorization",
                          "description": "${role_view-authorization}",
                          "composite": false,
                          "clientRole": true,
                          "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                          "attributes": {}
                        },
                        {
                          "id": "3c513231-6702-4194-8fd6-c38442c2c713",
                          "name": "view-events",
                          "description": "${role_view-events}",
                          "composite": false,
                          "clientRole": true,
                          "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                          "attributes": {}
                        },
                        {
                          "id": "3bf7df35-ba1f-4bd1-9cee-5de4185b169d",
                          "name": "view-identity-providers",
                          "description": "${role_view-identity-providers}",
                          "composite": false,
                          "clientRole": true,
                          "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                          "attributes": {}
                        },
                        {
                          "id": "0de8efb7-22ee-4acb-aaf1-5f893945cab9",
                          "name": "manage-users",
                          "description": "${role_manage-users}",
                          "composite": false,
                          "clientRole": true,
                          "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                          "attributes": {}
                        },
                        {
                          "id": "eb23ec21-bc97-4fd7-8c09-796dec807caf",
                          "name": "manage-events",
                          "description": "${role_manage-events}",
                          "composite": false,
                          "clientRole": true,
                          "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                          "attributes": {}
                        },
                        {
                          "id": "5a3ac4eb-0d6d-41e6-b39b-d3a1a7ac3b63",
                          "name": "query-clients",
                          "description": "${role_query-clients}",
                          "composite": false,
                          "clientRole": true,
                          "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                          "attributes": {}
                        },
                        {
                          "id": "67fe2a85-6c04-4fe0-841b-a5c7bf7b8e79",
                          "name": "realm-admin",
                          "description": "${role_realm-admin}",
                          "composite": true,
                          "composites": {
                            "client": {
                              "realm-management": [
                                "query-groups",
                                "query-realms",
                                "impersonation",
                                "manage-identity-providers",
                                "manage-authorization",
                                "manage-realm",
                                "create-client",
                                "query-users",
                                "view-clients",
                                "manage-clients",
                                "view-authorization",
                                "view-events",
                                "view-identity-providers",
                                "manage-users",
                                "manage-events",
                                "query-clients",
                                "view-realm",
                                "view-users"
                              ]
                            }
                          },
                          "clientRole": true,
                          "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                          "attributes": {}
                        },
                        {
                          "id": "6653d0e1-5473-415f-b4f1-a11120043465",
                          "name": "view-realm",
                          "description": "${role_view-realm}",
                          "composite": false,
                          "clientRole": true,
                          "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                          "attributes": {}
                        },
                        {
                          "id": "582a162b-08a9-4619-965c-1fb16fbb51ff",
                          "name": "view-users",
                          "description": "${role_view-users}",
                          "composite": true,
                          "composites": {
                            "client": {
                              "realm-management": [
                                "query-groups",
                                "query-users"
                              ]
                            }
                          },
                          "clientRole": true,
                          "containerId": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                          "attributes": {}
                        }
                      ],
                      "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_neuvector": [],
                      "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_gitlab": [],
                      "security-admin-console": [],
                      "account-console": [],
                      "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_mattermost": [],
                      "broker": [
                        {
                          "id": "4fc7b3ee-b2f7-4f80-9c2a-06e9f1dda7e7",
                          "name": "read-token",
                          "description": "${role_read-token}",
                          "composite": false,
                          "clientRole": true,
                          "containerId": "cebc0db8-3245-4332-a409-67dc0d2e09dd",
                          "attributes": {}
                        }
                      ],
                      "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_alertmanager": [],
                      "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_anchore": [],
                      "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_twistlock-saml": [],
                      "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_kibana": [],
                      "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_saml-sonarqube": [],
                      "https://nexus.dev.bigbang.mil/service/rest/v1/security/saml/metadata": [],
                      "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_jaeger": [],
                      "admin-cli": [],
                      "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_argocd": [],
                      "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_twistlock-oidc": [],
                      "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_kiali": [],
                      "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_prometheus": [],
                      "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_thanos": [],
                      "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_holocron": [],
                      "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_fortify": [],
                      "account": [
                        {
                          "id": "9a61ae6b-aba7-47d0-a3b1-67e40ac4f5d1",
                          "name": "manage-account-links",
                          "description": "${role_manage-account-links}",
                          "composite": false,
                          "clientRole": true,
                          "containerId": "b6d2395b-3e78-4d61-96cd-3ab2ae0ef7ed",
                          "attributes": {}
                        },
                        {
                          "id": "6ce8a44f-58ad-4daf-a712-570ba03a57d9",
                          "name": "view-profile",
                          "description": "${role_view-profile}",
                          "composite": false,
                          "clientRole": true,
                          "containerId": "b6d2395b-3e78-4d61-96cd-3ab2ae0ef7ed",
                          "attributes": {}
                        },
                        {
                          "id": "5bc3ab5c-56d3-4161-a96b-9a0ea2a9e7cf",
                          "name": "manage-account",
                          "description": "${role_manage-account}",
                          "composite": true,
                          "composites": {
                            "client": {
                              "account": [
                                "manage-account-links"
                              ]
                            }
                          },
                          "clientRole": true,
                          "containerId": "b6d2395b-3e78-4d61-96cd-3ab2ae0ef7ed",
                          "attributes": {}
                        },
                        {
                          "id": "a79d06e0-4a77-4147-bd1c-9979da5cb736",
                          "name": "manage-consent",
                          "description": "${role_manage-consent}",
                          "composite": true,
                          "composites": {
                            "client": {
                              "account": [
                                "view-consent"
                              ]
                            }
                          },
                          "clientRole": true,
                          "containerId": "b6d2395b-3e78-4d61-96cd-3ab2ae0ef7ed",
                          "attributes": {}
                        },
                        {
                          "id": "d979b56a-c653-4363-964f-3b6110b7c8df",
                          "name": "view-consent",
                          "description": "${role_view-consent}",
                          "composite": false,
                          "clientRole": true,
                          "containerId": "b6d2395b-3e78-4d61-96cd-3ab2ae0ef7ed",
                          "attributes": {}
                        },
                        {
                          "id": "d90fa9f0-b4d8-4748-a048-a577995246d0",
                          "name": "delete-account",
                          "description": "${role_delete-account}",
                          "composite": false,
                          "clientRole": true,
                          "containerId": "b6d2395b-3e78-4d61-96cd-3ab2ae0ef7ed",
                          "attributes": {}
                        },
                        {
                          "id": "47d1225e-7cd1-4cea-ac86-bdec61a3833b",
                          "name": "view-applications",
                          "description": "${role_view-applications}",
                          "composite": false,
                          "clientRole": true,
                          "containerId": "b6d2395b-3e78-4d61-96cd-3ab2ae0ef7ed",
                          "attributes": {}
                        }
                      ],
                      "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_grafana": [],
                      "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_headlamp": []
                    }
                  },
                  "groups": [
                    {
                      "id": "00eb8904-5b88-4c68-ad67-cec0d2e07aa6",
                      "name": "Impact Level 2 Authorized",
                      "path": "/Impact Level 2 Authorized",
                      "attributes": {
                        "il2": [
                          "true"
                        ]
                      },
                      "realmRoles": [],
                      "clientRoles": {},
                      "subGroups": []
                    },
                    {
                      "id": "95a210e4-2cb7-4dfe-aaba-68ee4ce5e2f7",
                      "name": "Nexus",
                      "path": "/Nexus",
                      "attributes": {},
                      "realmRoles": [],
                      "clientRoles": {},
                      "subGroups": []
                    },
                    {
                      "id": "05f1d35f-3fc3-4958-9ed1-ac9568064e52",
                      "name": "User admins",
                      "path": "/User admins",
                      "attributes": {},
                      "realmRoles": [],
                      "clientRoles": {
                        "realm-management": [
                          "view-events",
                          "manage-users",
                          "view-users"
                        ]
                      },
                      "subGroups": []
                    },
                    {
                      "id": "d455b296-d2fe-481e-ab4b-a1543205c99e",
                      "name": "vault-admin",
                      "path": "/vault-admin",
                      "attributes": {},
                      "realmRoles": [],
                      "clientRoles": {},
                      "subGroups": []
                    }
                  ],
                  "defaultRole": {
                    "id": "35d729cd-81aa-40bd-bdce-6e4d15ccfb58",
                    "name": "default-roles-baby-yoda",
                    "description": "${role_default-roles}",
                    "composite": true,
                    "clientRole": false,
                    "containerId": "baby-yoda"
                  },
                  "requiredCredentials": [
                    "password"
                  ],
                  "passwordPolicy": "hashAlgorithm(pbkdf2-sha256) and forceExpiredPasswordChange(90) and specialChars(2) and passwordHistory(5) and length(12) and notUsername(undefined)",
                  "otpPolicyType": "totp",
                  "otpPolicyAlgorithm": "HmacSHA1",
                  "otpPolicyInitialCounter": 0,
                  "otpPolicyDigits": 6,
                  "otpPolicyLookAheadWindow": 3,
                  "otpPolicyPeriod": 30,
                  "otpSupportedApplications": [
                    "FreeOTP",
                    "Google Authenticator"
                  ],
                  "webAuthnPolicyRpEntityName": "keycloak",
                  "webAuthnPolicySignatureAlgorithms": [
                    "ES256"
                  ],
                  "webAuthnPolicyRpId": "",
                  "webAuthnPolicyAttestationConveyancePreference": "not specified",
                  "webAuthnPolicyAuthenticatorAttachment": "not specified",
                  "webAuthnPolicyRequireResidentKey": "not specified",
                  "webAuthnPolicyUserVerificationRequirement": "not specified",
                  "webAuthnPolicyCreateTimeout": 0,
                  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
                  "webAuthnPolicyAcceptableAaguids": [],
                  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
                  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
                    "ES256"
                  ],
                  "webAuthnPolicyPasswordlessRpId": "",
                  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
                  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
                  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
                  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
                  "webAuthnPolicyPasswordlessCreateTimeout": 0,
                  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
                  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
                  "scopeMappings": [
                    {
                      "clientScope": "offline_access",
                      "roles": [
                        "offline_access"
                      ]
                    }
                  ],
                  "clientScopeMappings": {
                    "account": [
                      {
                        "client": "account-console",
                        "roles": [
                          "manage-account"
                        ]
                      }
                    ]
                  },
                  "clients": [
                    {
                      "id": "b6d2395b-3e78-4d61-96cd-3ab2ae0ef7ed",
                      "clientId": "account",
                      "name": "<h1>Developer</h1><h4>Account Login</h4>",
                      "description": "https://repo1.dso.mil/big-bang/apps/product-tools/keycloak-p1-auth-plugin/-/raw/main/p1-keycloak-plugin/src/main/resources/theme/p1-sso/custom-resources/img/nerd.png",
                      "rootUrl": "${authBaseUrl}",
                      "baseUrl": "/realms/baby-yoda/account/",
                      "surrogateAuthRequired": false,
                      "enabled": true,
                      "alwaysDisplayInConsole": false,
                      "clientAuthenticatorType": "client-secret",
                      "secret": "**********",
                      "redirectUris": [
                        "/realms/baby-yoda/account/*"
                      ],
                      "webOrigins": [],
                      "notBefore": 0,
                      "bearerOnly": false,
                      "consentRequired": false,
                      "standardFlowEnabled": true,
                      "implicitFlowEnabled": false,
                      "directAccessGrantsEnabled": false,
                      "serviceAccountsEnabled": false,
                      "publicClient": false,
                      "frontchannelLogout": false,
                      "protocol": "openid-connect",
                      "attributes": {},
                      "authenticationFlowBindingOverrides": {},
                      "fullScopeAllowed": false,
                      "nodeReRegistrationTimeout": 0,
                      "defaultClientScopes": [],
                      "optionalClientScopes": []
                    },
                    {
                      "id": "d2c0ffd9-0c25-469a-9c05-6bbebe2054bc",
                      "clientId": "account-console",
                      "name": "${client_account-console}",
                      "rootUrl": "${authBaseUrl}",
                      "baseUrl": "/realms/baby-yoda/account/",
                      "surrogateAuthRequired": false,
                      "enabled": true,
                      "alwaysDisplayInConsole": false,
                      "clientAuthenticatorType": "client-secret",
                      "secret": "**********",
                      "redirectUris": [
                        "/realms/baby-yoda/account/*"
                      ],
                      "webOrigins": [],
                      "notBefore": 0,
                      "bearerOnly": false,
                      "consentRequired": false,
                      "standardFlowEnabled": true,
                      "implicitFlowEnabled": false,
                      "directAccessGrantsEnabled": false,
                      "serviceAccountsEnabled": false,
                      "publicClient": true,
                      "frontchannelLogout": false,
                      "protocol": "openid-connect",
                      "attributes": {
                        "pkce.code.challenge.method": "S256"
                      },
                      "authenticationFlowBindingOverrides": {},
                      "fullScopeAllowed": false,
                      "nodeReRegistrationTimeout": 0,
                      "protocolMappers": [
                        {
                          "id": "08a20b0e-4ab7-403a-898c-a4ed59d7be80",
                          "name": "audience resolve",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-audience-resolve-mapper",
                          "consentRequired": false,
                          "config": {}
                        }
                      ],
                      "defaultClientScopes": [],
                      "optionalClientScopes": []
                    },
                    {
                      "id": "337ba4c2-5755-41ba-b87a-a67b2f7989b1",
                      "clientId": "admin-cli",
                      "name": "${client_admin-cli}",
                      "surrogateAuthRequired": false,
                      "enabled": true,
                      "alwaysDisplayInConsole": false,
                      "clientAuthenticatorType": "client-secret",
                      "secret": "**********",
                      "redirectUris": [],
                      "webOrigins": [],
                      "notBefore": 0,
                      "bearerOnly": false,
                      "consentRequired": false,
                      "standardFlowEnabled": false,
                      "implicitFlowEnabled": false,
                      "directAccessGrantsEnabled": true,
                      "serviceAccountsEnabled": false,
                      "publicClient": true,
                      "frontchannelLogout": false,
                      "protocol": "openid-connect",
                      "attributes": {},
                      "authenticationFlowBindingOverrides": {},
                      "fullScopeAllowed": false,
                      "nodeReRegistrationTimeout": 0,
                      "defaultClientScopes": [],
                      "optionalClientScopes": []
                    },
                    {
                      "id": "cebc0db8-3245-4332-a409-67dc0d2e09dd",
                      "clientId": "broker",
                      "name": "${client_broker}",
                      "surrogateAuthRequired": false,
                      "enabled": true,
                      "alwaysDisplayInConsole": false,
                      "clientAuthenticatorType": "client-secret",
                      "secret": "**********",
                      "redirectUris": [],
                      "webOrigins": [],
                      "notBefore": 0,
                      "bearerOnly": false,
                      "consentRequired": false,
                      "standardFlowEnabled": true,
                      "implicitFlowEnabled": false,
                      "directAccessGrantsEnabled": false,
                      "serviceAccountsEnabled": false,
                      "publicClient": false,
                      "frontchannelLogout": false,
                      "protocol": "openid-connect",
                      "attributes": {},
                      "authenticationFlowBindingOverrides": {},
                      "fullScopeAllowed": false,
                      "nodeReRegistrationTimeout": 0,
                      "defaultClientScopes": [],
                      "optionalClientScopes": []
                    },
                    {
                      "id": "7888d11f-d0c7-4e6d-860c-5206665552d3",
                      "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_alertmanager",
                      "name": "BigBang Dev AlertManager",
                      "baseUrl": "",
                      "surrogateAuthRequired": false,
                      "enabled": true,
                      "alwaysDisplayInConsole": false,
                      "clientAuthenticatorType": "client-secret",
                      "redirectUris": [
                        "https://alertmanager.bigbang.dev/login/generic_oauth",
                        "https://alertmanager.dev.bigbang.mil/login/generic_oauth",
                        "https://alertmanager.dogfood.bigbang.dev/login/generic_oauth"
                      ],
                      "webOrigins": [],
                      "notBefore": 0,
                      "bearerOnly": false,
                      "consentRequired": true,
                      "standardFlowEnabled": true,
                      "implicitFlowEnabled": false,
                      "directAccessGrantsEnabled": false,
                      "serviceAccountsEnabled": false,
                      "publicClient": true,
                      "frontchannelLogout": false,
                      "protocol": "openid-connect",
                      "attributes": {
                        "saml.assertion.signature": "false",
                        "saml.multivalued.roles": "false",
                        "saml.force.post.binding": "false",
                        "saml.encrypt": "false",
                        "saml.server.signature": "false",
                        "backchannel.logout.revoke.offline.tokens": "false",
                        "saml.server.signature.keyinfo.ext": "false",
                        "exclude.session.state.from.auth.response": "false",
                        "backchannel.logout.session.required": "true",
                        "consent.screen.text": "This client is used for development support for Big Bang / Platform One.  Be sure that you are only using this client for development.",
                        "saml_force_name_id_format": "false",
                        "saml.client.signature": "false",
                        "tls.client.certificate.bound.access.tokens": "false",
                        "saml.authnstatement": "false",
                        "display.on.consent.screen": "true",
                        "saml.onetimeuse.condition": "false"
                      },
                      "authenticationFlowBindingOverrides": {},
                      "fullScopeAllowed": true,
                      "nodeReRegistrationTimeout": -1,
                      "defaultClientScopes": [
                        "web-origins",
                        "roles",
                        "profile",
                        "email"
                      ],
                      "optionalClientScopes": []
                    },
                    {
                      "id": "ec39f333-e4ce-434e-9cf1-f39651915b37",
                      "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_anchore",
                      "name": "BigBang Dev Anchore",
                      "adminUrl": "https://anchore.dev.bigbang.mil/service/sso/auth/keycloak",
                      "baseUrl": "",
                      "surrogateAuthRequired": false,
                      "enabled": true,
                      "alwaysDisplayInConsole": false,
                      "clientAuthenticatorType": "client-secret",
                      "redirectUris": [
                        "https://anchore.dogfood.bigbang.dev/service/sso/auth/keycloak",
                        "https://anchore.bigbang.dev/service/sso/auth/keycloak",
                        "https://anchore.dev.bigbang.mil/service/sso/auth/keycloak"
                      ],
                      "webOrigins": [],
                      "notBefore": 0,
                      "bearerOnly": false,
                      "consentRequired": true,
                      "standardFlowEnabled": true,
                      "implicitFlowEnabled": false,
                      "directAccessGrantsEnabled": false,
                      "serviceAccountsEnabled": false,
                      "publicClient": true,
                      "frontchannelLogout": true,
                      "protocol": "saml",
                      "attributes": {
                        "saml_assertion_consumer_url_redirect": "https://anchore.dev.bigbang.mil/service/sso/auth/keycloak",
                        "saml.multivalued.roles": "false",
                        "saml.force.post.binding": "true",
                        "oauth2.device.authorization.grant.enabled": "false",
                        "backchannel.logout.revoke.offline.tokens": "false",
                        "saml.server.signature.keyinfo.ext": "false",
                        "use.refresh.tokens": "true",
                        "oidc.ciba.grant.enabled": "false",
                        "backchannel.logout.session.required": "false",
                        "saml.signature.algorithm": "RSA_SHA256",
                        "client_credentials.use_refresh_token": "false",
                        "consent.screen.text": "This client is used for development support for Big Bang / Platform One.  Be sure that you are only using this client for development.",
                        "saml.client.signature": "false",
                        "saml.assertion.signature": "true",
                        "id.token.as.detached.signature": "false",
                        "saml.encrypt": "false",
                        "saml_assertion_consumer_url_post": "https://anchore.dev.bigbang.mil/service/sso/auth/keycloak",
                        "saml.server.signature": "true",
                        "exclude.session.state.from.auth.response": "false",
                        "saml.artifact.binding.identifier": "7CotOBSAei1i2frOht5AFaONGy0=",
                        "saml.artifact.binding": "false",
                        "saml_force_name_id_format": "true",
                        "tls.client.certificate.bound.access.tokens": "false",
                        "saml.authnstatement": "true",
                        "display.on.consent.screen": "true",
                        "saml_name_id_format": "username",
                        "saml.onetimeuse.condition": "false",
                        "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#"
                      },
                      "authenticationFlowBindingOverrides": {},
                      "fullScopeAllowed": true,
                      "nodeReRegistrationTimeout": -1,
                      "defaultClientScopes": [
                        "role_list"
                      ],
                      "optionalClientScopes": []
                    },
                    {
                      "id": "c0e00463-3c60-4d8f-80f4-881e13c1a2dd",
                      "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_argocd",
                      "name": "BigBang Dev ArgoCD",
                      "baseUrl": "/applications",
                      "surrogateAuthRequired": false,
                      "enabled": true,
                      "alwaysDisplayInConsole": false,
                      "clientAuthenticatorType": "client-secret",
                      "redirectUris": [
                        "https://argocd.dogfood.bigbang.dev/auth/callback",
                        "https://argocd.bigbang.dev/auth/callback",
                        "https://argocd.dev.bigbang.mil/auth/callback"
                      ],
                      "webOrigins": [],
                      "notBefore": 0,
                      "bearerOnly": false,
                      "consentRequired": true,
                      "standardFlowEnabled": true,
                      "implicitFlowEnabled": false,
                      "directAccessGrantsEnabled": false,
                      "serviceAccountsEnabled": false,
                      "publicClient": true,
                      "frontchannelLogout": false,
                      "protocol": "openid-connect",
                      "attributes": {
                        "saml.assertion.signature": "false",
                        "id.token.as.detached.signature": "false",
                        "saml.multivalued.roles": "false",
                        "saml.force.post.binding": "false",
                        "saml.encrypt": "false",
                        "oauth2.device.authorization.grant.enabled": "false",
                        "saml.server.signature": "false",
                        "backchannel.logout.revoke.offline.tokens": "false",
                        "saml.server.signature.keyinfo.ext": "false",
                        "use.refresh.tokens": "true",
                        "exclude.session.state.from.auth.response": "false",
                        "oidc.ciba.grant.enabled": "false",
                        "saml.artifact.binding": "false",
                        "backchannel.logout.session.required": "true",
                        "client_credentials.use_refresh_token": "false",
                        "consent.screen.text": "This client is used for development support for Big Bang / Platform One.  Be sure that you are only using this client for development.",
                        "saml_force_name_id_format": "false",
                        "saml.client.signature": "false",
                        "tls.client.certificate.bound.access.tokens": "false",
                        "saml.authnstatement": "false",
                        "display.on.consent.screen": "true",
                        "saml.onetimeuse.condition": "false"
                      },
                      "authenticationFlowBindingOverrides": {},
                      "fullScopeAllowed": true,
                      "nodeReRegistrationTimeout": -1,
                      "defaultClientScopes": [
                        "ArgoCD"
                      ],
                      "optionalClientScopes": []
                    },
                    {
                      "id": "e6eff1eb-aaae-41cf-a555-1ba53ef01b00",
                      "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_fortify",
                      "name": "BigBang Dev Fortify",
                      "description": "",
                      "rootUrl": "",
                      "adminUrl": "https://fortify.dev.bigbang.mil/service/sso/auth/keycloak",
                      "baseUrl": "",
                      "surrogateAuthRequired": false,
                      "enabled": true,
                      "alwaysDisplayInConsole": false,
                      "clientAuthenticatorType": "client-secret",
                      "redirectUris": [
                        "https://fortify.dev.bigbang.mil/saml/SSO/alias/",
                        "https://fortify.dogfood.bigbang.dev/saml/SSO/alias/",
                        "https://fortify.bigbang.dev/service/saml/SSO/alias/"
                      ],
                      "webOrigins": [
                        "https://fortify.dogfood.bigbang.dev",
                        "https://fortify.bigbang.dev",
                        "https://fortify.dev.bigbang.mil"
                      ],
                      "notBefore": 0,
                      "bearerOnly": false,
                      "consentRequired": true,
                      "standardFlowEnabled": true,
                      "implicitFlowEnabled": false,
                      "directAccessGrantsEnabled": true,
                      "serviceAccountsEnabled": false,
                      "publicClient": true,
                      "frontchannelLogout": true,
                      "protocol": "saml",
                      "attributes": {
                        "saml.assertion.signature": "true",
                        "saml.force.post.binding": "true",
                        "saml.server.signature": "true",
                        "saml.server.signature.keyinfo.ext": "false",
                        "saml.signing.certificate": "MIIC7TCCAdUCBgGQ8LKCFjANBgkqhkiG9w0BAQsFADA6MTgwNgYDVQQDDC9kZXZfMDBlYjg5MDQtNWI4OC00YzY4LWFkNjctY2VjMGQyZTA3YWE2X2ZvcnRpZjAeFw0yNDA3MjYyMDE3MjhaFw0zNDA3MjYyMDE5MDhaMDoxODA2BgNVBAMML2Rldl8wMGViODkwNC01Yjg4LTRjNjgtYWQ2Ny1jZWMwZDJlMDdhYTZfZm9ydGlmMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAiuWEFvW8sgrL8cwpoXIQXe0e6fv0QVGrKTpPaAUJ8wD1KOfjoaPsvQfJA3rY8TMSWtnHcW3lSvCCx8iv2ubB9GeUoJm89M0r1o0M6alvQSXGQ+SPjselFtJ9s4erWfKjC0jJaiVavqyP9r1yrNKOHjT+k98nDeuKvO3hLZd4k+WMfPvUap+J3sFR1bfzvQWN11aJ0yf++nE4oYoj5/QucN0old8dLNmzLWm+pgv60m2uhzD8DHaELEUWU5knY4ySXWGz0V1AUW58xsrse5S1PHO92EGuZuEQmTUtazVLaB+qyO1ehQ7d0DtkvxGeJ6DdfoQeIqCJIi4ciwNr9Nu9fwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBgv1DWGBo6ltBG2mVImunO7rR5Ff28D7Pb9aWX2F+DZerhPBulymVDWdcsvUvgcjwUggprw/a9sx0bYwoGfg0TWx+xbtGqJazfQBBNcMSpCt43YrKfjysoY+hq7ybcm6NYHLszBxmjETXBxlNlM5fnIAuiX3svF8AfQT9XILYHM5gjXef/Q/plwNBUfZH/sMNcAhk3eQWZatxnERfUw4lqAl2hzVci5XdzP7al5/ZSmS+7JGC9qZUFF/Bs/O55ifD5DhCnRotldI60KH6ZuXge+kM2vUqWpXhNVYNpdtH01tXjyKECOsNdiYVw39xPUfWo9fOXvv3LFQVlNjfwH3ha",
                        "saml.artifact.binding.identifier": "wuHebJ6R+kv2qFq9mPE/JX/H1+k=",
                        "saml.artifact.binding": "false",
                        "saml.signature.algorithm": "RSA_SHA256",
                        "consent.screen.text": "This client is used for development support for Big Bang / Platform One.  Be sure that you are only using this client for development.",
                        "saml_force_name_id_format": "true",
                        "saml.client.signature": "true",
                        "saml.authnstatement": "true",
                        "display.on.consent.screen": "true",
                        "saml_name_id_format": "username",
                        "saml.signing.private.key": "MIIEowIBAAKCAQEAiuWEFvW8sgrL8cwpoXIQXe0e6fv0QVGrKTpPaAUJ8wD1KOfjoaPsvQfJA3rY8TMSWtnHcW3lSvCCx8iv2ubB9GeUoJm89M0r1o0M6alvQSXGQ+SPjselFtJ9s4erWfKjC0jJaiVavqyP9r1yrNKOHjT+k98nDeuKvO3hLZd4k+WMfPvUap+J3sFR1bfzvQWN11aJ0yf++nE4oYoj5/QucN0old8dLNmzLWm+pgv60m2uhzD8DHaELEUWU5knY4ySXWGz0V1AUW58xsrse5S1PHO92EGuZuEQmTUtazVLaB+qyO1ehQ7d0DtkvxGeJ6DdfoQeIqCJIi4ciwNr9Nu9fwIDAQABAoIBAD3HPxytOTwhlDucmOmvn7r/NFBTWf1Rk2U3g8ka8KVuiBylI3iqPiqH028iTWre0eup0M1RWXqfBjRRPXKKT7ti9NcH+mUR+s0nmJY3X/4kjI53EykpAHNptTJMhjjwNHfY7IkzSyzi+PeApQhccIzb+l2QFEFbQi6tSYorRJzXBYl8Y+L2SJAt0QWdyHfzBIipLCW8wDzxsujLQeg0/dYOeQ9Taf/aCFAVltJcy1g+t6WF8r/CoWVaCLCdUcngRr0L5bLS4Xtx6eFnoegENuV+0CWaSYHk5rzkGO4MqOh4Rw6y4ldUySbgcc9fK5MezhzkAVoggbKkfKZI69dLQ7kCgYEAvgTitu1hvx0ceFuQjrYJBZ3jh22049v3btf1m5/AOArpHroWOova+UQTkZwrWA5y64qXWySQVZ0TldzVD6busvtoDYo/9hYL7nbU5eRsfCggwGnBAx04QXT+z6dhTGi6uY7u2zHvVK/xV8ztHNQPIIQCXO3ichOxMzquFVwf4rcCgYEAuyBDMB9IRgMZfXKqDp/3Nc9D0J1S1wYPu/xv5knI4R9oGaIiKdRC8P48KL6U0PgMoDcmpMtqLtusvB7xWmxt4XGX5VZVXeJI8r57X6aMDEHMEgkjQ4uKbPLAeD4Jnwp8F5welex6ksAHpnd4sEGuR1Z3JL97e27GjGqggUW6E3kCgYBvvNu8ifaytWGqfN2SrgS8Is5LMv3uB8mGisPI0bXsvq26/d5YaylG7vs64sSyMTzuuT6rv+KIFagQth0r6RPwd9oGLEfUY758abBjx2Dr2YT44Lc5J5OPGkdEwL58ehFjUGOwzbpY6GVZJg5Ap4qFqlrhXpmMT3wiDd2UfenaHQKBgHoEaYtBerEcaEyirjznFh2iTwgC7feD3lKoIpc5WaFiB1FfpYM9A4F9ZeDzlLpGZIU8MRiYA18WoyXvz1U1CtlMZs2GZBfZ69NNXclbIksDxHumNbZfkR3FlLdTTJbGEXCbvl3oW2zBhruHf8z+pxOhUANIUM6FxzXceViSDOmRAoGBAI5Ne0v78LQubDIwdSRQHFzQc4PY+lKx/jnM4Y/kmK0TZSvzVanh8LRvWzmpbmG7cVyWa2Kkmwu/kOq85mIHzg4rukCZeTFIlVZUiuMgmlqC10LX4CBr/NF/yu3Z9NdbFmLvqBEDmzbastzmy5TBSZonRAkHh39/Iw6lqS8Xn3Ui",
                        "saml.allow.ecp.flow": "false",
                        "saml.onetimeuse.condition": "false",
                        "saml.server.signature.keyinfo.xmlSigKeyInfoKeyNameTransformer": "NONE",
                        "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#"
                      },
                      "authenticationFlowBindingOverrides": {},
                      "fullScopeAllowed": true,
                      "nodeReRegistrationTimeout": -1,
                      "defaultClientScopes": [
                        "role_list"
                      ],
                      "optionalClientScopes": [],
                      "access": {
                        "view": true,
                        "configure": true,
                        "manage": true
                      }
                    },
                    {
                      "id": "d07709ea-eec1-4fb4-82ab-d52cf70bce15",
                      "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_gitlab",
                      "name": "BigBang Dev Gitlab",
                      "baseUrl": "",
                      "surrogateAuthRequired": false,
                      "enabled": true,
                      "alwaysDisplayInConsole": false,
                      "clientAuthenticatorType": "client-secret",
                      "redirectUris": [
                        "https://code.bigbang.dev/users/auth/openid_connect/callback*",
                        "https://code.dev.bigbang.mil/users/auth/openid_connect/callback*",
                        "https://code.dogfood.bigbang.dev/users/auth/openid_connect/callback*",
                        "https://gitlab.bigbang.dev/users/auth/openid_connect/callback*",
                        "https://gitlab.dev.bigbang.mil/users/auth/openid_connect/callback*",
                        "https://gitlab.dogfood.bigbang.dev/users/auth/openid_connect/callback*"
                      ],
                      "webOrigins": [],
                      "notBefore": 0,
                      "bearerOnly": false,
                      "consentRequired": true,
                      "standardFlowEnabled": true,
                      "implicitFlowEnabled": false,
                      "directAccessGrantsEnabled": false,
                      "serviceAccountsEnabled": false,
                      "publicClient": true,
                      "frontchannelLogout": false,
                      "protocol": "openid-connect",
                      "attributes": {
                        "saml.assertion.signature": "false",
                        "id.token.as.detached.signature": "false",
                        "saml.force.post.binding": "false",
                        "saml.multivalued.roles": "false",
                        "saml.encrypt": "false",
                        "oauth2.device.authorization.grant.enabled": "false",
                        "backchannel.logout.revoke.offline.tokens": "false",
                        "saml.server.signature": "false",
                        "saml.server.signature.keyinfo.ext": "false",
                        "use.refresh.tokens": "true",
                        "exclude.session.state.from.auth.response": "false",
                        "oidc.ciba.grant.enabled": "false",
                        "saml.artifact.binding": "false",
                        "backchannel.logout.session.required": "true",
                        "client_credentials.use_refresh_token": "false",
                        "consent.screen.text": "This client is used for development support for Big Bang / Platform One.  Be sure that you are only using this client for development.",
                        "saml_force_name_id_format": "false",
                        "saml.client.signature": "false",
                        "tls.client.certificate.bound.access.tokens": "false",
                        "saml.authnstatement": "false",
                        "display.on.consent.screen": "true",
                        "saml.onetimeuse.condition": "false"
                      },
                      "authenticationFlowBindingOverrides": {},
                      "fullScopeAllowed": true,
                      "nodeReRegistrationTimeout": -1,
                      "defaultClientScopes": [
                        "Gitlab"
                      ],
                      "optionalClientScopes": []
                    },
                    {
                      "id": "cd756309-03fe-4bfa-a544-a7de3e2a4825",
                      "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_grafana",
                      "name": "BigBang Dev Grafana",
                      "baseUrl": "",
                      "surrogateAuthRequired": false,
                      "enabled": true,
                      "alwaysDisplayInConsole": false,
                      "clientAuthenticatorType": "client-secret",
                      "redirectUris": [
                        "https://grafana.dogfood.bigbang.dev/login/generic_oauth",
                        "https://grafana.bigbang.dev/login/generic_oauth",
                        "https://grafana.dev.bigbang.mil/login/generic_oauth"
                      ],
                      "webOrigins": [],
                      "notBefore": 0,
                      "bearerOnly": false,
                      "consentRequired": true,
                      "standardFlowEnabled": true,
                      "implicitFlowEnabled": false,
                      "directAccessGrantsEnabled": false,
                      "serviceAccountsEnabled": false,
                      "publicClient": true,
                      "frontchannelLogout": false,
                      "protocol": "openid-connect",
                      "attributes": {
                        "saml.assertion.signature": "false",
                        "id.token.as.detached.signature": "false",
                        "saml.multivalued.roles": "false",
                        "saml.force.post.binding": "false",
                        "saml.encrypt": "false",
                        "oauth2.device.authorization.grant.enabled": "false",
                        "saml.server.signature": "false",
                        "backchannel.logout.revoke.offline.tokens": "false",
                        "saml.server.signature.keyinfo.ext": "false",
                        "use.refresh.tokens": "true",
                        "exclude.session.state.from.auth.response": "false",
                        "oidc.ciba.grant.enabled": "false",
                        "saml.artifact.binding": "false",
                        "backchannel.logout.session.required": "true",
                        "client_credentials.use_refresh_token": "false",
                        "consent.screen.text": "This client is used for development support for Big Bang / Platform One.  Be sure that you are only using this client for development.",
                        "saml_force_name_id_format": "false",
                        "saml.client.signature": "false",
                        "tls.client.certificate.bound.access.tokens": "false",
                        "saml.authnstatement": "false",
                        "display.on.consent.screen": "true",
                        "saml.onetimeuse.condition": "false"
                      },
                      "authenticationFlowBindingOverrides": {},
                      "fullScopeAllowed": true,
                      "nodeReRegistrationTimeout": -1,
                      "defaultClientScopes": [
                        "Grafana"
                      ],
                      "optionalClientScopes": []
                    },
                    {
                      "id": "8df31e32-cad8-4a99-8da8-1160d50b4c4d",
                      "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_headlamp",
                      "name": "BigBang Dev Headlamp",
                      "baseUrl": "",
                      "surrogateAuthRequired": false,
                      "enabled": true,
                      "alwaysDisplayInConsole": false,
                      "clientAuthenticatorType": "client-secret",
                      "redirectUris": [
                        "https://headlamp.bigbang.dev/*",
                        "https://headlamp.dogfood.bigbang.dev/*",
                        "https://headlamp.dev.bigbang.mil/*"
                      ],
                      "webOrigins": [],
                      "notBefore": 0,
                      "bearerOnly": false,
                      "consentRequired": true,
                      "standardFlowEnabled": true,
                      "implicitFlowEnabled": false,
                      "directAccessGrantsEnabled": false,
                      "serviceAccountsEnabled": false,
                      "publicClient": true,
                      "frontchannelLogout": false,
                      "protocol": "openid-connect",
                      "attributes": {
                        "saml.assertion.signature": "false",
                        "id.token.as.detached.signature": "false",
                        "saml.multivalued.roles": "false",
                        "saml.force.post.binding": "false",
                        "saml.encrypt": "false",
                        "oauth2.device.authorization.grant.enabled": "false",
                        "saml.server.signature": "false",
                        "backchannel.logout.revoke.offline.tokens": "false",
                        "saml.server.signature.keyinfo.ext": "false",
                        "use.refresh.tokens": "true",
                        "exclude.session.state.from.auth.response": "false",
                        "oidc.ciba.grant.enabled": "false",
                        "saml.artifact.binding": "false",
                        "backchannel.logout.session.required": "true",
                        "client_credentials.use_refresh_token": "false",
                        "consent.screen.text": "This client is used for development support for Big Bang / Platform One.  Be sure that you are only using this client for development.",
                        "saml_force_name_id_format": "false",
                        "saml.client.signature": "false",
                        "tls.client.certificate.bound.access.tokens": "false",
                        "saml.authnstatement": "false",
                        "display.on.consent.screen": "true",
                        "saml.onetimeuse.condition": "false"
                      },
                      "authenticationFlowBindingOverrides": {},
                      "fullScopeAllowed": true,
                      "nodeReRegistrationTimeout": -1,
                      "defaultClientScopes": [
                        "web-origins",
                        "roles",
                        "profile",
                        "email"
                      ],
                      "optionalClientScopes": []
                    },
                    {
                      "id": "a28da266-4848-4448-adee-9d11d44a7df2",
                      "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_holocron",
                      "name": "BigBang Dev Holocron",
                      "description": "",
                      "rootUrl": "",
                      "adminUrl": "",
                      "baseUrl": "",
                      "surrogateAuthRequired": false,
                      "enabled": true,
                      "alwaysDisplayInConsole": false,
                      "clientAuthenticatorType": "client-secret",
                      "redirectUris": [
                        "https://holocron.dev.bigbang.mil/login"
                      ],
                      "webOrigins": [
                        "https://holocron.dev.bigbang.mil"
                      ],
                      "notBefore": 0,
                      "bearerOnly": false,
                      "consentRequired": false,
                      "standardFlowEnabled": true,
                      "implicitFlowEnabled": false,
                      "directAccessGrantsEnabled": true,
                      "serviceAccountsEnabled": false,
                      "publicClient": true,
                      "frontchannelLogout": true,
                      "protocol": "openid-connect",
                      "attributes": {
                        "oidc.ciba.grant.enabled": "false",
                        "oauth2.device.authorization.grant.enabled": "false",
                        "backchannel.logout.session.required": "true",
                        "backchannel.logout.revoke.offline.tokens": "false"
                      },
                      "authenticationFlowBindingOverrides": {},
                      "fullScopeAllowed": true,
                      "nodeReRegistrationTimeout": -1,
                      "protocolMappers": [
                        {
                          "id": "c017e5d8-f5c0-46d7-a3de-9db71a4432c7",
                          "name": "groups",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-realm-role-mapper",
                          "consentRequired": false,
                          "config": {
                            "introspection.token.claim": "true",
                            "multivalued": "true",
                            "userinfo.token.claim": "true",
                            "user.attribute": "foo",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "groups",
                            "jsonType.label": "String"
                          }
                        },
                        {
                          "id": "053ab013-99ac-449a-9aaf-9bb7aec6c0eb",
                          "name": "full name",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-full-name-mapper",
                          "consentRequired": false,
                          "config": {
                            "id.token.claim": "true",
                            "introspection.token.claim": "true",
                            "access.token.claim": "true",
                            "userinfo.token.claim": "true"
                          }
                        }
                      ],
                      "defaultClientScopes": [
                        "web-origins",
                        "acr",
                        "roles",
                        "profile",
                        "email"
                      ],
                      "optionalClientScopes": [
                        "address",
                        "phone",
                        "offline_access",
                        "microprofile-jwt"
                      ]
                    },
                    {
                      "id": "5b31df1f-b6cf-423c-b2ed-18ff35e9eb6f",
                      "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_jaeger",
                      "surrogateAuthRequired": false,
                      "enabled": true,
                      "alwaysDisplayInConsole": false,
                      "clientAuthenticatorType": "client-secret",
                      "redirectUris": [
                        "https://tracing.bigbang.dev/login",
                        "https://tracing.dev.bigbang.mil/login"
                      ],
                      "webOrigins": [],
                      "notBefore": 0,
                      "bearerOnly": false,
                      "consentRequired": false,
                      "standardFlowEnabled": true,
                      "implicitFlowEnabled": false,
                      "directAccessGrantsEnabled": false,
                      "serviceAccountsEnabled": false,
                      "publicClient": true,
                      "frontchannelLogout": false,
                      "protocol": "openid-connect",
                      "attributes": {
                        "saml.assertion.signature": "false",
                        "id.token.as.detached.signature": "false",
                        "saml.multivalued.roles": "false",
                        "saml.force.post.binding": "false",
                        "saml.encrypt": "false",
                        "oauth2.device.authorization.grant.enabled": "false",
                        "backchannel.logout.revoke.offline.tokens": "false",
                        "saml.server.signature": "false",
                        "saml.server.signature.keyinfo.ext": "false",
                        "use.refresh.tokens": "true",
                        "exclude.session.state.from.auth.response": "false",
                        "oidc.ciba.grant.enabled": "false",
                        "saml.artifact.binding": "false",
                        "backchannel.logout.session.required": "true",
                        "client_credentials.use_refresh_token": "false",
                        "saml_force_name_id_format": "false",
                        "saml.client.signature": "false",
                        "tls.client.certificate.bound.access.tokens": "false",
                        "saml.authnstatement": "false",
                        "display.on.consent.screen": "false",
                        "saml.onetimeuse.condition": "false"
                      },
                      "authenticationFlowBindingOverrides": {},
                      "fullScopeAllowed": true,
                      "nodeReRegistrationTimeout": -1,
                      "defaultClientScopes": [
                        "web-origins",
                        "roles",
                        "profile",
                        "email"
                      ],
                      "optionalClientScopes": [
                        "address",
                        "phone",
                        "offline_access",
                        "microprofile-jwt"
                      ]
                    },
                    {
                      "id": "fb41d5e6-dc17-4c88-90d3-adfdaa08d1b8",
                      "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_kiali",
                      "name": "BigBang Dev Kiali",
                      "rootUrl": "https://kiali.dev.bigbang.mil/kiali",
                      "adminUrl": "https://kiali.dev.bigbang.mil/kiali",
                      "baseUrl": "",
                      "surrogateAuthRequired": false,
                      "enabled": true,
                      "alwaysDisplayInConsole": false,
                      "clientAuthenticatorType": "client-secret",
                      "redirectUris": [
                        "https://kiali.bigbang.dev/kiali/*",
                        "https://kiali.dev.bigbang.mil/kiali/*",
                        "https://kiali.dogfood.bigbang.dev/kiali/*"
                      ],
                      "webOrigins": [],
                      "notBefore": 0,
                      "bearerOnly": false,
                      "consentRequired": true,
                      "standardFlowEnabled": true,
                      "implicitFlowEnabled": false,
                      "directAccessGrantsEnabled": false,
                      "serviceAccountsEnabled": false,
                      "publicClient": true,
                      "frontchannelLogout": false,
                      "protocol": "openid-connect",
                      "attributes": {
                        "saml.assertion.signature": "false",
                        "id.token.as.detached.signature": "false",
                        "saml.multivalued.roles": "false",
                        "saml.force.post.binding": "false",
                        "saml.encrypt": "false",
                        "oauth2.device.authorization.grant.enabled": "false",
                        "saml.server.signature": "false",
                        "backchannel.logout.revoke.offline.tokens": "false",
                        "saml.server.signature.keyinfo.ext": "false",
                        "use.refresh.tokens": "true",
                        "exclude.session.state.from.auth.response": "false",
                        "oidc.ciba.grant.enabled": "false",
                        "saml.artifact.binding": "false",
                        "backchannel.logout.session.required": "true",
                        "client_credentials.use_refresh_token": "false",
                        "consent.screen.text": "This client is used for development support for Big Bang / Platform One.  Be sure that you are only using this client for development.",
                        "saml_force_name_id_format": "false",
                        "saml.client.signature": "false",
                        "tls.client.certificate.bound.access.tokens": "false",
                        "saml.authnstatement": "false",
                        "display.on.consent.screen": "true",
                        "saml.onetimeuse.condition": "false"
                      },
                      "authenticationFlowBindingOverrides": {},
                      "fullScopeAllowed": true,
                      "nodeReRegistrationTimeout": -1,
                      "defaultClientScopes": [
                        "web-origins",
                        "roles",
                        "profile",
                        "email"
                      ],
                      "optionalClientScopes": [
                        "address",
                        "phone",
                        "offline_access",
                        "microprofile-jwt"
                      ]
                    },
                    {
                      "id": "23ec72c7-03e6-4155-88cb-7c376f6a5d54",
                      "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_kibana",
                      "name": "BigBang Dev Kibana",
                      "baseUrl": "",
                      "surrogateAuthRequired": false,
                      "enabled": true,
                      "alwaysDisplayInConsole": false,
                      "clientAuthenticatorType": "client-secret",
                      "redirectUris": [
                        "https://kibana.dogfood.bigbang.dev/*",
                        "https://kibana.bigbang.dev/*",
                        "https://kibana.dev.bigbang.mil/*"
                      ],
                      "webOrigins": [],
                      "notBefore": 0,
                      "bearerOnly": false,
                      "consentRequired": true,
                      "standardFlowEnabled": true,
                      "implicitFlowEnabled": false,
                      "directAccessGrantsEnabled": false,
                      "serviceAccountsEnabled": false,
                      "publicClient": true,
                      "frontchannelLogout": false,
                      "protocol": "openid-connect",
                      "attributes": {
                        "saml.assertion.signature": "false",
                        "id.token.as.detached.signature": "false",
                        "saml.multivalued.roles": "false",
                        "saml.force.post.binding": "false",
                        "saml.encrypt": "false",
                        "oauth2.device.authorization.grant.enabled": "false",
                        "saml.server.signature": "false",
                        "backchannel.logout.revoke.offline.tokens": "false",
                        "saml.server.signature.keyinfo.ext": "false",
                        "use.refresh.tokens": "true",
                        "exclude.session.state.from.auth.response": "false",
                        "oidc.ciba.grant.enabled": "false",
                        "saml.artifact.binding": "false",
                        "backchannel.logout.session.required": "true",
                        "client_credentials.use_refresh_token": "false",
                        "consent.screen.text": "This client is used for development support for Big Bang / Platform One.  Be sure that you are only using this client for development.",
                        "saml_force_name_id_format": "false",
                        "saml.client.signature": "false",
                        "tls.client.certificate.bound.access.tokens": "false",
                        "saml.authnstatement": "false",
                        "display.on.consent.screen": "true",
                        "saml.onetimeuse.condition": "false"
                      },
                      "authenticationFlowBindingOverrides": {},
                      "fullScopeAllowed": true,
                      "nodeReRegistrationTimeout": -1,
                      "defaultClientScopes": [
                        "elastic"
                      ],
                      "optionalClientScopes": []
                    },
                    {
                      "id": "8cc2a9e0-f96e-4d36-a955-f9c12285bf98",
                      "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_mattermost",
                      "name": "BigBang Dev Mattermost",
                      "surrogateAuthRequired": false,
                      "enabled": true,
                      "alwaysDisplayInConsole": false,
                      "clientAuthenticatorType": "client-secret",
                      "redirectUris": [
                        "https://chat.dogfood.bigbang.dev/signup/gitlab/complete",
                        "https://chat.bigbang.dev/login/gitlab/complete",
                        "https://chat.bigbang.dev/signup/gitlab/complete",
                        "https://chat.dev.bigbang.mil/login/gitlab/complete",
                        "https://chat.dev.bigbang.mil/signup/gitlab/complete",
                        "https://chat.dogfood.bigbang.dev/login/gitlab/complete"
                      ],
                      "webOrigins": [],
                      "notBefore": 0,
                      "bearerOnly": false,
                      "consentRequired": true,
                      "standardFlowEnabled": true,
                      "implicitFlowEnabled": false,
                      "directAccessGrantsEnabled": false,
                      "serviceAccountsEnabled": false,
                      "publicClient": true,
                      "frontchannelLogout": false,
                      "protocol": "openid-connect",
                      "attributes": {
                        "saml.assertion.signature": "false",
                        "id.token.as.detached.signature": "false",
                        "saml.force.post.binding": "false",
                        "saml.multivalued.roles": "false",
                        "saml.encrypt": "false",
                        "oauth2.device.authorization.grant.enabled": "false",
                        "backchannel.logout.revoke.offline.tokens": "false",
                        "saml.server.signature": "false",
                        "saml.server.signature.keyinfo.ext": "false",
                        "use.refresh.tokens": "true",
                        "exclude.session.state.from.auth.response": "false",
                        "oidc.ciba.grant.enabled": "false",
                        "saml.artifact.binding": "false",
                        "backchannel.logout.session.required": "true",
                        "client_credentials.use_refresh_token": "false",
                        "consent.screen.text": "This client is used for development support for Big Bang / Platform One.  Be sure that you are only using this client for development.",
                        "saml_force_name_id_format": "false",
                        "saml.client.signature": "false",
                        "tls.client.certificate.bound.access.tokens": "false",
                        "saml.authnstatement": "false",
                        "display.on.consent.screen": "true",
                        "saml.onetimeuse.condition": "false"
                      },
                      "authenticationFlowBindingOverrides": {},
                      "fullScopeAllowed": true,
                      "nodeReRegistrationTimeout": -1,
                      "protocolMappers": [
                        {
                          "id": "2386a517-1092-4ee9-ad72-6996eb23cd93",
                          "name": "email",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-property-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "email",
                            "id.token.claim": "false",
                            "access.token.claim": "false",
                            "claim.name": "email",
                            "jsonType.label": "String"
                          }
                        },
                        {
                          "id": "028a101a-8b18-4501-b26b-95d29b95bff6",
                          "name": "mattermostid",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-attribute-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "mattermostid",
                            "id.token.claim": "false",
                            "access.token.claim": "false",
                            "claim.name": "id",
                            "jsonType.label": "long"
                          }
                        },
                        {
                          "id": "005d9eae-0288-4180-8bc8-ac05ab1145ff",
                          "name": "username",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-property-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "username",
                            "id.token.claim": "false",
                            "access.token.claim": "false",
                            "claim.name": "username",
                            "jsonType.label": "String"
                          }
                        }
                      ],
                      "defaultClientScopes": [],
                      "optionalClientScopes": []
                    },
                    {
                      "id": "cdb12226-b98c-401c-b1b9-7a7d243f5096",
                      "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_neuvector",
                      "name": "",
                      "description": "",
                      "rootUrl": "",
                      "adminUrl": "",
                      "baseUrl": "",
                      "surrogateAuthRequired": false,
                      "enabled": true,
                      "alwaysDisplayInConsole": false,
                      "clientAuthenticatorType": "client-secret",
                      "redirectUris": [
                        "https://neuvector.bigbang.dev/openId_auth",
                        "https://neuvector.dev.bigbang.mil/openId_auth"
                      ],
                      "webOrigins": [
                        "/*"
                      ],
                      "notBefore": 0,
                      "bearerOnly": false,
                      "consentRequired": false,
                      "standardFlowEnabled": true,
                      "implicitFlowEnabled": false,
                      "directAccessGrantsEnabled": true,
                      "serviceAccountsEnabled": false,
                      "publicClient": true,
                      "frontchannelLogout": true,
                      "protocol": "openid-connect",
                      "attributes": {
                        "oidc.ciba.grant.enabled": "false",
                        "display.on.consent.screen": "false",
                        "oauth2.device.authorization.grant.enabled": "false",
                        "backchannel.logout.session.required": "true",
                        "backchannel.logout.revoke.offline.tokens": "false"
                      },
                      "authenticationFlowBindingOverrides": {},
                      "fullScopeAllowed": true,
                      "nodeReRegistrationTimeout": -1,
                      "defaultClientScopes": [
                        "web-origins",
                        "roles",
                        "profile",
                        "email"
                      ],
                      "optionalClientScopes": [
                        "address",
                        "phone",
                        "offline_access",
                        "microprofile-jwt"
                      ]
                    },
                    {
                      "id": "7dd8ea36-bf2a-4561-be21-be5ab880a26d",
                      "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_prometheus",
                      "name": "BigBang Dev Prometheus",
                      "baseUrl": "",
                      "surrogateAuthRequired": false,
                      "enabled": true,
                      "alwaysDisplayInConsole": false,
                      "clientAuthenticatorType": "client-secret",
                      "redirectUris": [
                        "https://prometheus.bigbang.dev/login/generic_oauth",
                        "https://prometheus.dev.bigbang.mil/login/generic_oauth",
                        "https://prometheus.dogfood.bigbang.dev/login/generic_oauth"
                      ],
                      "webOrigins": [],
                      "notBefore": 0,
                      "bearerOnly": false,
                      "consentRequired": true,
                      "standardFlowEnabled": true,
                      "implicitFlowEnabled": false,
                      "directAccessGrantsEnabled": false,
                      "serviceAccountsEnabled": false,
                      "publicClient": true,
                      "frontchannelLogout": false,
                      "protocol": "openid-connect",
                      "attributes": {
                        "saml.assertion.signature": "false",
                        "id.token.as.detached.signature": "false",
                        "saml.multivalued.roles": "false",
                        "saml.force.post.binding": "false",
                        "saml.encrypt": "false",
                        "oauth2.device.authorization.grant.enabled": "false",
                        "saml.server.signature": "false",
                        "backchannel.logout.revoke.offline.tokens": "false",
                        "saml.server.signature.keyinfo.ext": "false",
                        "use.refresh.tokens": "true",
                        "exclude.session.state.from.auth.response": "false",
                        "oidc.ciba.grant.enabled": "false",
                        "saml.artifact.binding": "false",
                        "backchannel.logout.session.required": "true",
                        "client_credentials.use_refresh_token": "false",
                        "consent.screen.text": "This client is used for development support for Big Bang / Platform One.  Be sure that you are only using this client for development.",
                        "saml_force_name_id_format": "false",
                        "saml.client.signature": "false",
                        "tls.client.certificate.bound.access.tokens": "false",
                        "saml.authnstatement": "false",
                        "display.on.consent.screen": "true",
                        "saml.onetimeuse.condition": "false"
                      },
                      "authenticationFlowBindingOverrides": {},
                      "fullScopeAllowed": true,
                      "nodeReRegistrationTimeout": -1,
                      "defaultClientScopes": [
                        "web-origins",
                        "roles",
                        "profile",
                        "email"
                      ],
                      "optionalClientScopes": []
                    },
                    {
                      "id": "84cb46d7-3037-4ee1-9118-137791fc3759",
                      "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_thanos",
                      "name": "BigBang Dev Thanos",
                      "baseUrl": "",
                      "surrogateAuthRequired": false,
                      "enabled": true,
                      "alwaysDisplayInConsole": false,
                      "clientAuthenticatorType": "client-secret",
                      "redirectUris": [
                        "https://thanos.bigbang.dev/login/generic_oauth",
                        "https://thanos.dogfood.bigbang.dev/login/generic_oauth",
                        "https://thanos.dev.bigbang.mil/login/generic_oauth"
                      ],
                      "webOrigins": [],
                      "notBefore": 0,
                      "bearerOnly": false,
                      "consentRequired": true,
                      "standardFlowEnabled": true,
                      "implicitFlowEnabled": false,
                      "directAccessGrantsEnabled": false,
                      "serviceAccountsEnabled": false,
                      "publicClient": true,
                      "frontchannelLogout": false,
                      "protocol": "openid-connect",
                      "attributes": {
                        "saml.assertion.signature": "false",
                        "id.token.as.detached.signature": "false",
                        "saml.multivalued.roles": "false",
                        "saml.force.post.binding": "false",
                        "saml.encrypt": "false",
                        "oauth2.device.authorization.grant.enabled": "false",
                        "saml.server.signature": "false",
                        "backchannel.logout.revoke.offline.tokens": "false",
                        "saml.server.signature.keyinfo.ext": "false",
                        "use.refresh.tokens": "true",
                        "exclude.session.state.from.auth.response": "false",
                        "oidc.ciba.grant.enabled": "false",
                        "saml.artifact.binding": "false",
                        "backchannel.logout.session.required": "true",
                        "client_credentials.use_refresh_token": "false",
                        "consent.screen.text": "This client is used for development support for Big Bang / Platform One.  Be sure that you are only using this client for development.",
                        "saml_force_name_id_format": "false",
                        "saml.client.signature": "false",
                        "tls.client.certificate.bound.access.tokens": "false",
                        "saml.authnstatement": "false",
                        "display.on.consent.screen": "true",
                        "saml.onetimeuse.condition": "false"
                      },
                      "authenticationFlowBindingOverrides": {},
                      "fullScopeAllowed": true,
                      "nodeReRegistrationTimeout": -1,
                      "defaultClientScopes": [
                        "web-origins",
                        "roles",
                        "profile",
                        "email"
                      ],
                      "optionalClientScopes": []
                    },
                    {
                      "id": "791069b6-6d5c-478b-8bf1-932232a4f227",
                      "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_saml-sonarqube",
                      "name": "BigBang Dev Sonarqube SAML",
                      "surrogateAuthRequired": false,
                      "enabled": true,
                      "alwaysDisplayInConsole": false,
                      "clientAuthenticatorType": "client-secret",
                      "secret": "**********",
                      "redirectUris": [
                        "https://sonarqube.dogfood.bigbang.dev/oauth2/callback/saml*",
                        "https://sonarqube.bigbang.dev/oauth2/callback/saml*",
                        "https://sonarqube.dev.bigbang.mil/oauth2/callback/saml*"
                      ],
                      "webOrigins": [],
                      "notBefore": 0,
                      "bearerOnly": false,
                      "consentRequired": true,
                      "standardFlowEnabled": true,
                      "implicitFlowEnabled": false,
                      "directAccessGrantsEnabled": false,
                      "serviceAccountsEnabled": false,
                      "publicClient": false,
                      "frontchannelLogout": true,
                      "protocol": "saml",
                      "attributes": {
                        "saml.multivalued.roles": "false",
                        "saml.force.post.binding": "true",
                        "oauth2.device.authorization.grant.enabled": "false",
                        "backchannel.logout.revoke.offline.tokens": "false",
                        "saml.server.signature.keyinfo.ext": "false",
                        "use.refresh.tokens": "true",
                        "saml.signing.certificate": "MIIDETCCAfkCBgF3KuB/ozANBgkqhkiG9w0BAQsFADBMMUowSAYDVQQDDEFwbGF0Zm9ybTFfYTg2MDRjYzktZjVlOS00NjU2LTgwMmQtZDA1NjI0MzcwMjQ1X2JiOC1zYW1sLXNvbmFycXViZTAeFw0yMTAxMjIxNjEzMTFaFw0zMTAxMjIxNjE0NTFaMEwxSjBIBgNVBAMMQXBsYXRmb3JtMV9hODYwNGNjOS1mNWU5LTQ2NTYtODAyZC1kMDU2MjQzNzAyNDVfYmI4LXNhbWwtc29uYXJxdWJlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAgqxNsJiFI3PVXiv7frUy0W3KYLVF05MhTPTiH0rNl0v5AbkmGMciIBscWEwZsp8h6W2zjOrfn21JqRkYjkbEFHnxcG/NpaPRenX/Z8+yVU4hdykssT90aAcER7c2E9TGXMvGloeQYNd9evev0/GpojLK+AoVcrZjca2Zvoe/Xkh3pTwt1KedE9502t55WxwImo3ZzZpFc4lmgsSNCZHShiLlhksoUy1mVk4rFVGTWLn9uDEv7N0h8eEkSm9kDZID4e4fryxpDi+poye49hExr29oCh+/ZGvq1CXWW99riq5UaRSV4mnO3ltRp19cd0DGN6FKljSCZVN0xH/QR0ZbgwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQB09x+9493D7rZq4/mMyjlOvPZeVde72I+56IJdXUbz9xAkwVfhQ124SX7Jx0whCnzhW8qowLlczh30zCh17ZbVQBcUqp4T1wm8sad8iQF90fjb/H18Qlt6szSqOD2iwaRCf+Oy2cLmIDhKFHAX8kJozX3wjU2hrRkTia/S2tm8P+o/mlc6PQeUfKHhT/WvY/ton6tGn9+e2rLpelDQmRUFFckWB32uPRpuz3uQ956/xufcAl8CUsgGgqMBvBauo97EsSi+Txk3SISnkMHFJWbpDIKBHaRobVB9f013R+8YbwPfm+pmygDeBEuV01o8LRm7UFTyjLkH5v+NBzkGF0bH",
                        "oidc.ciba.grant.enabled": "false",
                        "backchannel.logout.session.required": "false",
                        "saml.signature.algorithm": "RSA_SHA256",
                        "client_credentials.use_refresh_token": "false",
                        "consent.screen.text": "This client is used for development support for Big Bang / Platform One.  Be sure that you are only using this client for development.",
                        "saml.client.signature": "false",
                        "saml.signing.private.key": "MIIEogIBAAKCAQEAgqxNsJiFI3PVXiv7frUy0W3KYLVF05MhTPTiH0rNl0v5AbkmGMciIBscWEwZsp8h6W2zjOrfn21JqRkYjkbEFHnxcG/NpaPRenX/Z8+yVU4hdykssT90aAcER7c2E9TGXMvGloeQYNd9evev0/GpojLK+AoVcrZjca2Zvoe/Xkh3pTwt1KedE9502t55WxwImo3ZzZpFc4lmgsSNCZHShiLlhksoUy1mVk4rFVGTWLn9uDEv7N0h8eEkSm9kDZID4e4fryxpDi+poye49hExr29oCh+/ZGvq1CXWW99riq5UaRSV4mnO3ltRp19cd0DGN6FKljSCZVN0xH/QR0ZbgwIDAQABAoIBAGubGB7kej7HlF0IOwIMlNyBXLZmkCm6byHARrUeFE8S8OrKXOTqlt95c84CXOcKxBJFlCXnBF90z8PANshy3eU+xeOhLefJDyeZI8mI74Hv5P8LmRIc/u7rWEr2REHwZajk5ZPv7qTQzzQD43bU+qvmx92Z8C+Woi1ql8CeaKhqN1+5D7OqiKiPor2ekHvx7wkMm+Nb/pnHEaCIoKW2Mr6x3CkrOsnHxbdAEbhp+uglEtWWzTyspk1P+Z3knVY6oUL9VUK3qUmNWO/M+tc7a3rRUlgSzs+qT+ketveyLLUYPsEmrLPJ3jExCjdUL9UNdUqQOKnMJlujYaOcHooaToECgYEAuCDGAfNbxqi8hCYzvIm8ATN6wQnPfUlmMi7PKoG3io0z97UuboT47zbZOIJWYDMiLlezw9F0m9iE/FiuT2U7HagQD1JtrvhZKUc0q/sXXBEd9DseLGc5wSc4JFdE7XLDiyi4dqX5VDu9DmRC+XMe3xcqz0KBxeYjyBEFJRA0cT8CgYEAta35oJ/59ls7FZrHqcs3S885x9vj0Yxlosw01DtkX42X5lOepHRoJ0i3nknWTFWiw1WquCOiV9SkwaVCNC3hTLKzrKI0iahJjJeThaLn6PFJ4Evoa29gnRkp9QElDyx2MLroUEqtQ1RyuEFfchNmilfD9QSXQswZcyNcmn0BQL0CgYBWcvzEma/zW/H20cDkun5MyhDOZX7Hwhh7Y0LdID4+jQFjQevk9AW0urnOMFPBowBfZcn/HG51ZXk6yaA9orfYurmfmAHrbqreGJKAVMmo7lhz/PWzv1t8dp+DYH36RjHNOncxLcgcZlfjU+umFwjdkZEF8qHfeqg+HM+fkTYuHQKBgCzkemRoY1munWDvSBr6rgU7hWmPOjITYSHjF8LBkkHSORCe5Pp6ESpz23tvf1aJapid2Ht7wqe1UajP7xX5qExNc/xacGT7goENC1TgNjHnPXwBBcNWWCc5ipaR29huAh50cOc2LK4QdfB1puIHTTUuDqvCoKXOzRMYT8+Ux/R5AoGAbRjvfqExhACTt277ftHo/fB9EuKerafEvBndqjdFnJqENCMqt43i3cJ9b4cYXIkqlSCsXD5oOFadAYCJgMRIufaANidkl9KKrPn9HA2kIetGiYShrOzzu1R0iVUPFJZdpqm9yznIuFpfsVKl56EPwe/IsNwqQSN2l4vtUHLakew=",
                        "saml.assertion.signature": "false",
                        "id.token.as.detached.signature": "false",
                        "saml.encrypt": "false",
                        "saml.server.signature": "true",
                        "exclude.session.state.from.auth.response": "false",
                        "saml.artifact.binding.identifier": "MzWtPrrIAP7fVdD6+rOto/l0FVA=",
                        "saml.artifact.binding": "false",
                        "saml_force_name_id_format": "false",
                        "tls.client.certificate.bound.access.tokens": "false",
                        "saml.authnstatement": "true",
                        "display.on.consent.screen": "true",
                        "saml_name_id_format": "username",
                        "saml.onetimeuse.condition": "false",
                        "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#"
                      },
                      "authenticationFlowBindingOverrides": {},
                      "fullScopeAllowed": true,
                      "nodeReRegistrationTimeout": -1,
                      "protocolMappers": [
                        {
                          "id": "06888032-3895-414b-879a-257e3e7bb6d6",
                          "name": "Name",
                          "protocol": "saml",
                          "protocolMapper": "saml-user-property-mapper",
                          "consentRequired": false,
                          "config": {
                            "attribute.nameformat": "Basic",
                            "user.attribute": "username",
                            "attribute.name": "name"
                          }
                        },
                        {
                          "id": "0a18f6db-91b7-4c39-8d1b-c0811aaedf0b",
                          "name": "Group",
                          "protocol": "saml",
                          "protocolMapper": "saml-group-membership-mapper",
                          "consentRequired": false,
                          "config": {
                            "single": "true",
                            "attribute.nameformat": "Basic",
                            "full.path": "false",
                            "attribute.name": "groups"
                          }
                        },
                        {
                          "id": "fadcca72-c57e-43f4-9dd8-4fdc94f38485",
                          "name": "Login",
                          "protocol": "saml",
                          "protocolMapper": "saml-user-property-mapper",
                          "consentRequired": false,
                          "config": {
                            "attribute.nameformat": "Basic",
                            "user.attribute": "Username",
                            "attribute.name": "login"
                          }
                        },
                        {
                          "id": "83572940-7a10-40d4-af5b-697182b53435",
                          "name": "Email",
                          "protocol": "saml",
                          "protocolMapper": "saml-user-property-mapper",
                          "consentRequired": false,
                          "config": {
                            "attribute.nameformat": "Basic",
                            "user.attribute": "email",
                            "attribute.name": "email"
                          }
                        }
                      ],
                      "defaultClientScopes": [],
                      "optionalClientScopes": []
                    },
                    {
                      "id": "88e8bc0c-a50a-4735-ab91-0b99080f9906",
                      "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_twistlock-oidc",
                      "name": "twistlock",
                      "surrogateAuthRequired": false,
                      "enabled": true,
                      "alwaysDisplayInConsole": false,
                      "clientAuthenticatorType": "client-secret",
                      "redirectUris": [
                        "https://twistlock.bigbang.dev/api/v1/authenticate/callback/oidc",
                        "https://twistlock.dev.bigbang.mil/api/v1/authenticate/callback/oidc"
                      ],
                      "webOrigins": [],
                      "notBefore": 0,
                      "bearerOnly": false,
                      "consentRequired": false,
                      "standardFlowEnabled": true,
                      "implicitFlowEnabled": false,
                      "directAccessGrantsEnabled": false,
                      "serviceAccountsEnabled": false,
                      "publicClient": true,
                      "frontchannelLogout": false,
                      "protocol": "openid-connect",
                      "attributes": {
                        "saml.assertion.signature": "false",
                        "id.token.as.detached.signature": "false",
                        "saml.multivalued.roles": "false",
                        "saml.force.post.binding": "false",
                        "saml.encrypt": "false",
                        "oauth2.device.authorization.grant.enabled": "false",
                        "backchannel.logout.revoke.offline.tokens": "false",
                        "saml.server.signature": "false",
                        "saml.server.signature.keyinfo.ext": "false",
                        "use.refresh.tokens": "true",
                        "exclude.session.state.from.auth.response": "false",
                        "oidc.ciba.grant.enabled": "false",
                        "saml.artifact.binding": "false",
                        "backchannel.logout.session.required": "true",
                        "client_credentials.use_refresh_token": "false",
                        "saml_force_name_id_format": "false",
                        "saml.client.signature": "false",
                        "tls.client.certificate.bound.access.tokens": "false",
                        "saml.authnstatement": "false",
                        "display.on.consent.screen": "false",
                        "saml.onetimeuse.condition": "false"
                      },
                      "authenticationFlowBindingOverrides": {},
                      "fullScopeAllowed": true,
                      "nodeReRegistrationTimeout": -1,
                      "defaultClientScopes": [
                        "profile"
                      ],
                      "optionalClientScopes": [
                        "address",
                        "phone",
                        "offline_access",
                        "microprofile-jwt"
                      ]
                    },
                    {
                      "id": "01a6f0c9-1965-45d4-8082-58dd29f406f3",
                      "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_twistlock-saml",
                      "name": "BigBang Dev Twistlock",
                      "baseUrl": "",
                      "surrogateAuthRequired": false,
                      "enabled": true,
                      "alwaysDisplayInConsole": false,
                      "clientAuthenticatorType": "client-secret",
                      "redirectUris": [
                        "https://twistlock.bigbang.dev*",
                        "https://twistlock.dev.bigbang.mil*",
                        "https://twistlock.dogfood.bigbang.dev*"
                      ],
                      "webOrigins": [],
                      "notBefore": 0,
                      "bearerOnly": false,
                      "consentRequired": true,
                      "standardFlowEnabled": true,
                      "implicitFlowEnabled": false,
                      "directAccessGrantsEnabled": false,
                      "serviceAccountsEnabled": false,
                      "publicClient": true,
                      "frontchannelLogout": true,
                      "protocol": "saml",
                      "attributes": {
                        "saml.multivalued.roles": "false",
                        "saml.force.post.binding": "true",
                        "oauth2.device.authorization.grant.enabled": "false",
                        "backchannel.logout.revoke.offline.tokens": "false",
                        "saml.server.signature.keyinfo.ext": "false",
                        "use.refresh.tokens": "true",
                        "oidc.ciba.grant.enabled": "false",
                        "backchannel.logout.session.required": "false",
                        "saml.signature.algorithm": "RSA_SHA256",
                        "client_credentials.use_refresh_token": "false",
                        "consent.screen.text": "This client is used for development support for Big Bang / Platform One.  Be sure that you are only using this client for development.",
                        "saml.client.signature": "false",
                        "saml.assertion.signature": "true",
                        "id.token.as.detached.signature": "false",
                        "saml.encrypt": "false",
                        "saml.server.signature": "true",
                        "exclude.session.state.from.auth.response": "false",
                        "saml.artifact.binding.identifier": "ATq0Fw8iNYtSLOjmZXQWpJeI03Y=",
                        "saml.artifact.binding": "false",
                        "saml_force_name_id_format": "false",
                        "tls.client.certificate.bound.access.tokens": "false",
                        "saml.authnstatement": "true",
                        "display.on.consent.screen": "true",
                        "saml_name_id_format": "username",
                        "saml.onetimeuse.condition": "false",
                        "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#"
                      },
                      "authenticationFlowBindingOverrides": {},
                      "fullScopeAllowed": true,
                      "nodeReRegistrationTimeout": -1,
                      "defaultClientScopes": [
                        "role_list",
                        "twistlock"
                      ],
                      "optionalClientScopes": []
                    },
                    {
                      "id": "72f1277e-082c-48e4-aedb-52f5de9557db",
                      "clientId": "dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_vault",
                      "name": "dev vault",
                      "surrogateAuthRequired": false,
                      "enabled": true,
                      "alwaysDisplayInConsole": false,
                      "clientAuthenticatorType": "client-secret",
                      "redirectUris": [
                        "https://vault.bigbang.dev/ui/vault/auth/oidc/oidc/callback",
                        "https://vault.bigbang.dev/oidc/callback",
                        "https://vault.dev.bigbang.mil/oidc/callback"
                      ],
                      "webOrigins": [],
                      "notBefore": 0,
                      "bearerOnly": false,
                      "consentRequired": false,
                      "standardFlowEnabled": true,
                      "implicitFlowEnabled": false,
                      "directAccessGrantsEnabled": true,
                      "serviceAccountsEnabled": false,
                      "publicClient": true,
                      "frontchannelLogout": false,
                      "protocol": "openid-connect",
                      "attributes": {
                        "id.token.as.detached.signature": "false",
                        "saml.assertion.signature": "false",
                        "saml.force.post.binding": "false",
                        "saml.multivalued.roles": "false",
                        "saml.encrypt": "false",
                        "oauth2.device.authorization.grant.enabled": "false",
                        "backchannel.logout.revoke.offline.tokens": "false",
                        "saml.server.signature": "false",
                        "saml.server.signature.keyinfo.ext": "false",
                        "use.refresh.tokens": "true",
                        "exclude.session.state.from.auth.response": "false",
                        "oidc.ciba.grant.enabled": "false",
                        "saml.artifact.binding": "false",
                        "backchannel.logout.session.required": "true",
                        "client_credentials.use_refresh_token": "false",
                        "saml_force_name_id_format": "false",
                        "require.pushed.authorization.requests": "false",
                        "saml.client.signature": "false",
                        "tls.client.certificate.bound.access.tokens": "false",
                        "saml.authnstatement": "false",
                        "display.on.consent.screen": "false",
                        "saml.onetimeuse.condition": "false"
                      },
                      "authenticationFlowBindingOverrides": {},
                      "fullScopeAllowed": true,
                      "nodeReRegistrationTimeout": -1,
                      "protocolMappers": [
                        {
                          "id": "c0481802-7c25-4599-8fbc-1584f1167339",
                          "name": "groups",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-group-membership-mapper",
                          "consentRequired": false,
                          "config": {
                            "full.path": "false",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "groups",
                            "userinfo.token.claim": "true"
                          }
                        }
                      ],
                      "defaultClientScopes": [
                        "web-origins",
                        "roles",
                        "profile",
                        "email"
                      ],
                      "optionalClientScopes": [
                        "address",
                        "phone",
                        "offline_access",
                        "microprofile-jwt"
                      ]
                    },
                    {
                      "id": "f975a475-89c7-43bc-bddb-c9d974ff5ac3",
                      "clientId": "https://nexus.dev.bigbang.mil/service/rest/v1/security/saml/metadata",
                      "surrogateAuthRequired": false,
                      "enabled": true,
                      "alwaysDisplayInConsole": false,
                      "clientAuthenticatorType": "client-secret",
                      "redirectUris": [
                        "https://nexus.bigbang.dev/saml",
                        "https://nexus.dev.bigbang.mil/saml"
                      ],
                      "webOrigins": [
                        "https://nexus.dev.bigbang.mil",
                        "https://nexus.bigbang.dev"
                      ],
                      "notBefore": 0,
                      "bearerOnly": false,
                      "consentRequired": false,
                      "standardFlowEnabled": true,
                      "implicitFlowEnabled": false,
                      "directAccessGrantsEnabled": false,
                      "serviceAccountsEnabled": false,
                      "publicClient": false,
                      "frontchannelLogout": true,
                      "protocol": "saml",
                      "attributes": {
                        "saml.assertion.signature": "true",
                        "saml_single_logout_service_url_post": "https://nexus.dev.bigbang.mil/saml",
                        "saml.force.post.binding": "true",
                        "saml.encrypt": "true",
                        "saml_assertion_consumer_url_post": "https://nexus.dev.bigbang.mil/saml",
                        "saml.server.signature": "true",
                        "saml.server.signature.keyinfo.ext": "false",
                        "saml.signing.certificate": "MIICrjCCAZagAwIBAgIGAXxWyxltMA0GCSqGSIb3DQEBCwUAMBgxFjAUBgNVBAMMDVNBTUwgS2V5U3RvcmUwHhcNMjExMDA2MTgwODQzWhcNMzExMDA0MTgwODQzWjAYMRYwFAYDVQQDDA1TQU1MIEtleVN0b3JlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxUynY8ACJfuCmMQqxqRekKeD7OTyjttfyxE2Xnny67/67evr/GZIUz0XsYl6XgTpTj2Nk6kaVWJR7W/dy0zqK+4liCRTzuDoOkaOZY+IqH8+XVqXei4eQo9g5woXOzsXihpaMQ38yXVKmkq13UCas8PKS1AnkUT1tAYDUoLL8o2kmGedLscpyb3+rf4F5nWJLTGgWIG8mQ7X3CpvKD9+cCLGkJJSOdK8XHPYVO8MDTVqxhLZEejYIHAwN1oFPGkURzskiD1CCDymQq/f0tbQlnu62FOa3iu6TqpQWB9pGoFj84p2uvMNIvDN489fBTT3blFnSu3tFDwAividADYuswIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBDMUOqL4pQJhYFqstQNaz8LlDALTTD1uw/k0MFGxTAa5Tri87WvTHa8uJNDw1PFUGZ80137TCK7I7+zDZIQzADb+WoZVPhIh+S9L9bbaQZ2LpRnsoJisP+fWNoDrR8okPYJ8pFuzA3V1dU5Oyo0kz1tTWtlnh2NIs6f9dClo5HjeUw6wigjcp5dLcz8RanWwKXYHAIAYlarUjjVdHLDvEmZzvWTWOK6JtLOx+3XRYcuKx5ICdTnDp9ptMB0MOZf8/rLUKpSz+rMKRlRoFR7vEpTtMbKtl8izZTKDYpWOf1MIE1Tv/Pq+dehjBoccwLthSEA+ba7/lJ0O0+U0euW+yT",
                        "saml.artifact.binding.identifier": "zi3d4HrYBBkEVIhg+2TTyVulk7A=",
                        "saml.signature.algorithm": "RSA_SHA256",
                        "saml_force_name_id_format": "false",
                        "saml.client.signature": "true",
                        "saml.encryption.certificate": "MIICrjCCAZagAwIBAgIGAXxWyxltMA0GCSqGSIb3DQEBCwUAMBgxFjAUBgNVBAMMDVNBTUwgS2V5U3RvcmUwHhcNMjExMDA2MTgwODQzWhcNMzExMDA0MTgwODQzWjAYMRYwFAYDVQQDDA1TQU1MIEtleVN0b3JlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxUynY8ACJfuCmMQqxqRekKeD7OTyjttfyxE2Xnny67/67evr/GZIUz0XsYl6XgTpTj2Nk6kaVWJR7W/dy0zqK+4liCRTzuDoOkaOZY+IqH8+XVqXei4eQo9g5woXOzsXihpaMQ38yXVKmkq13UCas8PKS1AnkUT1tAYDUoLL8o2kmGedLscpyb3+rf4F5nWJLTGgWIG8mQ7X3CpvKD9+cCLGkJJSOdK8XHPYVO8MDTVqxhLZEejYIHAwN1oFPGkURzskiD1CCDymQq/f0tbQlnu62FOa3iu6TqpQWB9pGoFj84p2uvMNIvDN489fBTT3blFnSu3tFDwAividADYuswIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBDMUOqL4pQJhYFqstQNaz8LlDALTTD1uw/k0MFGxTAa5Tri87WvTHa8uJNDw1PFUGZ80137TCK7I7+zDZIQzADb+WoZVPhIh+S9L9bbaQZ2LpRnsoJisP+fWNoDrR8okPYJ8pFuzA3V1dU5Oyo0kz1tTWtlnh2NIs6f9dClo5HjeUw6wigjcp5dLcz8RanWwKXYHAIAYlarUjjVdHLDvEmZzvWTWOK6JtLOx+3XRYcuKx5ICdTnDp9ptMB0MOZf8/rLUKpSz+rMKRlRoFR7vEpTtMbKtl8izZTKDYpWOf1MIE1Tv/Pq+dehjBoccwLthSEA+ba7/lJ0O0+U0euW+yT",
                        "saml.authnstatement": "true",
                        "saml_name_id_format": "username",
                        "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#"
                      },
                      "authenticationFlowBindingOverrides": {},
                      "fullScopeAllowed": true,
                      "nodeReRegistrationTimeout": -1,
                      "protocolMappers": [
                        {
                          "id": "fcbdab3a-887f-4386-aaac-8df9c6998eef",
                          "name": "Groups",
                          "protocol": "saml",
                          "protocolMapper": "saml-group-membership-mapper",
                          "consentRequired": false,
                          "config": {
                            "single": "true",
                            "attribute.nameformat": "Basic",
                            "full.path": "false",
                            "friendly.name": "groups",
                            "attribute.name": "groups"
                          }
                        },
                        {
                          "id": "4bf047d6-64fd-4304-8fd3-e0308a3f9d82",
                          "name": "username",
                          "protocol": "saml",
                          "protocolMapper": "saml-user-property-mapper",
                          "consentRequired": false,
                          "config": {
                            "attribute.nameformat": "Basic",
                            "user.attribute": "username",
                            "friendly.name": "username",
                            "attribute.name": "username"
                          }
                        },
                        {
                          "id": "a6a96c9f-b273-4fdd-ab66-94e4f872cb70",
                          "name": "Last Name",
                          "protocol": "saml",
                          "protocolMapper": "saml-user-property-mapper",
                          "consentRequired": false,
                          "config": {
                            "attribute.nameformat": "Basic",
                            "user.attribute": "lastName",
                            "friendly.name": "lastName",
                            "attribute.name": "lastName"
                          }
                        },
                        {
                          "id": "60d39726-b959-4ea6-a38b-7a6821fa4518",
                          "name": "First Name",
                          "protocol": "saml",
                          "protocolMapper": "saml-user-property-mapper",
                          "consentRequired": false,
                          "config": {
                            "attribute.nameformat": "Basic",
                            "user.attribute": "firstName",
                            "friendly.name": "firstName",
                            "attribute.name": "firstName"
                          }
                        }
                      ],
                      "defaultClientScopes": [
                        "role_list"
                      ],
                      "optionalClientScopes": []
                    },
                    {
                      "id": "55aa6b66-9150-45ec-b6d8-4f941bcdcc26",
                      "clientId": "realm-management",
                      "name": "${client_realm-management}",
                      "surrogateAuthRequired": false,
                      "enabled": true,
                      "alwaysDisplayInConsole": false,
                      "clientAuthenticatorType": "client-secret",
                      "secret": "**********",
                      "redirectUris": [],
                      "webOrigins": [],
                      "notBefore": 0,
                      "bearerOnly": true,
                      "consentRequired": false,
                      "standardFlowEnabled": true,
                      "implicitFlowEnabled": false,
                      "directAccessGrantsEnabled": false,
                      "serviceAccountsEnabled": false,
                      "publicClient": false,
                      "frontchannelLogout": false,
                      "protocol": "openid-connect",
                      "attributes": {},
                      "authenticationFlowBindingOverrides": {},
                      "fullScopeAllowed": false,
                      "nodeReRegistrationTimeout": 0,
                      "defaultClientScopes": [],
                      "optionalClientScopes": []
                    },
                    {
                      "id": "6fb79009-25ae-40a4-9ad0-bee278c88ffe",
                      "clientId": "security-admin-console",
                      "name": "${client_security-admin-console}",
                      "rootUrl": "${authAdminUrl}",
                      "baseUrl": "/admin/baby-yoda/console/",
                      "surrogateAuthRequired": false,
                      "enabled": true,
                      "alwaysDisplayInConsole": false,
                      "clientAuthenticatorType": "client-secret",
                      "secret": "**********",
                      "redirectUris": [
                        "/admin/baby-yoda/console/*"
                      ],
                      "webOrigins": [
                        "+"
                      ],
                      "notBefore": 0,
                      "bearerOnly": false,
                      "consentRequired": false,
                      "standardFlowEnabled": true,
                      "implicitFlowEnabled": false,
                      "directAccessGrantsEnabled": false,
                      "serviceAccountsEnabled": false,
                      "publicClient": true,
                      "frontchannelLogout": false,
                      "protocol": "openid-connect",
                      "attributes": {
                        "pkce.code.challenge.method": "S256"
                      },
                      "authenticationFlowBindingOverrides": {},
                      "fullScopeAllowed": false,
                      "nodeReRegistrationTimeout": 0,
                      "protocolMappers": [
                        {
                          "id": "877c3b95-14b0-4b2b-8cb3-922570c208e9",
                          "name": "locale",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-attribute-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "locale",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "locale",
                            "jsonType.label": "String"
                          }
                        }
                      ],
                      "defaultClientScopes": [],
                      "optionalClientScopes": []
                    }
                  ],
                  "clientScopes": [
                    {
                      "id": "486bcb60-f616-4c56-a9b2-cc51455be865",
                      "name": "microprofile-jwt",
                      "description": "Microprofile - JWT built-in scope",
                      "protocol": "openid-connect",
                      "attributes": {
                        "include.in.token.scope": "true",
                        "display.on.consent.screen": "false"
                      },
                      "protocolMappers": [
                        {
                          "id": "97286b1b-f4f6-4eee-9209-583c0bd58661",
                          "name": "upn",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-property-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "username",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "upn",
                            "jsonType.label": "String"
                          }
                        },
                        {
                          "id": "ea6d61be-ce3d-42c5-909f-9eec38394dfd",
                          "name": "groups",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-realm-role-mapper",
                          "consentRequired": false,
                          "config": {
                            "multivalued": "true",
                            "userinfo.token.claim": "true",
                            "user.attribute": "foo",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "groups",
                            "jsonType.label": "String"
                          }
                        }
                      ]
                    },
                    {
                      "id": "24447c4b-00a2-41f0-ae7d-a008d60fd33b",
                      "name": "Grafana",
                      "protocol": "openid-connect",
                      "attributes": {
                        "include.in.token.scope": "true",
                        "display.on.consent.screen": "true"
                      },
                      "protocolMappers": [
                        {
                          "id": "8bb5981c-7d17-449d-92eb-20c617658e99",
                          "name": "username",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-property-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "username",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "preferred_username",
                            "jsonType.label": "String"
                          }
                        },
                        {
                          "id": "84d4a8f9-8add-4317-b760-6437696f45c0",
                          "name": "realm roles",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-realm-role-mapper",
                          "consentRequired": false,
                          "config": {
                            "usermodel.realmRoleMapping.rolePrefix": "realm roles",
                            "multivalued": "true",
                            "userinfo.token.claim": "false",
                            "id.token.claim": "false",
                            "access.token.claim": "true",
                            "claim.name": "realm_access.roles",
                            "jsonType.label": "String"
                          }
                        },
                        {
                          "id": "ce8b1959-fce2-416e-8dd4-260dbec1e867",
                          "name": "client roles",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-client-role-mapper",
                          "consentRequired": false,
                          "config": {
                            "multivalued": "true",
                            "userinfo.token.claim": "false",
                            "id.token.claim": "false",
                            "access.token.claim": "true",
                            "claim.name": "resource_access.${client_id}.roles",
                            "jsonType.label": "String"
                          }
                        },
                        {
                          "id": "8d37ffdc-beda-4c35-a5fb-eb459e0d0aaa",
                          "name": "email",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-property-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "email",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "email",
                            "jsonType.label": "String"
                          }
                        },
                        {
                          "id": "01846b2d-1790-4e35-b356-7f74ea649253",
                          "name": "profile",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-attribute-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "multivalued": "false",
                            "user.attribute": "profile",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "profile",
                            "jsonType.label": "String"
                          }
                        },
                        {
                          "id": "314e75e6-c080-452c-9979-eba7ffc58e0c",
                          "name": "groups",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-group-membership-mapper",
                          "consentRequired": false,
                          "config": {
                            "full.path": "true",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "groups",
                            "userinfo.token.claim": "true"
                          }
                        }
                      ]
                    },
                    {
                      "id": "9326a78d-1e0d-4442-89d6-28e6aba20d00",
                      "name": "Gitlab",
                      "protocol": "openid-connect",
                      "attributes": {
                        "include.in.token.scope": "true",
                        "display.on.consent.screen": "true"
                      },
                      "protocolMappers": [
                        {
                          "id": "179eb941-92e3-4a1d-aef4-3cc42499faf0",
                          "name": "profile",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-attribute-mapper",
                          "consentRequired": false,
                          "config": {
                            "user.attribute": "proflie",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "jsonType.label": "String",
                            "userinfo.token.claim": "true"
                          }
                        },
                        {
                          "id": "f1513c5e-ac20-4a20-8ec2-24a01b9a8650",
                          "name": "email",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-property-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "email",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "email",
                            "jsonType.label": "String"
                          }
                        },
                        {
                          "id": "54cb51e4-7d97-409a-b7f4-bf2e85493a56",
                          "name": "username",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-property-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "username",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "preferred_username",
                            "jsonType.label": "String"
                          }
                        }
                      ]
                    },
                    {
                      "id": "ece5f888-591c-44b4-a0a4-22050092a0ff",
                      "name": "web-origins",
                      "description": "OpenID Connect scope for add allowed web origins to the access token",
                      "protocol": "openid-connect",
                      "attributes": {
                        "include.in.token.scope": "false",
                        "display.on.consent.screen": "false",
                        "consent.screen.text": ""
                      },
                      "protocolMappers": [
                        {
                          "id": "9462b17e-b393-4c21-b726-4ee1b5162638",
                          "name": "allowed web origins",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-allowed-origins-mapper",
                          "consentRequired": false,
                          "config": {}
                        }
                      ]
                    },
                    {
                      "id": "1d6dc724-222d-4465-b93a-e89c515a4dd6",
                      "name": "phone",
                      "description": "OpenID Connect built-in scope: phone",
                      "protocol": "openid-connect",
                      "attributes": {
                        "include.in.token.scope": "true",
                        "display.on.consent.screen": "true",
                        "consent.screen.text": "${phoneScopeConsentText}"
                      },
                      "protocolMappers": [
                        {
                          "id": "c1145c8e-0563-48ba-ae7f-af918f0b8d2e",
                          "name": "phone number",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-attribute-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "phoneNumber",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "phone_number",
                            "jsonType.label": "String"
                          }
                        },
                        {
                          "id": "c2d969e9-e554-4627-99c8-bbecec694e0a",
                          "name": "phone number verified",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-attribute-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "phoneNumberVerified",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "phone_number_verified",
                            "jsonType.label": "boolean"
                          }
                        }
                      ]
                    },
                    {
                      "id": "064e6036-85e1-45ae-87ac-5614510456a7",
                      "name": "email",
                      "description": "OpenID Connect built-in scope: email",
                      "protocol": "openid-connect",
                      "attributes": {
                        "include.in.token.scope": "true",
                        "display.on.consent.screen": "true",
                        "consent.screen.text": "${emailScopeConsentText}"
                      },
                      "protocolMappers": [
                        {
                          "id": "138f1206-c9d2-41ff-80bf-1d6ad279fc14",
                          "name": "email",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-property-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "email",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "email",
                            "jsonType.label": "String"
                          }
                        },
                        {
                          "id": "d77eca3b-36e6-44b0-9274-34442dbcdfcf",
                          "name": "email verified",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-property-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "emailVerified",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "email_verified",
                            "jsonType.label": "boolean"
                          }
                        }
                      ]
                    },
                    {
                      "id": "fe2dbca3-685c-4f46-b2a3-3c3f6efb9049",
                      "name": "role_list",
                      "description": "SAML role list",
                      "protocol": "saml",
                      "attributes": {
                        "consent.screen.text": "${samlRoleListScopeConsentText}",
                        "display.on.consent.screen": "true"
                      },
                      "protocolMappers": [
                        {
                          "id": "5b33612e-8bd9-49c1-bd37-c25851fb227d",
                          "name": "role list",
                          "protocol": "saml",
                          "protocolMapper": "saml-role-list-mapper",
                          "consentRequired": false,
                          "config": {
                            "single": "false",
                            "attribute.nameformat": "Basic",
                            "attribute.name": "Role"
                          }
                        }
                      ]
                    },
                    {
                      "id": "98fe901c-81b9-4229-9b9f-1177d341e9db",
                      "name": "offline_access",
                      "description": "OpenID Connect built-in scope: offline_access",
                      "protocol": "openid-connect",
                      "attributes": {
                        "consent.screen.text": "${offlineAccessScopeConsentText}",
                        "display.on.consent.screen": "true"
                      }
                    },
                    {
                      "id": "a78ae9be-9dca-4858-b573-d6aeacf77584",
                      "name": "twistlock",
                      "description": "twistlock",
                      "protocol": "saml",
                      "attributes": {
                        "include.in.token.scope": "true",
                        "display.on.consent.screen": "true"
                      }
                    },
                    {
                      "id": "73183397-1d5a-4387-b54d-de45d1d98658",
                      "name": "profile",
                      "description": "OpenID Connect built-in scope: profile",
                      "protocol": "openid-connect",
                      "attributes": {
                        "include.in.token.scope": "true",
                        "display.on.consent.screen": "true",
                        "consent.screen.text": "${profileScopeConsentText}"
                      },
                      "protocolMappers": [
                        {
                          "id": "49c7590e-e8fc-4a51-9f2a-1148800538e8",
                          "name": "gender",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-attribute-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "gender",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "gender",
                            "jsonType.label": "String"
                          }
                        },
                        {
                          "id": "11d12135-2c22-4f45-a9d1-759c34cc4ceb",
                          "name": "updated at",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-attribute-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "updatedAt",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "updated_at",
                            "jsonType.label": "String"
                          }
                        },
                        {
                          "id": "ac3c8e9b-6fc4-4853-9f10-08a620960b1b",
                          "name": "username",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-property-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "username",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "preferred_username",
                            "jsonType.label": "String"
                          }
                        },
                        {
                          "id": "c9428437-e280-47d2-bffb-affc860b53bc",
                          "name": "picture",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-attribute-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "picture",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "picture",
                            "jsonType.label": "String"
                          }
                        },
                        {
                          "id": "52ffd1d8-9ce2-4a20-ba10-68c5f2652836",
                          "name": "website",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-attribute-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "website",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "website",
                            "jsonType.label": "String"
                          }
                        },
                        {
                          "id": "12324360-6724-4f17-a82a-0dd11536954d",
                          "name": "zoneinfo",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-attribute-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "zoneinfo",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "zoneinfo",
                            "jsonType.label": "String"
                          }
                        },
                        {
                          "id": "ddcd682b-66c8-4f30-89f3-b833983af1b8",
                          "name": "birthdate",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-attribute-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "birthdate",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "birthdate",
                            "jsonType.label": "String"
                          }
                        },
                        {
                          "id": "f9877242-403a-4649-86cb-971e1efd6ebe",
                          "name": "given name",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-property-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "firstName",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "given_name",
                            "jsonType.label": "String"
                          }
                        },
                        {
                          "id": "e31e1d5b-9cc4-4d08-92eb-1cf763a9e24f",
                          "name": "family name",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-property-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "lastName",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "family_name",
                            "jsonType.label": "String"
                          }
                        },
                        {
                          "id": "177f9c08-b354-426d-a06b-4043bdcd5c65",
                          "name": "locale",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-attribute-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "locale",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "locale",
                            "jsonType.label": "String"
                          }
                        },
                        {
                          "id": "19d751de-4c6c-4524-804e-687eb860a21c",
                          "name": "full name",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-full-name-mapper",
                          "consentRequired": false,
                          "config": {
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "userinfo.token.claim": "true"
                          }
                        },
                        {
                          "id": "c778183f-a0ab-49fd-9131-3b7525100827",
                          "name": "profile",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-attribute-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "profile",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "profile",
                            "jsonType.label": "String"
                          }
                        },
                        {
                          "id": "859a1100-468e-4753-b109-71b07c0cae24",
                          "name": "middle name",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-attribute-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "middleName",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "middle_name",
                            "jsonType.label": "String"
                          }
                        },
                        {
                          "id": "8dcc1f5d-256f-4bcc-b6d2-db931a52fe74",
                          "name": "nickname",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-attribute-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "nickname",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "nickname",
                            "jsonType.label": "String"
                          }
                        }
                      ]
                    },
                    {
                      "id": "55c60259-8981-4cd4-a593-a07b71c9a9f3",
                      "name": "roles",
                      "description": "OpenID Connect scope for add user roles to the access token",
                      "protocol": "openid-connect",
                      "attributes": {
                        "include.in.token.scope": "false",
                        "display.on.consent.screen": "true",
                        "consent.screen.text": "${rolesScopeConsentText}"
                      },
                      "protocolMappers": [
                        {
                          "id": "776ed187-694d-4324-80f0-f7a210604462",
                          "name": "realm roles",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-realm-role-mapper",
                          "consentRequired": false,
                          "config": {
                            "user.attribute": "foo",
                            "access.token.claim": "true",
                            "claim.name": "realm_access.roles",
                            "jsonType.label": "String",
                            "multivalued": "true"
                          }
                        },
                        {
                          "id": "1dbd971a-ab9c-49d0-997f-8cc939f70145",
                          "name": "audience resolve",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-audience-resolve-mapper",
                          "consentRequired": false,
                          "config": {}
                        },
                        {
                          "id": "4333b5ca-2c48-4384-a52b-47ee263cc8e0",
                          "name": "client roles",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-client-role-mapper",
                          "consentRequired": false,
                          "config": {
                            "user.attribute": "foo",
                            "access.token.claim": "true",
                            "claim.name": "resource_access.${client_id}.roles",
                            "jsonType.label": "String",
                            "multivalued": "true"
                          }
                        }
                      ]
                    },
                    {
                      "id": "13d19457-7520-4260-88e7-e411fef66a89",
                      "name": "ArgoCD",
                      "description": "ArgoCD",
                      "protocol": "openid-connect",
                      "attributes": {
                        "include.in.token.scope": "true",
                        "display.on.consent.screen": "true"
                      },
                      "protocolMappers": [
                        {
                          "id": "45551e56-67f5-41af-a27b-bb8893fbdc1e",
                          "name": "groups",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-group-membership-mapper",
                          "consentRequired": false,
                          "config": {
                            "full.path": "false",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "groups",
                            "userinfo.token.claim": "true"
                          }
                        },
                        {
                          "id": "27016c5d-5d3b-4584-9fa4-dd0cf7333eff",
                          "name": "email",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-property-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "email",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "email",
                            "jsonType.label": "String"
                          }
                        },
                        {
                          "id": "bed5efd5-b34b-495c-b9a6-7abc5578969c",
                          "name": "nickname",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-attribute-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "nickname",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "nickname",
                            "jsonType.label": "String"
                          }
                        },
                        {
                          "id": "b99c8886-059f-42ff-840f-47fe82d52d8c",
                          "name": "full name",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-full-name-mapper",
                          "consentRequired": false,
                          "config": {
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "userinfo.token.claim": "true"
                          }
                        },
                        {
                          "id": "ef9009c0-9865-4409-ba35-47396b1cb734",
                          "name": "profile",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-attribute-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "profile",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "profile",
                            "jsonType.label": "String"
                          }
                        },
                        {
                          "id": "b67b20e2-c9b8-4ed9-85e9-255feb73975f",
                          "name": "username",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-property-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "username",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "preferred_username",
                            "jsonType.label": "String"
                          }
                        }
                      ]
                    },
                    {
                      "id": "8449cb31-24be-4fcb-8263-8eca0c1e9f5b",
                      "name": "elastic",
                      "description": "elastic",
                      "protocol": "openid-connect",
                      "attributes": {
                        "include.in.token.scope": "true",
                        "display.on.consent.screen": "true"
                      },
                      "protocolMappers": [
                        {
                          "id": "1a54ed51-5663-4a68-b966-1ebe554d0fa5",
                          "name": "group",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-group-membership-mapper",
                          "consentRequired": false,
                          "config": {
                            "full.path": "false",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "groups",
                            "userinfo.token.claim": "true"
                          }
                        },
                        {
                          "id": "7423fef6-af04-4e5c-baac-a7dec8e4f1df",
                          "name": "email",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-property-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "email",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "email",
                            "jsonType.label": "String"
                          }
                        },
                        {
                          "id": "f277b67c-ff9e-41ba-a30b-fb60d25612a9",
                          "name": "username",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-usermodel-property-mapper",
                          "consentRequired": false,
                          "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "username",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "preferred_username",
                            "jsonType.label": "String"
                          }
                        }
                      ]
                    },
                    {
                      "id": "4d3d36a8-e9b7-4ce4-8086-be68215c27d9",
                      "name": "address",
                      "description": "OpenID Connect built-in scope: address",
                      "protocol": "openid-connect",
                      "attributes": {
                        "include.in.token.scope": "true",
                        "display.on.consent.screen": "true",
                        "consent.screen.text": "${addressScopeConsentText}"
                      },
                      "protocolMappers": [
                        {
                          "id": "a5cdca3b-b1e7-4681-813c-67f542b0a1c3",
                          "name": "address",
                          "protocol": "openid-connect",
                          "protocolMapper": "oidc-address-mapper",
                          "consentRequired": false,
                          "config": {
                            "user.attribute.formatted": "formatted",
                            "user.attribute.country": "country",
                            "user.attribute.postal_code": "postal_code",
                            "userinfo.token.claim": "true",
                            "user.attribute.street": "street",
                            "id.token.claim": "true",
                            "user.attribute.region": "region",
                            "access.token.claim": "true",
                            "user.attribute.locality": "locality"
                          }
                        }
                      ]
                    }
                  ],
                  "defaultDefaultClientScopes": [
                    "email",
                    "roles",
                    "profile",
                    "web-origins",
                    "role_list"
                  ],
                  "defaultOptionalClientScopes": [
                    "phone",
                    "microprofile-jwt",
                    "address",
                    "offline_access"
                  ],
                  "browserSecurityHeaders": {
                    "contentSecurityPolicyReportOnly": "",
                    "xContentTypeOptions": "nosniff",
                    "xRobotsTag": "none",
                    "xFrameOptions": "SAMEORIGIN",
                    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
                    "xXSSProtection": "1; mode=block",
                    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
                  },
                  "smtpServer": {
                    "password": "**********",
                    "starttls": "true",
                    "auth": "true",
                    "port": "",
                    "host": "",
                    "from": "",
                    "fromDisplayName": "",
                    "ssl": "",
                    "user": ""
                  },
                  "loginTheme": "p1-sso",
                  "accountTheme": "p1-sso",
                  "adminTheme": "p1-sso",
                  "emailTheme": "keycloak",
                  "eventsEnabled": false,
                  "eventsExpiration": 1800,
                  "eventsListeners": [
                    "jboss-logging"
                  ],
                  "enabledEventTypes": [
                    "SEND_RESET_PASSWORD",
                    "UPDATE_CONSENT_ERROR",
                    "GRANT_CONSENT",
                    "REMOVE_TOTP",
                    "REVOKE_GRANT",
                    "UPDATE_TOTP",
                    "LOGIN_ERROR",
                    "CLIENT_LOGIN",
                    "RESET_PASSWORD_ERROR",
                    "IMPERSONATE_ERROR",
                    "CODE_TO_TOKEN_ERROR",
                    "CUSTOM_REQUIRED_ACTION",
                    "RESTART_AUTHENTICATION",
                    "IMPERSONATE",
                    "UPDATE_PROFILE_ERROR",
                    "LOGIN",
                    "UPDATE_PASSWORD_ERROR",
                    "CLIENT_INITIATED_ACCOUNT_LINKING",
                    "TOKEN_EXCHANGE",
                    "LOGOUT",
                    "REGISTER",
                    "CLIENT_REGISTER",
                    "IDENTITY_PROVIDER_LINK_ACCOUNT",
                    "UPDATE_PASSWORD",
                    "CLIENT_DELETE",
                    "FEDERATED_IDENTITY_LINK_ERROR",
                    "IDENTITY_PROVIDER_FIRST_LOGIN",
                    "CLIENT_DELETE_ERROR",
                    "VERIFY_EMAIL",
                    "CLIENT_LOGIN_ERROR",
                    "RESTART_AUTHENTICATION_ERROR",
                    "EXECUTE_ACTIONS",
                    "REMOVE_FEDERATED_IDENTITY_ERROR",
                    "TOKEN_EXCHANGE_ERROR",
                    "PERMISSION_TOKEN",
                    "SEND_IDENTITY_PROVIDER_LINK_ERROR",
                    "EXECUTE_ACTION_TOKEN_ERROR",
                    "SEND_VERIFY_EMAIL",
                    "EXECUTE_ACTIONS_ERROR",
                    "REMOVE_FEDERATED_IDENTITY",
                    "IDENTITY_PROVIDER_POST_LOGIN",
                    "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR",
                    "UPDATE_EMAIL",
                    "REGISTER_ERROR",
                    "REVOKE_GRANT_ERROR",
                    "EXECUTE_ACTION_TOKEN",
                    "LOGOUT_ERROR",
                    "UPDATE_EMAIL_ERROR",
                    "CLIENT_UPDATE_ERROR",
                    "UPDATE_PROFILE",
                    "CLIENT_REGISTER_ERROR",
                    "FEDERATED_IDENTITY_LINK",
                    "SEND_IDENTITY_PROVIDER_LINK",
                    "SEND_VERIFY_EMAIL_ERROR",
                    "RESET_PASSWORD",
                    "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR",
                    "UPDATE_CONSENT",
                    "REMOVE_TOTP_ERROR",
                    "VERIFY_EMAIL_ERROR",
                    "SEND_RESET_PASSWORD_ERROR",
                    "CLIENT_UPDATE",
                    "CUSTOM_REQUIRED_ACTION_ERROR",
                    "IDENTITY_PROVIDER_POST_LOGIN_ERROR",
                    "UPDATE_TOTP_ERROR",
                    "CODE_TO_TOKEN",
                    "GRANT_CONSENT_ERROR",
                    "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR"
                  ],
                  "adminEventsEnabled": true,
                  "adminEventsDetailsEnabled": true,
                  "identityProviders": [],
                  "identityProviderMappers": [],
                  "components": {
                    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
                      {
                        "id": "ccd57f68-3f54-4f9b-b2a7-47cbbedefe84",
                        "name": "Allowed Client Scopes",
                        "providerId": "allowed-client-templates",
                        "subType": "anonymous",
                        "subComponents": {},
                        "config": {
                          "allow-default-scopes": [
                            "true"
                          ]
                        }
                      },
                      {
                        "id": "1f12d3a2-a9ef-4720-bb36-a363ae9abfdf",
                        "name": "Allowed Protocol Mapper Types",
                        "providerId": "allowed-protocol-mappers",
                        "subType": "authenticated",
                        "subComponents": {},
                        "config": {
                          "allowed-protocol-mapper-types": [
                            "oidc-usermodel-property-mapper",
                            "saml-user-attribute-mapper",
                            "oidc-address-mapper",
                            "saml-user-property-mapper",
                            "oidc-full-name-mapper",
                            "oidc-usermodel-attribute-mapper",
                            "saml-role-list-mapper",
                            "oidc-sha256-pairwise-sub-mapper"
                          ]
                        }
                      },
                      {
                        "id": "844ee7a5-f98e-4640-88a7-1da821b64085",
                        "name": "Max Clients Limit",
                        "providerId": "max-clients",
                        "subType": "anonymous",
                        "subComponents": {},
                        "config": {
                          "max-clients": [
                            "200"
                          ]
                        }
                      },
                      {
                        "id": "fc271641-30df-40aa-8c92-8a61d5729a38",
                        "name": "Consent Required",
                        "providerId": "consent-required",
                        "subType": "anonymous",
                        "subComponents": {},
                        "config": {}
                      },
                      {
                        "id": "7717935d-a03c-46e0-82fd-78be66dab63b",
                        "name": "Allowed Client Scopes",
                        "providerId": "allowed-client-templates",
                        "subType": "authenticated",
                        "subComponents": {},
                        "config": {
                          "allow-default-scopes": [
                            "true"
                          ]
                        }
                      },
                      {
                        "id": "e3d72400-e970-4fd1-85c6-130d1f0e9b4c",
                        "name": "Full Scope Disabled",
                        "providerId": "scope",
                        "subType": "anonymous",
                        "subComponents": {},
                        "config": {}
                      },
                      {
                        "id": "a1d490a7-504f-4512-9aef-48247d5d2982",
                        "name": "Allowed Protocol Mapper Types",
                        "providerId": "allowed-protocol-mappers",
                        "subType": "anonymous",
                        "subComponents": {},
                        "config": {
                          "allowed-protocol-mapper-types": [
                            "oidc-sha256-pairwise-sub-mapper",
                            "oidc-usermodel-attribute-mapper",
                            "saml-user-attribute-mapper",
                            "saml-role-list-mapper",
                            "oidc-address-mapper",
                            "oidc-full-name-mapper",
                            "saml-user-property-mapper",
                            "oidc-usermodel-property-mapper"
                          ]
                        }
                      },
                      {
                        "id": "0bc6c803-7a6d-46dd-b4d9-4118d7fd465b",
                        "name": "Trusted Hosts",
                        "providerId": "trusted-hosts",
                        "subType": "anonymous",
                        "subComponents": {},
                        "config": {
                          "host-sending-registration-request-must-match": [
                            "true"
                          ],
                          "client-uris-must-match": [
                            "true"
                          ]
                        }
                      }
                    ],
                    "org.keycloak.userprofile.UserProfileProvider": [
                      {
                        "id": "3c5c068c-c9a5-4d68-8373-b30ae5e54c9c",
                        "providerId": "declarative-user-profile",
                        "subComponents": {},
                        "config": {}
                      }
                    ],
                    "org.keycloak.keys.KeyProvider": [
                      {
                        "id": "14f2eb89-4c5b-45be-9e27-cb7dba4af208",
                        "name": "aes-generated",
                        "providerId": "aes-generated",
                        "subComponents": {},
                        "config": {
                          "priority": [
                            "100"
                          ]
                        }
                      },
                      {
                        "id": "1e8e4be7-ffe4-496a-89b7-5a00633e5f4d",
                        "name": "rsa-generated",
                        "providerId": "rsa-generated",
                        "subComponents": {},
                        "config": {
                          "priority": [
                            "100"
                          ]
                        }
                      },
                      {
                        "id": "07c549f5-248b-4e04-b5f1-7e2a9fe6f82a",
                        "name": "hmac-generated",
                        "providerId": "hmac-generated",
                        "subComponents": {},
                        "config": {
                          "priority": [
                            "100"
                          ],
                          "algorithm": [
                            "HS256"
                          ]
                        }
                      }
                    ]
                  },
                  "internationalizationEnabled": false,
                  "supportedLocales": [
                    ""
                  ],
                  "authenticationFlows": [
                    {
                      "id": "5fca3666-0018-4ca1-8ec9-4b00deb3d8f1",
                      "alias": "Account verification options",
                      "description": "Method with which to verity the existing account",
                      "providerId": "basic-flow",
                      "topLevel": false,
                      "builtIn": true,
                      "authenticationExecutions": [
                        {
                          "authenticator": "idp-email-verification",
                          "authenticatorFlow": false,
                          "requirement": "ALTERNATIVE",
                          "priority": 10,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticatorFlow": true,
                          "requirement": "ALTERNATIVE",
                          "priority": 20,
                          "flowAlias": "Verify Existing Account by Re-authentication",
                          "userSetupAllowed": false,
                          "autheticatorFlow": true
                        }
                      ]
                    },
                    {
                      "id": "0c528a3a-e0d7-45f5-a458-f8c23842ab75",
                      "alias": "Authentication",
                      "description": "",
                      "providerId": "basic-flow",
                      "topLevel": false,
                      "builtIn": false,
                      "authenticationExecutions": [
                        {
                          "authenticator": "auth-cookie",
                          "authenticatorFlow": false,
                          "requirement": "ALTERNATIVE",
                          "priority": 0,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticatorConfig": "dod-cac",
                          "authenticator": "auth-x509-client-username-form",
                          "authenticatorFlow": false,
                          "requirement": "ALTERNATIVE",
                          "priority": 1,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticatorFlow": true,
                          "requirement": "ALTERNATIVE",
                          "priority": 2,
                          "flowAlias": "MFA Login",
                          "userSetupAllowed": false,
                          "autheticatorFlow": true
                        }
                      ]
                    },
                    {
                      "id": "a09f8f86-3df3-4397-91e2-d9dad1678ded",
                      "alias": "Authentication Options",
                      "description": "Authentication options.",
                      "providerId": "basic-flow",
                      "topLevel": false,
                      "builtIn": true,
                      "authenticationExecutions": [
                        {
                          "authenticator": "basic-auth",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 10,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticator": "basic-auth-otp",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 20,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticator": "auth-spnego",
                          "authenticatorFlow": false,
                          "requirement": "DISABLED",
                          "priority": 30,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        }
                      ]
                    },
                    {
                      "id": "7d53187d-13f4-4ec6-ade0-20b7d88d9aa4",
                      "alias": "Authorization",
                      "description": "",
                      "providerId": "basic-flow",
                      "topLevel": false,
                      "builtIn": false,
                      "authenticationExecutions": [
                        {
                          "authenticator": "p1-group-restriction",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 0,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        }
                      ]
                    },
                    {
                      "id": "d61e1deb-921e-412f-baed-dc51c0fdc532",
                      "alias": "Browser - Conditional OTP",
                      "description": "Flow to determine if the OTP is required for the authentication",
                      "providerId": "basic-flow",
                      "topLevel": false,
                      "builtIn": true,
                      "authenticationExecutions": [
                        {
                          "authenticator": "conditional-user-configured",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 10,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticator": "auth-otp-form",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 20,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        }
                      ]
                    },
                    {
                      "id": "ae089c5c-0424-4fb7-9768-2346b32bb1b2",
                      "alias": "Conditional OTP",
                      "description": "",
                      "providerId": "basic-flow",
                      "topLevel": false,
                      "builtIn": false,
                      "authenticationExecutions": [
                        {
                          "authenticator": "conditional-user-configured",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 0,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticator": "auth-otp-form",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 1,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        }
                      ]
                    },
                    {
                      "id": "2a37f1ea-9a71-46bf-8c76-34c480e90521",
                      "alias": "Direct Grant - Conditional OTP",
                      "description": "Flow to determine if the OTP is required for the authentication",
                      "providerId": "basic-flow",
                      "topLevel": false,
                      "builtIn": true,
                      "authenticationExecutions": [
                        {
                          "authenticator": "conditional-user-configured",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 10,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticator": "direct-grant-validate-otp",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 20,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        }
                      ]
                    },
                    {
                      "id": "a8c9a858-6236-4e3d-8b07-716527264327",
                      "alias": "First broker login - Conditional OTP",
                      "description": "Flow to determine if the OTP is required for the authentication",
                      "providerId": "basic-flow",
                      "topLevel": false,
                      "builtIn": true,
                      "authenticationExecutions": [
                        {
                          "authenticator": "conditional-user-configured",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 10,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticator": "auth-otp-form",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 20,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        }
                      ]
                    },
                    {
                      "id": "b44188c2-ddf7-4268-a860-b20e32c7fbcf",
                      "alias": "Handle Existing Account",
                      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
                      "providerId": "basic-flow",
                      "topLevel": false,
                      "builtIn": true,
                      "authenticationExecutions": [
                        {
                          "authenticator": "idp-confirm-link",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 10,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticatorFlow": true,
                          "requirement": "REQUIRED",
                          "priority": 20,
                          "flowAlias": "Account verification options",
                          "userSetupAllowed": false,
                          "autheticatorFlow": true
                        }
                      ]
                    },
                    {
                      "id": "cdf1be21-4140-4652-9d68-3b60742cc8ad",
                      "alias": "MFA Login",
                      "description": "",
                      "providerId": "basic-flow",
                      "topLevel": false,
                      "builtIn": false,
                      "authenticationExecutions": [
                        {
                          "authenticator": "auth-username-password-form",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 0,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticatorFlow": true,
                          "requirement": "REQUIRED",
                          "priority": 1,
                          "flowAlias": "Conditional OTP",
                          "userSetupAllowed": false,
                          "autheticatorFlow": true
                        }
                      ]
                    },
                    {
                      "id": "f95bc9ff-dca8-4622-87d4-e89877091cc1",
                      "alias": "P1 Authentication",
                      "description": "browser based authentication",
                      "providerId": "basic-flow",
                      "topLevel": true,
                      "builtIn": false,
                      "authenticationExecutions": [
                        {
                          "authenticatorFlow": true,
                          "requirement": "REQUIRED",
                          "priority": 31,
                          "flowAlias": "Authentication",
                          "userSetupAllowed": false,
                          "autheticatorFlow": true
                        },
                        {
                          "authenticatorFlow": true,
                          "requirement": "REQUIRED",
                          "priority": 32,
                          "flowAlias": "Authorization",
                          "userSetupAllowed": false,
                          "autheticatorFlow": true
                        }
                      ]
                    },
                    {
                      "id": "5603fb4e-050a-48d5-9ffc-14fa0bba25e8",
                      "alias": "P1 Authentication Browser - Conditional OTP",
                      "description": "Flow to determine if the OTP is required for the authentication",
                      "providerId": "basic-flow",
                      "topLevel": false,
                      "builtIn": false,
                      "authenticationExecutions": [
                        {
                          "authenticator": "conditional-user-configured",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 10,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticator": "auth-otp-form",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 20,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        }
                      ]
                    },
                    {
                      "id": "2122677b-1a02-40a4-817b-66da58b1621a",
                      "alias": "P1 Registration",
                      "description": "registration flow",
                      "providerId": "basic-flow",
                      "topLevel": true,
                      "builtIn": false,
                      "authenticationExecutions": [
                        {
                          "authenticator": "registration-page-form",
                          "authenticatorFlow": true,
                          "requirement": "REQUIRED",
                          "priority": 10,
                          "flowAlias": "P1 Registration registration form",
                          "userSetupAllowed": false,
                          "autheticatorFlow": true
                        }
                      ]
                    },
                    {
                      "id": "25a3d7b4-3d46-4d66-9a14-0fd4be935dff",
                      "alias": "P1 Registration registration form",
                      "description": "registration form",
                      "providerId": "form-flow",
                      "topLevel": false,
                      "builtIn": false,
                      "authenticationExecutions": [
                        {
                          "authenticator": "registration-user-creation",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 20,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticatorConfig": "main",
                          "authenticator": "registration-validation-action",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 50,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticator": "registration-x509-password-action",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 51,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        }
                      ]
                    },
                    {
                      "id": "7f506bd3-70f7-4f99-b339-a57e5e4cb456",
                      "alias": "P1 Reset Credentials",
                      "description": "Reset credentials for a user if they forgot their password or something",
                      "providerId": "basic-flow",
                      "topLevel": true,
                      "builtIn": false,
                      "authenticationExecutions": [
                        {
                          "authenticator": "reset-credentials-choose-user",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 10,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticator": "reset-credential-email",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 20,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticator": "reset-password",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 30,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        }
                      ]
                    },
                    {
                      "id": "459c187e-eb0f-4f2e-8e15-0c0b245a406e",
                      "alias": "Reset - Conditional OTP",
                      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
                      "providerId": "basic-flow",
                      "topLevel": false,
                      "builtIn": true,
                      "authenticationExecutions": [
                        {
                          "authenticator": "conditional-user-configured",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 10,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticator": "reset-otp",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 20,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        }
                      ]
                    },
                    {
                      "id": "51f952e6-d3ac-49bd-8e76-fd50128a2bea",
                      "alias": "User creation or linking",
                      "description": "Flow for the existing/non-existing user alternatives",
                      "providerId": "basic-flow",
                      "topLevel": false,
                      "builtIn": true,
                      "authenticationExecutions": [
                        {
                          "authenticatorConfig": "create unique user config",
                          "authenticator": "idp-create-user-if-unique",
                          "authenticatorFlow": false,
                          "requirement": "ALTERNATIVE",
                          "priority": 10,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticatorFlow": true,
                          "requirement": "ALTERNATIVE",
                          "priority": 20,
                          "flowAlias": "Handle Existing Account",
                          "userSetupAllowed": false,
                          "autheticatorFlow": true
                        }
                      ]
                    },
                    {
                      "id": "1f94f667-ec06-4e24-9ce5-9fac2cb87892",
                      "alias": "Verify Existing Account by Re-authentication",
                      "description": "Reauthentication of existing account",
                      "providerId": "basic-flow",
                      "topLevel": false,
                      "builtIn": true,
                      "authenticationExecutions": [
                        {
                          "authenticator": "idp-username-password-form",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 10,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticatorFlow": true,
                          "requirement": "CONDITIONAL",
                          "priority": 20,
                          "flowAlias": "First broker login - Conditional OTP",
                          "userSetupAllowed": false,
                          "autheticatorFlow": true
                        }
                      ]
                    },
                    {
                      "id": "128fa0e2-a2e5-4d99-87e8-e60aa672d516",
                      "alias": "browser",
                      "description": "browser based authentication",
                      "providerId": "basic-flow",
                      "topLevel": true,
                      "builtIn": true,
                      "authenticationExecutions": [
                        {
                          "authenticator": "auth-cookie",
                          "authenticatorFlow": false,
                          "requirement": "ALTERNATIVE",
                          "priority": 10,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticator": "auth-spnego",
                          "authenticatorFlow": false,
                          "requirement": "DISABLED",
                          "priority": 20,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticator": "identity-provider-redirector",
                          "authenticatorFlow": false,
                          "requirement": "ALTERNATIVE",
                          "priority": 25,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticatorFlow": true,
                          "requirement": "ALTERNATIVE",
                          "priority": 30,
                          "flowAlias": "forms",
                          "userSetupAllowed": false,
                          "autheticatorFlow": true
                        }
                      ]
                    },
                    {
                      "id": "3053f59e-b554-4573-9a96-092b12cf9cfb",
                      "alias": "clients",
                      "description": "Base authentication for clients",
                      "providerId": "client-flow",
                      "topLevel": true,
                      "builtIn": true,
                      "authenticationExecutions": [
                        {
                          "authenticator": "client-secret",
                          "authenticatorFlow": false,
                          "requirement": "ALTERNATIVE",
                          "priority": 10,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticator": "client-jwt",
                          "authenticatorFlow": false,
                          "requirement": "ALTERNATIVE",
                          "priority": 20,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticator": "client-secret-jwt",
                          "authenticatorFlow": false,
                          "requirement": "ALTERNATIVE",
                          "priority": 30,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticator": "client-x509",
                          "authenticatorFlow": false,
                          "requirement": "ALTERNATIVE",
                          "priority": 40,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        }
                      ]
                    },
                    {
                      "id": "3b482c5b-59c5-4786-88f8-09123324d74d",
                      "alias": "direct grant",
                      "description": "OpenID Connect Resource Owner Grant",
                      "providerId": "basic-flow",
                      "topLevel": true,
                      "builtIn": true,
                      "authenticationExecutions": [
                        {
                          "authenticator": "direct-grant-validate-username",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 10,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticator": "direct-grant-validate-password",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 20,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticatorFlow": true,
                          "requirement": "CONDITIONAL",
                          "priority": 30,
                          "flowAlias": "Direct Grant - Conditional OTP",
                          "userSetupAllowed": false,
                          "autheticatorFlow": true
                        }
                      ]
                    },
                    {
                      "id": "a2e76a41-9a2a-43ce-8a32-e82782f00d98",
                      "alias": "docker auth",
                      "description": "Used by Docker clients to authenticate against the IDP",
                      "providerId": "basic-flow",
                      "topLevel": true,
                      "builtIn": true,
                      "authenticationExecutions": [
                        {
                          "authenticator": "docker-http-basic-authenticator",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 10,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        }
                      ]
                    },
                    {
                      "id": "5785e630-7e91-4899-877d-569e3ac79871",
                      "alias": "first broker login",
                      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
                      "providerId": "basic-flow",
                      "topLevel": true,
                      "builtIn": true,
                      "authenticationExecutions": [
                        {
                          "authenticatorConfig": "review profile config",
                          "authenticator": "idp-review-profile",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 10,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticatorFlow": true,
                          "requirement": "REQUIRED",
                          "priority": 20,
                          "flowAlias": "User creation or linking",
                          "userSetupAllowed": false,
                          "autheticatorFlow": true
                        }
                      ]
                    },
                    {
                      "id": "4950a920-1925-4deb-a45e-9035be7e7c2b",
                      "alias": "forms",
                      "description": "Username, password, otp and other auth forms.",
                      "providerId": "basic-flow",
                      "topLevel": false,
                      "builtIn": true,
                      "authenticationExecutions": [
                        {
                          "authenticator": "auth-username-password-form",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 10,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticatorFlow": true,
                          "requirement": "CONDITIONAL",
                          "priority": 20,
                          "flowAlias": "Browser - Conditional OTP",
                          "userSetupAllowed": false,
                          "autheticatorFlow": true
                        }
                      ]
                    },
                    {
                      "id": "458de539-a7ff-4038-968c-86066c36b825",
                      "alias": "http challenge",
                      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
                      "providerId": "basic-flow",
                      "topLevel": true,
                      "builtIn": true,
                      "authenticationExecutions": [
                        {
                          "authenticator": "no-cookie-redirect",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 10,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticatorFlow": true,
                          "requirement": "REQUIRED",
                          "priority": 20,
                          "flowAlias": "Authentication Options",
                          "userSetupAllowed": false,
                          "autheticatorFlow": true
                        }
                      ]
                    },
                    {
                      "id": "5a93f084-9395-4620-a918-47f17828cccd",
                      "alias": "registration",
                      "description": "registration flow",
                      "providerId": "basic-flow",
                      "topLevel": true,
                      "builtIn": true,
                      "authenticationExecutions": [
                        {
                          "authenticator": "registration-page-form",
                          "authenticatorFlow": true,
                          "requirement": "REQUIRED",
                          "priority": 10,
                          "flowAlias": "registration form",
                          "userSetupAllowed": false,
                          "autheticatorFlow": true
                        }
                      ]
                    },
                    {
                      "id": "6f96df4f-5955-4531-8af3-727a40a62e75",
                      "alias": "registration form",
                      "description": "registration form",
                      "providerId": "form-flow",
                      "topLevel": false,
                      "builtIn": true,
                      "authenticationExecutions": [
                        {
                          "authenticator": "registration-user-creation",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 20,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticator": "registration-profile-action",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 40,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticator": "registration-password-action",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 50,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticator": "registration-recaptcha-action",
                          "authenticatorFlow": false,
                          "requirement": "DISABLED",
                          "priority": 60,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        }
                      ]
                    },
                    {
                      "id": "ac02e171-c1ef-40da-be31-7b8bda5fc5ff",
                      "alias": "reset credentials",
                      "description": "Reset credentials for a user if they forgot their password or something",
                      "providerId": "basic-flow",
                      "topLevel": true,
                      "builtIn": true,
                      "authenticationExecutions": [
                        {
                          "authenticator": "reset-credentials-choose-user",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 10,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticator": "reset-credential-email",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 20,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticator": "reset-password",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 30,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        },
                        {
                          "authenticatorFlow": true,
                          "requirement": "CONDITIONAL",
                          "priority": 40,
                          "flowAlias": "Reset - Conditional OTP",
                          "userSetupAllowed": false,
                          "autheticatorFlow": true
                        }
                      ]
                    },
                    {
                      "id": "fd5f9d3b-7a95-4f93-9f5f-c839f3362e9a",
                      "alias": "saml ecp",
                      "description": "SAML ECP Profile Authentication Flow",
                      "providerId": "basic-flow",
                      "topLevel": true,
                      "builtIn": true,
                      "authenticationExecutions": [
                        {
                          "authenticator": "http-basic-authenticator",
                          "authenticatorFlow": false,
                          "requirement": "REQUIRED",
                          "priority": 10,
                          "userSetupAllowed": false,
                          "autheticatorFlow": false
                        }
                      ]
                    }
                  ],
                  "authenticatorConfig": [
                    {
                      "id": "bd49f97e-6ce0-42c7-b045-a16dc7a37649",
                      "alias": "create unique user config",
                      "config": {
                        "require.password.update.after.registration": "false"
                      }
                    },
                    {
                      "id": "86fd892b-86e0-4b42-944c-5b518706271c",
                      "alias": "dod-cac",
                      "config": {
                        "x509-cert-auth.canonical-dn-enabled": "false",
                        "x509-cert-auth.mapper-selection.user-attribute-name": "usercertificate",
                        "x509-cert-auth.serialnumber-hex-enabled": "false",
                        "x509-cert-auth.regular-expression": "(.*?)(?:$)",
                        "x509-cert-auth.mapper-selection": "Custom Attribute Mapper",
                        "x509-cert-auth.crl-relative-path": "crl.pem",
                        "x509-cert-auth.crldp-checking-enabled": "false",
                        "x509-cert-auth.mapping-source-selection": "Subject's Common Name",
                        "x509-cert-auth.timestamp-validation-enabled": "true"
                      }
                    },
                    {
                      "id": "5afe735f-ceba-4390-8ad4-63de03c294cc",
                      "alias": "main",
                      "config": {}
                    },
                    {
                      "id": "d20d218e-9109-455d-9b03-bb453e209e81",
                      "alias": "review profile config",
                      "config": {
                        "update.profile.on.first.login": "missing"
                      }
                    }
                  ],
                  "requiredActions": [
                    {
                      "alias": "CONFIGURE_TOTP",
                      "name": "Configure OTP",
                      "providerId": "CONFIGURE_TOTP",
                      "enabled": true,
                      "defaultAction": false,
                      "priority": 10,
                      "config": {}
                    },
                    {
                      "alias": "terms_and_conditions",
                      "name": "Terms and Conditions",
                      "providerId": "terms_and_conditions",
                      "enabled": true,
                      "defaultAction": true,
                      "priority": 20,
                      "config": {}
                    },
                    {
                      "alias": "UPDATE_PASSWORD",
                      "name": "Update Password",
                      "providerId": "UPDATE_PASSWORD",
                      "enabled": true,
                      "defaultAction": false,
                      "priority": 30,
                      "config": {}
                    },
                    {
                      "alias": "UPDATE_PROFILE",
                      "name": "Update Profile",
                      "providerId": "UPDATE_PROFILE",
                      "enabled": true,
                      "defaultAction": false,
                      "priority": 40,
                      "config": {}
                    },
                    {
                      "alias": "VERIFY_EMAIL",
                      "name": "Verify Email",
                      "providerId": "VERIFY_EMAIL",
                      "enabled": true,
                      "defaultAction": true,
                      "priority": 50,
                      "config": {}
                    },
                    {
                      "alias": "delete_account",
                      "name": "Delete Account",
                      "providerId": "delete_account",
                      "enabled": false,
                      "defaultAction": false,
                      "priority": 60,
                      "config": {}
                    },
                    {
                      "alias": "update_user_locale",
                      "name": "Update User Locale",
                      "providerId": "update_user_locale",
                      "enabled": true,
                      "defaultAction": false,
                      "priority": 1000,
                      "config": {}
                    },
                    {
                      "alias": "UPDATE_X509",
                      "name": "Update X509",
                      "providerId": "UPDATE_X509",
                      "enabled": true,
                      "defaultAction": false,
                      "priority": 1001,
                      "config": {}
                    }
                  ],
                  "browserFlow": "P1 Authentication",
                  "registrationFlow": "P1 Registration",
                  "directGrantFlow": "direct grant",
                  "resetCredentialsFlow": "P1 Reset Credentials",
                  "clientAuthenticationFlow": "clients",
                  "dockerAuthenticationFlow": "docker auth",
                  "attributes": {
                    "cibaBackchannelTokenDeliveryMode": "poll",
                    "cibaExpiresIn": "120",
                    "cibaAuthRequestedUserHint": "login_hint",
                    "oauth2DeviceCodeLifespan": "600",
                    "clientOfflineSessionMaxLifespan": "0",
                    "oauth2DevicePollingInterval": "5",
                    "clientSessionIdleTimeout": "3600",
                    "parRequestUriLifespan": "60",
                    "clientSessionMaxLifespan": "86400",
                    "clientOfflineSessionIdleTimeout": "0",
                    "cibaInterval": "5"
                  },
                  "keycloakVersion": "16.1.1",
                  "userManagedAccessAllowed": false,
                  "clientProfiles": {
                    "profiles": []
                  },
                  "clientPolicies": {
                    "policies": []
                  }
                }
  mattermost:
    elasticsearch:
      enabled: true
    enabled: false
    sso:
      client_id: platform1_a8604cc9-f5e9-4656-802d-d05624370245_bb8-mattermost
      client_secret: no-secret
      enabled: true
    values:
      bbtests:
        cypress:
          envs:
            cypress_url: https://chat.dev.bigbang.mil
        enabled: true
      enterprise:
        enabled: true
      istio:
        hardened:
          customServiceEntries:
          - enabled: true
            name: cypress-service-entries-mattermost
            spec:
              hosts:
              - kiali.dev.bigbang.mil
              - registry.npmjs.org
              - download.cypress.io
              - cdn.cypress.io
              - repo1.dso.mil
              - grafana.dev.bigbang.mil
              - prometheus.dev.bigbang.mil
              location: MESH_EXTERNAL
              ports:
              - name: https
                number: 443
                protocol: TLS
              resolution: DNS
      minio:
        tenant:
          pools:
          - containerSecurityContext:
              capabilities:
                drop:
                - ALL
              runAsGroup: 1001
              runAsNonRoot: true
              runAsUser: 1001
            labels:
              app: minio
              app.kubernetes.io/name: minio
            name: pool-0
            resources:
              limits:
                cpu: 250m
                memory: 2Gi
              requests:
                cpu: 250m
                memory: 2Gi
            securityContext:
              fsGroup: 1001
              fsGroupChangePolicy: OnRootMismatch
              runAsGroup: 1001
              runAsNonRoot: true
              runAsUser: 1001
            servers: 1
            size: 256Mi
            volumesPerServer: 4
      monitoring:
        enabled: true
      postgresql:
        persistence:
          size: 256Mi
      resources:
        limits: {}
        requests:
          cpu: 100m
          memory: 128Mi
  mattermostOperator:
    enabled: false
  metricsServer:
    enabled: false
    values:
      bbtests:
        enabled: true
      upstream:
        replicas: 1
  mimir:
    console:
      localVolumeUpgrade: true
      persistence:
        size: 5Gi
    enabled: false
    imagePullSecrets:
    - name: private-registry
    minioObjectStorage:
      enabled: true
    networkPolicies:
      enabled: true
    values:
      bbtests:
        cypress:
          artifacts: true
          envs:
            cypress_grafana_url: https://grafana.dev.bigbang.mil
        enabled: true
        scripts:
          envs:
            MIMIR_URL: http://mimir-mimir-distributor.mimir.svc:8080
      istio:
        hardened:
          customServiceEntries:
          - enabled: true
            name: cypress-service-entries-mimir
            spec:
              hosts:
              - registry.npmjs.org
              - download.cypress.io
              - cdn.cypress.io
              - repo1.dso.mil
              - grafana.dev.bigbang.mil
              - optimizationguide-pa.googleapis.com
              - clientservices.googleapis.com
              - accounts.google.com
              - redirector.gvt1.com
              - content-autofill.googleapis.com
              - safebrowsing.googleapis.com
              location: MESH_EXTERNAL
              ports:
              - name: https
                number: 443
                protocol: TLS
              resolution: DNS
      mimir-distributed:
        mimir:
          structuredConfig:
            limits:
              max_global_series_per_user: 0
  minio:
    enabled: false
    values:
      bbtests:
        cypress:
          envs:
            cypress_url: https://minio.dev.bigbang.mil/login
        enabled: true
        scripts:
          envs:
            MINIO_HOST: https://minio-api.dev.bigbang.mil
            MINIO_PORT: ""
      istio:
        hardened:
          customAuthorizationPolicies:
          - enabled: true
            name: allow-intranamespace-minio
            spec:
              action: ALLOW
              rules:
              - from:
                - source:
                    namespaces:
                    - minio
                    - minio-operator
          customServiceEntries:
          - enabled: true
            name: cypress-service-entries-minio
            spec:
              exportTo:
              - .
              hosts:
              - registry.npmjs.org
              - download.cypress.io
              - cdn.cypress.io
              - repo1.dso.mil
              - minio.dev.bigbang.mil
              - minio-api.dev.bigbang.mil
              location: MESH_EXTERNAL
              ports:
              - name: https
                number: 443
                protocol: TLS
              resolution: DNS
      tenant:
        pools:
        - containerSecurityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
          labels:
            app: minio
            app.kubernetes.io/name: minio
          name: pool-0
          resources:
            limits:
              cpu: 250m
              memory: 2Gi
            requests:
              cpu: 250m
              memory: 2Gi
          securityContext:
            fsGroup: 1001
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
          servers: 3
          size: 256Mi
          volumesPerServer: 4
  minioOperator:
    enabled: true
    values:
      bbtests:
        enabled: true
      console:
        enabled: true
      istio:
        console:
          enabled: false
        hardened:
          customAuthorizationPolicies:
          - enabled: true
            name: allow-intranamespace-minio-operator
            spec:
              action: ALLOW
              rules:
              - from:
                - source:
                    namespaces:
                    - minio-operator
          customServiceEntries:
          - enabled: true
            name: cypress-service-entries-minio-operator
            spec:
              exportTo:
              - .
              hosts:
              - registry.npmjs.org
              - download.cypress.io
              - cdn.cypress.io
              - repo1.dso.mil
              - minio-operator.dev.bigbang.mil
              location: MESH_EXTERNAL
              ports:
              - name: https
                number: 443
                protocol: TLS
              resolution: DNS
  nexusRepositoryManager:
    enabled: false
    license_key: enter-single-line-base64-encoded-string-here
    sso:
      enabled: true
      idp_data:
        email: email
        entityId: https://nexus.dev.bigbang.mil/service/rest/v1/security/saml/metadata
        firstName: firstName
        groups: groups
        lastName: lastName
        username: username
      role:
      - description: unprivilaged users
        id: Nexus
        name: Keycloak Nexus Group
        privileges: []
        roles: []
      - description: keycloak users as admins
        id: Nexus-Admin
        name: Keycloak Nexus Admin Group
        privileges:
        - nx-all
        roles:
        - nx-admin
    values:
      bbtests:
        cypress:
          envs:
            cypress_nexus_url: https://nexus.dev.bigbang.mil
        enabled: true
        scripts:
          envs:
            docker_host: containers.dev.bigbang.mil
            docker_host_tls_enabled: "true"
      istio:
        hardened:
          customServiceEntries:
          - enabled: true
            name: cypress-service-entries-nexus
            spec:
              exportTo:
              - .
              hosts:
              - registry.npmjs.org
              - download.cypress.io
              - cdn.cypress.io
              - repo1.dso.mil
              - registry1.dso.mil
              - ib-prod-harbor-storage.s3.us-gov-west-1.amazonaws.com
              - ib-prod-harbor-storage.s3.us-gov-east-1.amazonaws.com
              - nexus.dev.bigbang.mil
              - containers.dev.bigbang.mil
              location: MESH_EXTERNAL
              ports:
              - name: https
                number: 443
                protocol: TLS
              resolution: DNS
      nexus:
        docker:
          enabled: true
          registries:
          - host: containers.dev.bigbang.mil
            port: 5000
        env:
        - name: INSTALL4J_ADD_VM_PARAMS
          value: -Dcom.redhat.fips=false -Xms1024M -Xmx1024M -XX:MaxDirectMemorySize=1024M
            -XX:+UnlockExperimentalVMOptions -XX:+UseContainerSupport -Djava.util.prefs.userRoot=/nexus-data/javaprefs
            -Dkaraf.data=/nexus-data
        - name: NEXUS_SECURITY_RANDOMPASSWORD
          value: "true"
        repository:
          enabled: true
          repo:
          - format: docker
            name: containers
            repo_data:
              cleanup:
                policyNames:
                - string
              component:
                proprietaryComponents: true
              docker:
                forceBasicAuth: true
                httpPort: 5000
                v1Enabled: false
              name: containers
              online: true
              storage:
                blobStoreName: default
                strictContentTypeValidation: true
                writePolicy: allow_once
            type: hosted
        resources:
          requests:
            cpu: 100m
            memory: 1500Mi
      persistence:
        storageSize: 5Gi
  sonarqube:
    enabled: false
    sso:
      client_id: platform1_a8604cc9-f5e9-4656-802d-d05624370245_bb8-saml-sonarqube
      email: email
      enabled: true
      login: login
      name: name
    values:
      bbtests:
        cypress:
          envs:
            cypress_url: https://sonarqube.dev.bigbang.mil
            cypress_url_setup: https://sonarqube.dev.bigbang.mil/setup
        enabled: true
      istio:
        hardened:
          customAuthorizationPolicies:
          - enabled: true
            name: allow-intranamespace-sonarqube
            spec:
              action: ALLOW
              rules:
              - from:
                - source:
                    namespaces:
                    - sonarqube
          customServiceEntries:
          - enabled: true
            name: sonarqube-allow-cypress-tests
            spec:
              hosts:
              - registry.npmjs.org
              - download.cypress.io
              - cdn.cypress.io
              - repo1.dso.mil
              - sonarqube.dev.bigbang.mil
              location: MESH_EXTERNAL
              ports:
              - name: https
                number: 443
                protocol: TLS
              resolution: DNS
      upstream:
        account:
          adminPassword: New_admin_password!2
          currentAdminPassword: admin
        curlContainerImage: registry1.dso.mil/ironbank/big-bang/base:2.1.0
        persistence:
          size: 5Gi
        postgresql:
          persistence:
            size: 256Mi
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
        setAdminPassword:
          currentPassword: admin
          newPassword: New_admin_password!2
  thanos:
    enabled: false
    sso:
      client_id: platform1_a8604cc9-f5e9-4656-802d-d05624370245_bb8-thanos
      enabled: true
    values:
      bbtests:
        cypress:
          envs:
            cypress_objstorage_integration_enabled: "true"
            cypress_prometheus_integration_enabled: "true"
            cypress_url: https://thanos.dev.bigbang.mil
        enabled: true
        scripts:
          envs:
            THANOS_REGISTRY: thanos.dev.bigbang.mil
          image: registry1.dso.mil/bigbang-ci/gitlab-tester:0.0.4
      compactor:
        enabled: true
        retentionResolution1h: 30d
        retentionResolution5m: 30d
        retentionResolutionRaw: 30d
      istio:
        hardened:
          customAuthorizationPolicies:
          - enabled: true
            name: allow-intranamespace-thanos
            spec:
              action: ALLOW
              rules:
              - from:
                - source:
                    namespaces:
                    - thanos
                    - monitoring
          customServiceEntries:
          - enabled: true
            name: cypress-service-entries-thanos
            spec:
              hosts:
              - registry.npmjs.org
              - download.cypress.io
              - cdn.cypress.io
              - repo1.dso.mil
              - thanos.dev.bigbang.mil
              - grafana.dev.bigbang.mil
              location: MESH_EXTERNAL
              ports:
              - name: https
                number: 443
                protocol: TLS
              resolution: DNS
      minio:
        enabled: true
        tenant:
          pools:
          - containerSecurityContext:
              capabilities:
                drop:
                - ALL
              runAsGroup: 1001
              runAsNonRoot: true
              runAsUser: 1001
            labels:
              app: minio
              app.kubernetes.io/name: minio
            name: pool-0
            resources:
              limits:
                cpu: 250m
                memory: 2Gi
              requests:
                cpu: 250m
                memory: 2Gi
            securityContext:
              fsGroup: 1001
              runAsGroup: 1001
              runAsNonRoot: true
              runAsUser: 1001
            servers: 1
            size: 256Mi
            volumesPerServer: 4
      objstoreConfig: |-
        type: s3
        config:
          bucket: "thanos"
          endpoint: minio.thanos.svc.cluster.local:80
          access_key: "minio"
          secret_key: "minio123"
          insecure: true
          trace:
            enable: true
      storegateway:
        enabled: true
  vault:
    enabled: false
    ingress:
      cert: |
        -----BEGIN CERTIFICATE-----
        MIIFIjCCBAqgAwIBAgISBXVA50uT+ZS8HXGKDYrB+z72MA0GCSqGSIb3DQEBCwUA
        MDMxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MQwwCgYDVQQD
        EwNSMTAwHhcNMjUwNDI5MTIzMDU1WhcNMjUwNzI4MTIzMDU0WjAcMRowGAYDVQQD
        DBEqLmRldi5iaWdiYW5nLm1pbDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC
        ggEBAL5wM0PwAjTSvRaiszu8ttJVGwGXbr5xhBADFAISgbdQjKJiiXgzo9kS89Sb
        2huIzRnr8D0lttSoRfaaKCk5P387zWr6gOvS3nyk7GRyqIf85AJDlqjDdkuFIj/j
        GJomE8d1+smRaNMSFc3404WqaIzS5cLE5rWxa5/zp+/Kxu01CdRy3MEi0GN6L0T7
        nBbZH8QGmSW+CDBCuihI8+6009Pfrmo3B8wbes3afdXHMaFCgC67uUOPXfhT0lox
        UX2+iqITiD6RLTIlsmMZprpNIOZORT9jjLzKncdt8N7S754N7zx5uMagGhktIzR0
        QQ7oYUvYBT0kcWxSbRGPFaCtO1ECAwEAAaOCAkUwggJBMA4GA1UdDwEB/wQEAwIF
        oDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAd
        BgNVHQ4EFgQU59l/H9uVbCdhsKrH28HVh3JrxCUwHwYDVR0jBBgwFoAUu7zDR6Xk
        vKnGw6RyDBCNojXhyOgwVwYIKwYBBQUHAQEESzBJMCIGCCsGAQUFBzABhhZodHRw
        Oi8vcjEwLm8ubGVuY3Iub3JnMCMGCCsGAQUFBzAChhdodHRwOi8vcjEwLmkubGVu
        Y3Iub3JnLzAcBgNVHREEFTATghEqLmRldi5iaWdiYW5nLm1pbDATBgNVHSAEDDAK
        MAgGBmeBDAECATAvBgNVHR8EKDAmMCSgIqAghh5odHRwOi8vcjEwLmMubGVuY3Iu
        b3JnLzExOS5jcmwwggEDBgorBgEEAdZ5AgQCBIH0BIHxAO8AdgCkQsUGSWBhVI8P
        1Oqc+3otJkVNh6l/L99FWfYnTzqEVAAAAZaBvPBAAAAEAwBHMEUCIEGTl6vbwZLY
        IWCd/HFB7DoMw1yURte+488pF69S9FoiAiEAtynidSM0Xw/9RPeTlmqeZoAkCL4s
        NY+mqK01ItHaTYoAdQDd3Mo0ldfhFgXnlTL6x5/4PRxQ39sAOhQSdgosrLvIKgAA
        AZaBvPCIAAAEAwBGMEQCIBMYtcuNVglI4k3SPjeuPqeeECUrhi89RLViYizylh9X
        AiAUghafqmfwWxg7kG/cBQSm9PWs9II8HG2Q6dfWzo84rzANBgkqhkiG9w0BAQsF
        AAOCAQEAMxxGUgiSyvsDNrYvr5CRH6ygYmHT2GBWl6MuVl5/uXMKIEJtB27zIoD2
        iNpU73s6QANLgFZCfuyjSQsxlXgj57EdCxtZNgvoEuHkvPLBzfJPrY4kbVXatwHD
        XzpBIbDdfRbL0Pef/tgvo4xzwSCkGUnfQhZG0YT76kfU402IuyHWVp1lmaqKhzI3
        TpKeHk8CezDcfu2awZz2abe2D/dCaTk3dREBuA7C4VTyCNrwrYS/JicZ5LqzxGcs
        1uUmhlVoGYV5t+oUPtPrGxTIJdjjyS3g1LH/KHNi+mZ7PKUVuHkVAIDdcei0rb7a
        oDXewxj0kIgAKidPtqkuekUoKdLxDw==
        -----END CERTIFICATE-----
        -----BEGIN CERTIFICATE-----
        MIIFBTCCAu2gAwIBAgIQS6hSk/eaL6JzBkuoBI110DANBgkqhkiG9w0BAQsFADBP
        MQswCQYDVQQGEwJVUzEpMCcGA1UEChMgSW50ZXJuZXQgU2VjdXJpdHkgUmVzZWFy
        Y2ggR3JvdXAxFTATBgNVBAMTDElTUkcgUm9vdCBYMTAeFw0yNDAzMTMwMDAwMDBa
        Fw0yNzAzMTIyMzU5NTlaMDMxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBF
        bmNyeXB0MQwwCgYDVQQDEwNSMTAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
        AoIBAQDPV+XmxFQS7bRH/sknWHZGUCiMHT6I3wWd1bUYKb3dtVq/+vbOo76vACFL
        YlpaPAEvxVgD9on/jhFD68G14BQHlo9vH9fnuoE5CXVlt8KvGFs3Jijno/QHK20a
        /6tYvJWuQP/py1fEtVt/eA0YYbwX51TGu0mRzW4Y0YCF7qZlNrx06rxQTOr8IfM4
        FpOUurDTazgGzRYSespSdcitdrLCnF2YRVxvYXvGLe48E1KGAdlX5jgc3421H5KR
        mudKHMxFqHJV8LDmowfs/acbZp4/SItxhHFYyTr6717yW0QrPHTnj7JHwQdqzZq3
        DZb3EoEmUVQK7GH29/Xi8orIlQ2NAgMBAAGjgfgwgfUwDgYDVR0PAQH/BAQDAgGG
        MB0GA1UdJQQWMBQGCCsGAQUFBwMCBggrBgEFBQcDATASBgNVHRMBAf8ECDAGAQH/
        AgEAMB0GA1UdDgQWBBS7vMNHpeS8qcbDpHIMEI2iNeHI6DAfBgNVHSMEGDAWgBR5
        tFnme7bl5AFzgAiIyBpY9umbbjAyBggrBgEFBQcBAQQmMCQwIgYIKwYBBQUHMAKG
        Fmh0dHA6Ly94MS5pLmxlbmNyLm9yZy8wEwYDVR0gBAwwCjAIBgZngQwBAgEwJwYD
        VR0fBCAwHjAcoBqgGIYWaHR0cDovL3gxLmMubGVuY3Iub3JnLzANBgkqhkiG9w0B
        AQsFAAOCAgEAkrHnQTfreZ2B5s3iJeE6IOmQRJWjgVzPw139vaBw1bGWKCIL0vIo
        zwzn1OZDjCQiHcFCktEJr59L9MhwTyAWsVrdAfYf+B9haxQnsHKNY67u4s5Lzzfd
        u6PUzeetUK29v+PsPmI2cJkxp+iN3epi4hKu9ZzUPSwMqtCceb7qPVxEbpYxY1p9
        1n5PJKBLBX9eb9LU6l8zSxPWV7bK3lG4XaMJgnT9x3ies7msFtpKK5bDtotij/l0
        GaKeA97pb5uwD9KgWvaFXMIEt8jVTjLEvwRdvCn294GPDF08U8lAkIv7tghluaQh
        1QnlE4SEN4LOECj8dsIGJXpGUk3aU3KkJz9icKy+aUgA+2cP21uh6NcDIS3XyfaZ
        QjmDQ993ChII8SXWupQZVBiIpcWO4RqZk3lr7Bz5MUCwzDIA359e57SSq5CCkY0N
        4B6Vulk7LktfwrdGNVI5BsC9qqxSwSKgRJeZ9wygIaehbHFHFhcBaMDKpiZlBHyz
        rsnnlFXCb5s8HKn5LsUgGvB24L7sGNZP2CX7dhHov+YhD+jozLW2p9W4959Bz2Ei
        RmqDtmiXLnzqTpXbI+suyCsohKRg6Un0RC47+cpiVwHiXZAW+cn8eiNIjqbVgXLx
        KPpdzvvtTnOPlC7SQZSYmdunr3Bf9b77AiC/ZidstK36dRILKz7OA54=
        -----END CERTIFICATE-----
      gateway: passthrough
      key: |
        -----BEGIN PRIVATE KEY-----
        MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQC+cDND8AI00r0W
        orM7vLbSVRsBl26+cYQQAxQCEoG3UIyiYol4M6PZEvPUm9obiM0Z6/A9JbbUqEX2
        migpOT9/O81q+oDr0t58pOxkcqiH/OQCQ5aow3ZLhSI/4xiaJhPHdfrJkWjTEhXN
        +NOFqmiM0uXCxOa1sWuf86fvysbtNQnUctzBItBjei9E+5wW2R/EBpklvggwQroo
        SPPutNPT365qNwfMG3rN2n3VxzGhQoAuu7lDj134U9JaMVF9voqiE4g+kS0yJbJj
        Gaa6TSDmTkU/Y4y8yp3HbfDe0u+eDe88ebjGoBoZLSM0dEEO6GFL2AU9JHFsUm0R
        jxWgrTtRAgMBAAECggEAH719neYjyAATyfEGJH+4jOfoX2SI7a7nzu9kZ1AEVLRV
        LD92IBWjSmvRPe9X89ziKl7bpKVjiqAdQRPCe9Rx09f4zcrAsA1uTaIDUF6X3kp1
        CjePpcMmNUIUSkekcxTDmSv9x5i3uu45uiGtx4p2cHo6FzNQLJpMkNVAeUP30dMK
        LXIum4Iuqvlar0nSAcB0WhJkImPCBzOQhivQLppvCgxIOFei6U4d0NUpgnFfBerF
        2KtEXT6wjo3JnchPsDrh9Dm6d6bHlYk0f00zoVszNDqS83NSVexe3UT2u8LK1/FH
        iIXFuVa/lsueFhwVIeBSf2sKaHW5fZFkzFOapOm0zQKBgQD2NACFnXZdcFltXnos
        XFBZmiXCtZyrk8eDBw09FnelhsOPSpOjRJWHYgRhgsXlALwDr8vNrh2GLntJNT//
        f3CIxYjfVQ2GoXYx2/T7gr0mNNkwD9qkxjOGF9ugcKe1mEaH+UcPlA8FOsQQVkSZ
        MVfDRFmx/2Z8wWhLB8OtkUMldwKBgQDGBCNnb2cebtmogNkzRZLrdm3IGY6vQBRh
        lHzKN5a9vxlNiYdtOc5kIULTa/HR88EPdSNQ+5S4tKCij1LsZ9nBqmT1DKPk5k4Z
        FulaFtlAwlZIWPzyVwoaD7aYIUKsNnpJAp9U3o7nUYDvZBmYle5zDWMMf0ql3cZu
        HuDUEXf3dwKBgGhgU3hR8URbxQ3g59q2qDnUZ/3MEMeMtyCNdMdZJxA9udqdu0mU
        YfArVcAhONSFIzBM7xIbptikDBBVSvR+iq7xT72eyUUyXnF01r9qBdaUwR7nGcKR
        ZHaM1seF+xO5ou0yeTXZhySobUafzCVGDfbymzQjGsf5FsX4XLTQyK6xAoGAbePK
        ChMG9RqrbBnlb9DCki2tCwkz6An1xZl0D3z+CNtOnXsfTvxvj53tygrzroJJt9xX
        9w9HH6IOK2jCqjOP4yw+zsdvBQ7SdJYEdlyLwKaY35mS9qJbFs91k8ORjqTFBFOS
        PLUuNS1EEpZIpic+p1bciwjxUk9bWa2FM+tl2k0CgYAuCZq77/kHSap1DtfA/5nc
        ++f+X3EO76jiPyiXxUmpl6+HIWXjJzHf5h7kwZAUiZRPhmsh89LmWK+s9zu+JyP3
        DxMtMWp5wKLmJ8WQMRv/+Vok1o20a7ZHXD/pjHR9Z1ctdWxZQudalFMZsP35c5ao
        cXeTLsophS/XZApYTmlaMA==
        -----END PRIVATE KEY-----
    sso:
      client_id: dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_vault
      enabled: false
    values:
      bbtests:
        cypress:
          envs:
            cypress_vault_url: https://vault.dev.bigbang.mil
        enabled: true
      global:
        tlsDisable: false
      injector:
        affinity: |
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchLabels:
                      app.kubernetes.io/name: {{ template "vault.name" . }}-agent-injector
                      app.kubernetes.io/instance: "{{ .Release.Name }}"
                      component: webhook
                  topologyKey: kubernetes.io/hostname
      istio:
        hardened:
          customAuthorizationPolicies:
          - enabled: true
            name: allow-egress-instance-metadata
            spec:
              action: ALLOW
              rules:
              - from:
                - source:
                    ipBlocks:
                    - 169.254.169.254/32
      server:
        auditStorage:
          size: 256Mi
        dataStorage:
          size: 256Mi
        extraEnvironmentVars:
          VAULT_LOG_FORMAT: json
          VAULT_SKIP_VERIFY: "true"
        ha:
          apiAddr: https://vault.dev.bigbang.mil
          config: |
            ui = true

            listener "tcp" {
              tls_disable = false
              address = "[::]:8200"
              cluster_address = "[::]:8201"
              tls_cert_file = "/vault/tls/tls.crt"
              tls_key_file  = "/vault/tls/tls.key"
              telemetry {
                unauthenticated_metrics_access = true
              }
            }

            seal "awskms" {
              region     = "us-gov-west-1"
              kms_key_id = "mrk-ff723da024254ea2b7f490c68fbc9b9b"
              endpoint   = "https://kms.us-gov-west-1.amazonaws.com"
            }

            telemetry {
              prometheus_retention_time = "24h"
              disable_hostname = true
            }
            service_registration "kubernetes" {}
          enabled: true
          raft:
            config: |
              ui = true

              listener "tcp" {
                tls_disable = false
                address = "[::]:8200"
                cluster_address = "[::]:8201"
                tls_cert_file = "/vault/tls/tls.crt"
                tls_key_file  = "/vault/tls/tls.key"
                telemetry {
                  unauthenticated_metrics_access = true
                }
              }

              storage "raft" {
                path = "/vault/data"

                retry_join {
                  leader_api_addr = "https://vault-vault-0.vault-vault-internal:8200"
                  leader_client_cert_file = "/vault/tls/tls.crt"
                  leader_client_key_file = "/vault/tls/tls.key"
                  leader_tls_servername = "vault.dev.bigbang.mil"
                }
              }

              service_registration "kubernetes" {}
          replicas: 1
  velero:
    enabled: false
    plugins:
    - aws
    values:
      bbtests:
        enabled: true
        scripts:
          envs:
            MINIO_HOST: https://minio-api.dev.bigbang.mil
      cleanUpCRDs: true
      configuration:
        backupStorageLocation:
        - bucket: velero
          config:
            region: velero
            s3ForcePathStyle: "true"
            s3Url: https://minio-api.dev.bigbang.mil
          default: true
          provider: aws
        volumeSnapshotLocation:
        - config:
            region: velero
          name: default
          provider: aws
      credentials:
        secretContents:
          cloud: |
            [default]
            aws_access_key_id = minio
            aws_secret_access_key = minio123
      istio:
        hardened:
          customServiceEntries:
          - enabled: true
            name: cypress-service-entries-velero
            spec:
              exportTo:
              - .
              hosts:
              - registry.npmjs.org
              - download.cypress.io
              - cdn.cypress.io
              - repo1.dso.mil
              location: MESH_EXTERNAL
              ports:
              - name: https
                number: 443
                protocol: TLS
              resolution: DNS
      serviceAccount:
        server:
          name: velero
alloy:
  alloyLogs:
    enabled: true
  enabled: true
  values:
    k8s-monitoring:
      alloy-logs:
        enabled: true
      destinations:
      - name: loki
        type: loki
        url: http://logging-loki-write.logging.svc.cluster.local:3100/loki/api/v1/push
      podLogs:
        collector: alloy-logs
        destinations:
        - loki
        enabled: true
bbctl:
  enabled: true
  values:
    bbtests:
      cypress:
        artifacts: true
        envs:
          cypress_grafana_password: prom-operator
          cypress_grafana_url: https://grafana.dev.bigbang.mil
          cypress_grafana_username: admin
      enabled: true
    istio:
      hardened:
        customAuthorizationPolicies:
        - enabled: true
          name: allow-intranamespace-bctl
          spec:
            action: ALLOW
            rules:
            - from:
              - source:
                  namespaces:
                  - loki
                  - grafana
                  - promtail
                  - monitoring
        customServiceEntries:
        - enabled: true
          name: cypress-service-entries-bbctl
          spec:
            hosts:
            - registry.npmjs.org
            - download.cypress.io
            - cdn.cypress.io
            - repo1.dso.mil
            - grafana.dev.bigbang.mil
            location: MESH_EXTERNAL
            ports:
            - name: https
              number: 443
              protocol: TLS
            resolution: DNS
disableAutomaticPassthroughValues: true
domain: dev.bigbang.mil
eckOperator:
  enabled: false
  values:
    istio:
      hardened:
        customServiceEntries:
        - enabled: true
          name: cypress-service-entries-eckoperator
          spec:
            hosts:
            - registry.npmjs.org
            - download.cypress.io
            - cdn.cypress.io
            - repo1.dso.mil
            location: MESH_EXTERNAL
            ports:
            - name: https
              number: 443
              protocol: TLS
            resolution: DNS
elasticsearchKibana:
  enabled: false
  license:
    trial: true
  sso:
    client_id: platform1_a8604cc9-f5e9-4656-802d-d05624370245_bb8-kibana
    enabled: true
  values:
    bbtests:
      cypress:
        envs:
          cypress_kibana_url: https://kibana.dev.bigbang.mil
        resources:
          limits:
            cpu: "2"
            memory: 4Gi
          requests:
            cpu: "2"
            memory: 4Gi
      enabled: true
    elasticsearch:
      data:
        count: 2
        heap:
          max: 1g
          min: 1g
        persistence:
          size: 256Mi
        resources:
          limits: {}
          requests:
            cpu: 0.5
      master:
        count: 1
        heap:
          max: 1g
          min: 1g
        persistence:
          size: 256Mi
        resources:
          limits: {}
          requests:
            cpu: 0.5
    istio:
      hardened:
        customServiceEntries:
        - enabled: true
          name: cypress-service-entries-elasticsearchkibana
          spec:
            hosts:
            - kibana.dev.bigbang.mil
            location: MESH_EXTERNAL
            ports:
            - name: https
              number: 443
              protocol: TLS
            resolution: DNS
    kibana:
      count: 1
fluentbit:
  enabled: false
  values:
    bbtests:
      enabled: true
    istio:
      hardened:
        customServiceEntries:
        - enabled: true
          name: cypress-service-entries-fluentbit
          spec:
            hosts:
            - registry.npmjs.org
            - download.cypress.io
            - cdn.cypress.io
            - repo1.dso.mil
            location: MESH_EXTERNAL
            ports:
            - name: https
              number: 443
              protocol: TLS
    upstream:
      securityContext:
        privileged: true
flux:
  driftDetection:
    mode: disabled
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
  upgrade:
    cleanupOnFail: false
gatekeeper:
  enabled: false
  values:
    controllerManager:
      resources:
        limits: {}
        requests:
          cpu: 100m
          memory: 256Mi
    replicas: 1
    violations:
      allowedCapabilities:
        parameters:
          excludedResources:
          - istio-system/lb-port-.*
          - default/c.?
          - default/i.?
      allowedDockerRegistries:
        parameters:
          excludedResources:
          - istio-system/lb-port-.*
          - argocd/guestbook-ui
          - default/c.?
          - default/i.?
          - gitlab/.*
      allowedHostFilesystem:
        parameters:
          excludedResources:
          - anchore/anchore-cypress-test
          - argocd/argocd-cypress-test
          - backstage/backstage-cypress-test
          - bbctl/bbctl-cypress-test
          - cluster-auditor/cluster-auditor-cypress-test
          - fortify/fortify-cypress-test
          - fortify/fortify-ssc-cypress-test
          - gitlab/gitlab-cypress-test
          - gitlab/gitlab-runner-cypress-test
          - gitlab-runner/gitlab-runner-cypress-test
          - harbor/harbor-cypress-test
          - keycloak/keycloak-cypress-test
          - kiali/kiali-cypress-test
          - kyverno-reporter/kyverno-reporter-cypress-test
          - logging/elasticsearch-kibana-cypress-test
          - logging/loki-cypress-test
          - mattermost/mattermost-cypress-test
          - minio/minio-instance-cypress-test
          - minio-operator/minio-operator-cypress-test
          - monitoring/grafana-cypress-test
          - monitoring/monitoring-cypress-test
          - neuvector/neuvector-cypress-test
          - nexus-repository-manager/nexus-repository-manager-cypress-test
          - sonarqube/sonarqube-cypress-test
          - tempo/tempo-cypress-test
          - thanos/thanos-cypress-test
          - twistlock/twistlock-cypress-test
          - vault/vault-cypress-test
          - mimir/mimir-cypress-test
          - headlamp/headlamp-cypress-test
          - default/restrict-host-path-mount-.?
          - default/restrict-host-path-write-.?
          - default/restrict-volume-types-.?
      allowedIPs:
        parameters:
          excludedResources:
          - default/restrict-external-ips-.?
      allowedSecCompProfiles:
        parameters:
          excludedResources:
          - istio-system/lb-port-.*
          - default/c.?
          - default/i.?
      allowedUsers:
        parameters:
          excludedResources:
          - istio-system/lb-port-.*
          - default/c.?
          - default/i.?
      bannedImageTags:
        parameters:
          excludedResources:
          - default/c.?
          - default/i.?
          - default/not-me
      containerRatio:
        parameters:
          excludedResources:
          - istio-system/lb-port-.*
      hostNetworking:
        parameters:
          excludedResources:
          - istio-system/lb-port-.*
          - default/disallow-host-namespaces-.?
          - default/c.?
          - default/i.?
      noBigContainers:
        parameters:
          excludedResources:
          - istio-system/lb-port-.*
      noHostNamespace:
        parameters:
          excludedResources:
          - default/disallow-host-namespaces-.?
      noPrivilegedContainers:
        parameters:
          excludedResources:
          - default/c.?
          - default/i.?
      noPrivilegedEscalation:
        parameters:
          excludedResources:
          - istio-system/lb-port-.*
          - default/c.?
          - default/i.?
      noSysctls:
        parameters:
          excludedResources:
          - default/restrict-sysctls-.?
      readOnlyRoot:
        parameters:
          excludedResources:
          - istio-system/lb-port-.*
          - default/c.?
          - default/i.?
      requiredLabels:
        parameters:
          excludedResources:
          - istio-system/svclb-.*
          - default/require-labels-.?
      requiredProbes:
        parameters:
          excludedResources:
          - istio-system/lb-port-.*
          - default/c.?
          - default/i.?
      restrictedTaint:
        parameters:
          excludedResources:
          - default/disallow-tolerations-.?
      selinuxPolicy:
        parameters:
          excludedResources:
          - default/c.?
          - default/i.?
          - default/disallow-selinux-options-.?
          - default/restrict-selinux-type-.?
          - default/not-me
      volumeTypes:
        parameters:
          excludedResources:
          - anchore/anchore-cypress-test
          - argocd/argocd-cypress-test
          - backstage/backstage-cypress-test
          - bbctl/bbctl-cypress-test
          - cluster-auditor/cluster-auditor-cypress-test
          - fortify/fortify-ssc-cypress-test
          - gitlab/gitlab-cypress-test
          - gitlab/gitlab-runner-cypress-test
          - gitlab-runner/gitlab-runner-cypress-test
          - harbor/harbor-cypress-test
          - keycloak/keycloak-cypress-test
          - kiali/kiali-cypress-test
          - kyverno-reporter/kyverno-reporter-cypress-test
          - logging/elasticsearch-kibana-cypress-test
          - logging/loki-cypress-test
          - mattermost/mattermost-cypress-test
          - minio/minio-instance-cypress-test
          - minio-operator/minio-operator-cypress-test
          - monitoring/grafana-cypress-test
          - monitoring/monitoring-cypress-test
          - neuvector/neuvector-cypress-test
          - nexus-repository-manager/nexus-repository-manager-cypress-test
          - sonarqube/sonarqube-cypress-test
          - tempo/tempo-cypress-test
          - thanos/thanos-cypress-test
          - twistlock/twistlock-cypress-test
          - vault/vault-cypress-test
          - mimir/mimir-cypress-test
          - headlamp/headlamp-cypress-test
          - default/restrict-host-path-mount-.?
          - default/restrict-host-path-write-.?
          - default/restrict-volume-types-.?
grafana:
  sso:
    enabled: true
    grafana:
      client_id: platform1_a8604cc9-f5e9-4656-802d-d05624370245_bb8-grafana
      scopes: openid Grafana
  values:
    bbtests:
      cypress:
        envs:
          cypress_grafana_url: https://grafana.dev.bigbang.mil
      enabled: true
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
        - disableDeletion: false
          editable: true
          folder: ""
          name: default
          options:
            path: /var/lib/grafana/dashboards
          orgId: 1
          type: file
    dashboards:
      default:
        k8s-deployment:
          datasource: Prometheus
          gnetId: 741
          revision: 1
    istio:
      enabled: true
      hardened:
        customServiceEntries:
        - enabled: true
          name: cypress-service-entries-grafana
          spec:
            hosts:
            - registry.npmjs.org
            - download.cypress.io
            - cdn.cypress.io
            - repo1.dso.mil
            - grafana.dev.bigbang.mil
            location: MESH_EXTERNAL
            ports:
            - name: https
              number: 443
              protocol: TLS
            resolution: DNS
istioCRDs:
  enabled: true
istioGateway:
  enabled: true
  values:
    gateways:
      public:
        gatewayCerts:
        - name: public-cert
          tls:
            cert: |
              -----BEGIN CERTIFICATE-----
              MIIFIjCCBAqgAwIBAgISBXVA50uT+ZS8HXGKDYrB+z72MA0GCSqGSIb3DQEBCwUA
              MDMxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MQwwCgYDVQQD
              EwNSMTAwHhcNMjUwNDI5MTIzMDU1WhcNMjUwNzI4MTIzMDU0WjAcMRowGAYDVQQD
              DBEqLmRldi5iaWdiYW5nLm1pbDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC
              ggEBAL5wM0PwAjTSvRaiszu8ttJVGwGXbr5xhBADFAISgbdQjKJiiXgzo9kS89Sb
              2huIzRnr8D0lttSoRfaaKCk5P387zWr6gOvS3nyk7GRyqIf85AJDlqjDdkuFIj/j
              GJomE8d1+smRaNMSFc3404WqaIzS5cLE5rWxa5/zp+/Kxu01CdRy3MEi0GN6L0T7
              nBbZH8QGmSW+CDBCuihI8+6009Pfrmo3B8wbes3afdXHMaFCgC67uUOPXfhT0lox
              UX2+iqITiD6RLTIlsmMZprpNIOZORT9jjLzKncdt8N7S754N7zx5uMagGhktIzR0
              QQ7oYUvYBT0kcWxSbRGPFaCtO1ECAwEAAaOCAkUwggJBMA4GA1UdDwEB/wQEAwIF
              oDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAd
              BgNVHQ4EFgQU59l/H9uVbCdhsKrH28HVh3JrxCUwHwYDVR0jBBgwFoAUu7zDR6Xk
              vKnGw6RyDBCNojXhyOgwVwYIKwYBBQUHAQEESzBJMCIGCCsGAQUFBzABhhZodHRw
              Oi8vcjEwLm8ubGVuY3Iub3JnMCMGCCsGAQUFBzAChhdodHRwOi8vcjEwLmkubGVu
              Y3Iub3JnLzAcBgNVHREEFTATghEqLmRldi5iaWdiYW5nLm1pbDATBgNVHSAEDDAK
              MAgGBmeBDAECATAvBgNVHR8EKDAmMCSgIqAghh5odHRwOi8vcjEwLmMubGVuY3Iu
              b3JnLzExOS5jcmwwggEDBgorBgEEAdZ5AgQCBIH0BIHxAO8AdgCkQsUGSWBhVI8P
              1Oqc+3otJkVNh6l/L99FWfYnTzqEVAAAAZaBvPBAAAAEAwBHMEUCIEGTl6vbwZLY
              IWCd/HFB7DoMw1yURte+488pF69S9FoiAiEAtynidSM0Xw/9RPeTlmqeZoAkCL4s
              NY+mqK01ItHaTYoAdQDd3Mo0ldfhFgXnlTL6x5/4PRxQ39sAOhQSdgosrLvIKgAA
              AZaBvPCIAAAEAwBGMEQCIBMYtcuNVglI4k3SPjeuPqeeECUrhi89RLViYizylh9X
              AiAUghafqmfwWxg7kG/cBQSm9PWs9II8HG2Q6dfWzo84rzANBgkqhkiG9w0BAQsF
              AAOCAQEAMxxGUgiSyvsDNrYvr5CRH6ygYmHT2GBWl6MuVl5/uXMKIEJtB27zIoD2
              iNpU73s6QANLgFZCfuyjSQsxlXgj57EdCxtZNgvoEuHkvPLBzfJPrY4kbVXatwHD
              XzpBIbDdfRbL0Pef/tgvo4xzwSCkGUnfQhZG0YT76kfU402IuyHWVp1lmaqKhzI3
              TpKeHk8CezDcfu2awZz2abe2D/dCaTk3dREBuA7C4VTyCNrwrYS/JicZ5LqzxGcs
              1uUmhlVoGYV5t+oUPtPrGxTIJdjjyS3g1LH/KHNi+mZ7PKUVuHkVAIDdcei0rb7a
              oDXewxj0kIgAKidPtqkuekUoKdLxDw==
              -----END CERTIFICATE-----
              -----BEGIN CERTIFICATE-----
              MIIFBTCCAu2gAwIBAgIQS6hSk/eaL6JzBkuoBI110DANBgkqhkiG9w0BAQsFADBP
              MQswCQYDVQQGEwJVUzEpMCcGA1UEChMgSW50ZXJuZXQgU2VjdXJpdHkgUmVzZWFy
              Y2ggR3JvdXAxFTATBgNVBAMTDElTUkcgUm9vdCBYMTAeFw0yNDAzMTMwMDAwMDBa
              Fw0yNzAzMTIyMzU5NTlaMDMxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBF
              bmNyeXB0MQwwCgYDVQQDEwNSMTAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
              AoIBAQDPV+XmxFQS7bRH/sknWHZGUCiMHT6I3wWd1bUYKb3dtVq/+vbOo76vACFL
              YlpaPAEvxVgD9on/jhFD68G14BQHlo9vH9fnuoE5CXVlt8KvGFs3Jijno/QHK20a
              /6tYvJWuQP/py1fEtVt/eA0YYbwX51TGu0mRzW4Y0YCF7qZlNrx06rxQTOr8IfM4
              FpOUurDTazgGzRYSespSdcitdrLCnF2YRVxvYXvGLe48E1KGAdlX5jgc3421H5KR
              mudKHMxFqHJV8LDmowfs/acbZp4/SItxhHFYyTr6717yW0QrPHTnj7JHwQdqzZq3
              DZb3EoEmUVQK7GH29/Xi8orIlQ2NAgMBAAGjgfgwgfUwDgYDVR0PAQH/BAQDAgGG
              MB0GA1UdJQQWMBQGCCsGAQUFBwMCBggrBgEFBQcDATASBgNVHRMBAf8ECDAGAQH/
              AgEAMB0GA1UdDgQWBBS7vMNHpeS8qcbDpHIMEI2iNeHI6DAfBgNVHSMEGDAWgBR5
              tFnme7bl5AFzgAiIyBpY9umbbjAyBggrBgEFBQcBAQQmMCQwIgYIKwYBBQUHMAKG
              Fmh0dHA6Ly94MS5pLmxlbmNyLm9yZy8wEwYDVR0gBAwwCjAIBgZngQwBAgEwJwYD
              VR0fBCAwHjAcoBqgGIYWaHR0cDovL3gxLmMubGVuY3Iub3JnLzANBgkqhkiG9w0B
              AQsFAAOCAgEAkrHnQTfreZ2B5s3iJeE6IOmQRJWjgVzPw139vaBw1bGWKCIL0vIo
              zwzn1OZDjCQiHcFCktEJr59L9MhwTyAWsVrdAfYf+B9haxQnsHKNY67u4s5Lzzfd
              u6PUzeetUK29v+PsPmI2cJkxp+iN3epi4hKu9ZzUPSwMqtCceb7qPVxEbpYxY1p9
              1n5PJKBLBX9eb9LU6l8zSxPWV7bK3lG4XaMJgnT9x3ies7msFtpKK5bDtotij/l0
              GaKeA97pb5uwD9KgWvaFXMIEt8jVTjLEvwRdvCn294GPDF08U8lAkIv7tghluaQh
              1QnlE4SEN4LOECj8dsIGJXpGUk3aU3KkJz9icKy+aUgA+2cP21uh6NcDIS3XyfaZ
              QjmDQ993ChII8SXWupQZVBiIpcWO4RqZk3lr7Bz5MUCwzDIA359e57SSq5CCkY0N
              4B6Vulk7LktfwrdGNVI5BsC9qqxSwSKgRJeZ9wygIaehbHFHFhcBaMDKpiZlBHyz
              rsnnlFXCb5s8HKn5LsUgGvB24L7sGNZP2CX7dhHov+YhD+jozLW2p9W4959Bz2Ei
              RmqDtmiXLnzqTpXbI+suyCsohKRg6Un0RC47+cpiVwHiXZAW+cn8eiNIjqbVgXLx
              KPpdzvvtTnOPlC7SQZSYmdunr3Bf9b77AiC/ZidstK36dRILKz7OA54=
              -----END CERTIFICATE-----
            key: |
              -----BEGIN PRIVATE KEY-----
              MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQC+cDND8AI00r0W
              orM7vLbSVRsBl26+cYQQAxQCEoG3UIyiYol4M6PZEvPUm9obiM0Z6/A9JbbUqEX2
              migpOT9/O81q+oDr0t58pOxkcqiH/OQCQ5aow3ZLhSI/4xiaJhPHdfrJkWjTEhXN
              +NOFqmiM0uXCxOa1sWuf86fvysbtNQnUctzBItBjei9E+5wW2R/EBpklvggwQroo
              SPPutNPT365qNwfMG3rN2n3VxzGhQoAuu7lDj134U9JaMVF9voqiE4g+kS0yJbJj
              Gaa6TSDmTkU/Y4y8yp3HbfDe0u+eDe88ebjGoBoZLSM0dEEO6GFL2AU9JHFsUm0R
              jxWgrTtRAgMBAAECggEAH719neYjyAATyfEGJH+4jOfoX2SI7a7nzu9kZ1AEVLRV
              LD92IBWjSmvRPe9X89ziKl7bpKVjiqAdQRPCe9Rx09f4zcrAsA1uTaIDUF6X3kp1
              CjePpcMmNUIUSkekcxTDmSv9x5i3uu45uiGtx4p2cHo6FzNQLJpMkNVAeUP30dMK
              LXIum4Iuqvlar0nSAcB0WhJkImPCBzOQhivQLppvCgxIOFei6U4d0NUpgnFfBerF
              2KtEXT6wjo3JnchPsDrh9Dm6d6bHlYk0f00zoVszNDqS83NSVexe3UT2u8LK1/FH
              iIXFuVa/lsueFhwVIeBSf2sKaHW5fZFkzFOapOm0zQKBgQD2NACFnXZdcFltXnos
              XFBZmiXCtZyrk8eDBw09FnelhsOPSpOjRJWHYgRhgsXlALwDr8vNrh2GLntJNT//
              f3CIxYjfVQ2GoXYx2/T7gr0mNNkwD9qkxjOGF9ugcKe1mEaH+UcPlA8FOsQQVkSZ
              MVfDRFmx/2Z8wWhLB8OtkUMldwKBgQDGBCNnb2cebtmogNkzRZLrdm3IGY6vQBRh
              lHzKN5a9vxlNiYdtOc5kIULTa/HR88EPdSNQ+5S4tKCij1LsZ9nBqmT1DKPk5k4Z
              FulaFtlAwlZIWPzyVwoaD7aYIUKsNnpJAp9U3o7nUYDvZBmYle5zDWMMf0ql3cZu
              HuDUEXf3dwKBgGhgU3hR8URbxQ3g59q2qDnUZ/3MEMeMtyCNdMdZJxA9udqdu0mU
              YfArVcAhONSFIzBM7xIbptikDBBVSvR+iq7xT72eyUUyXnF01r9qBdaUwR7nGcKR
              ZHaM1seF+xO5ou0yeTXZhySobUafzCVGDfbymzQjGsf5FsX4XLTQyK6xAoGAbePK
              ChMG9RqrbBnlb9DCki2tCwkz6An1xZl0D3z+CNtOnXsfTvxvj53tygrzroJJt9xX
              9w9HH6IOK2jCqjOP4yw+zsdvBQ7SdJYEdlyLwKaY35mS9qJbFs91k8ORjqTFBFOS
              PLUuNS1EEpZIpic+p1bciwjxUk9bWa2FM+tl2k0CgYAuCZq77/kHSap1DtfA/5nc
              ++f+X3EO76jiPyiXxUmpl6+HIWXjJzHf5h7kwZAUiZRPhmsh89LmWK+s9zu+JyP3
              DxMtMWp5wKLmJ8WQMRv/+Vok1o20a7ZHXD/pjHR9Z1ctdWxZQudalFMZsP35c5ao
              cXeTLsophS/XZApYTmlaMA==
              -----END PRIVATE KEY-----
istiod:
  enabled: true
  values:
    hardened:
      enabled: true
kiali:
  enabled: true
  sso:
    client_id: platform1_a8604cc9-f5e9-4656-802d-d05624370245_bb8-kiali
    enabled: true
  values:
    bbtests:
      cypress:
        envs:
          cypress_check_data: "true"
          cypress_url: https://kiali.dev.bigbang.mil
      enabled: true
    upstream:
      cr:
        spec:
          auth:
            strategy: anonymous
kyverno:
  values:
    bbtests:
      enabled: true
    upstream:
      admissionController:
        container:
          extraArgs:
            webhookTimeout: 30
          resources:
            limits:
              cpu: 1
              memory: 768Mi
            requests:
              cpu: 1
              memory: 768Mi
      features:
        policyexceptions:
          enabled: true
          namespace: kyverno
      networkPolicies:
        externalRegistries:
          allowEgress: true
kyvernoPolicies:
  values:
    additionalPolicyExceptions:
      testpolicyexception:
        annotations:
          policies.kyverno.io/category: Test
          policies.kyverno.io/description: This Test PolicyException allows pods to
            deploy busybox for debugging.
          policies.kyverno.io/subject: Pod
          policies.kyverno.io/title: Test PolicyException
        enabled: true
        kind: PolicyException
        namespace: kyverno
        spec:
          conditions:
            any:
            - key: '{{ request.object.metadata.labels.app || '''' }}'
              operator: Equals
              value: busybox
          exceptions:
          - policyName: block-ephemeral-containers
            ruleNames:
            - block-ephemeral-containers
          match:
            any:
            - resources:
                kinds:
                - Pod
                names:
                - important-tool*
    bbtests:
      enabled: true
    exclude:
      any:
      - resources:
          names:
          - svclb-*
          namespaces:
          - istio-system
      - resources:
          names:
          - bad-test*
          - good-test*
          namespaces:
          - default
    excludeContainers:
    - not-me
    - or-me
    policies:
      add-default-capability-drop:
        exclude:
          any:
          - resources:
              names:
              - require-drop-all-capabilities*
              namespaces:
              - default
          - resources:
              names:
              - guestbook-ui-*
              namespaces:
              - argocd
      add-default-securitycontext:
        exclude:
          any:
          - resources:
              names:
              - speaker-*
              namespaces:
              - metallb-system
          - resources:
              names:
              - guestbook*
              namespaces:
              - argocd
          - resources:
              names:
              - velero-backup-restore-test*
              namespaces:
              - velero
          - resources:
              names:
              - volume-upgrade-job*
              namespaces:
              - twistlock
          - resources:
              names:
              - alloy-config-validator*
              - alloy-config-analysis*
              - alloy-test*
              namespaces:
              - alloy
      clone-configs:
        parameters:
          clone:
          - kind: ConfigMap
            name: clone-configs-1
            namespace: '{{ .Release.Namespace }}'
          - kind: Secret
            name: clone-configs-2
            namespace: '{{ .Release.Namespace }}'
      disallow-annotations:
        parameters:
          disallow:
          - 'kyverno-policies-bbtest/test: disallowed'
          - kyverno-policies-bbtest/disallowed
      disallow-labels:
        parameters:
          disallow:
          - 'kyverno-policies-bbtest/test: disallowed'
          - kyverno-policies-bbtest/disallowed
      disallow-namespaces:
        parameters:
          disallow:
          - bigbang
      disallow-tolerations:
        parameters:
          disallow:
          - effect: NoSchedule
            key: notallowed
            value: "false"
          - effect: '*NoSchedule'
            key: disa??owed
            value: "true"
      require-annotations:
        parameters:
          require:
          - 'kyverno-policies-bbtest/test: required'
          - kyverno-policies-bbtest/required
      require-drop-all-capabilities:
        exclude:
          any:
          - resources:
              names:
              - twistlock-defender-ds*
              namespaces:
              - twistlock
          - resources:
              names:
              - neuvector-enforcer-pod*
              - neuvector-controller-pod*
              - neuvector-prometheus-exporter-pod*
              namespaces:
              - neuvector
          - resources:
              names:
              - guestbook-ui-*
              namespaces:
              - argocd
      require-image-signature:
        enabled: false
        parameters:
          require:
          - attestors:
            - count: 1
              entries:
              - keys:
                  publicKeys: |-
                    -----BEGIN PUBLIC KEY-----
                    MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE8nXRh950IZbRj8Ra/N9sbqOPZrfM
                    5/KAQN0/KjHcorm/J5yctVd7iEcnessRQjU917hmKO6JWVGHpDguIyakZA==
                    -----END PUBLIC KEY-----
                  rekor:
                    ignoreTlog: true
                    url: ""
            imageReferences:
            - ghcr.io/kyverno/test-verify-image:*
            mutateDigest: false
            verifyDigest: false
          - attestors:
            - count: 1
              entries:
              - keys:
                  publicKeys: |-
                    -----BEGIN PUBLIC KEY-----
                    MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE7CjMGH005DFFz6mffqTIGurBt6fL
                    UfTZxuEDFRBS8mFJx1xw8DEVvjMibLTtqmAoJxUmzmGFgzz+LV875syVEg==
                    -----END PUBLIC KEY-----
                  rekor:
                    ignoreTlog: true
                    url: ""
            imageReferences:
            - registry1.dso.mil/ironbank/*
            mutateDigest: false
            verifyDigest: false
        validationFailureAction: Audit
      require-labels:
        parameters:
          require:
          - 'kyverno-policies-bbtest/test: required'
          - kyverno-policies-bbtest/required
      require-non-root-group:
        exclude:
          any:
          - resources:
              names:
              - fortify-mysql-*
              namespaces:
              - fortify
          - resources:
              names:
              - speaker-*
              - controller-*
              namespaces:
              - metallb-system
          - resources:
              names:
              - velero-backup-restore-test*
              namespaces:
              - velero
          - resources:
              names:
              - alloy-config-validator*
              - alloy-config-analysis*
              - alloy-test*
              namespaces:
              - alloy
      require-non-root-user:
        exclude:
          any:
          - resources:
              names:
              - speaker-*
              namespaces:
              - metallb-system
          - resources:
              names:
              - guestbook*
              namespaces:
              - argocd
          - resources:
              names:
              - velero-backup-restore-test*
              namespaces:
              - velero
          - resources:
              names:
              - volume-upgrade-job*
              namespaces:
              - twistlock
          - resources:
              names:
              - alloy-config-validator*
              - alloy-config-analysis*
              - alloy-test*
              namespaces:
              - alloy
      restrict-external-ips:
        parameters:
          allow:
          - 192.168.0.1
      restrict-external-names:
        parameters:
          allow:
          - allowed
      restrict-host-path-mount:
        exclude:
          any:
          - resources:
              names:
              - '*-cypress-test*'
              namespaces:
              - anchore
              - backstage
              - bbctl
              - gitlab
              - gitlab-runner
              - kiali
              - cluster-auditor
              - mattermost
              - nexus-repository-manager
              - keycloak
              - kyverno-reporter
              - mimir
              - monitoring
              - vault
              - logging
              - twistlock
              - sonarqube
              - logging
              - tempo
              - argocd
              - minio
              - minio-operator
              - neuvector
              - harbor
              - fortify
              - thanos
              - alloy
              - headlamp
        parameters:
          allow:
          - /tmp/allowed
      restrict-host-path-mount-pv:
        parameters:
          allow:
          - /tmp/allowed
          - /var/lib/rancher/k3s/storage/pvc-*
      restrict-host-path-write:
        exclude:
          any:
          - resources:
              names:
              - '*-cypress-test*'
              namespaces:
              - anchore
              - backstage
              - bbctl
              - gitlab
              - gitlab-runner
              - kiali
              - cluster-auditor
              - mattermost
              - nexus-repository-manager
              - keycloak
              - kyverno-reporter
              - mimir
              - monitoring
              - vault
              - logging
              - twistlock
              - sonarqube
              - logging
              - tempo
              - argocd
              - minio
              - minio-operator
              - neuvector
              - harbor
              - fortify
              - thanos
              - alloy
              - headlamp
          - resources:
              names:
              - neuvector-enforcer-*
              - neuvector-manager-*
              namespaces:
              - neuvector
        parameters:
          allow:
          - /tmp/allowed
      restrict-host-ports:
        parameters:
          allow:
          - "63999"
          - '>= 64000 & < 65000'
          - '> 65000'
      restrict-image-registries:
        exclude:
          any:
          - resources:
              namespaces:
              - gitlab
      restrict-volume-types:
        exclude:
          any:
          - resources:
              names:
              - '*-cypress-test*'
              namespaces:
              - anchore
              - backstage
              - bbctl
              - gitlab
              - gitlab-runner
              - kiali
              - cluster-auditor
              - mattermost
              - nexus-repository-manager
              - keycloak
              - kyverno-reporter
              - mimir
              - monitoring
              - vault
              - logging
              - twistlock
              - sonarqube
              - logging
              - tempo
              - argocd
              - minio
              - minio-operator
              - neuvector
              - harbor
              - fortify
              - thanos
              - alloy
              - headlamp
      update-image-registry:
        parameters:
          update:
          - from: replace.image.registry
            to: registry1.dso.mil
kyvernoReporter:
  values:
    bbtests:
      cypress:
        envs:
          cypress_check_datasource: "true"
          cypress_grafana_url: https://grafana.dev.bigbang.mil
          cypress_prometheus_url: https://prometheus.dev.bigbang.mil
        resources:
          limits:
            cpu: 2
            memory: 3Gi
          requests:
            cpu: 2
            memory: 3Gi
      enabled: true
    istio:
      hardened:
        customServiceEntries:
        - enabled: true
          name: cypress-service-entries-kyvernoreporter
          spec:
            exportTo:
            - .
            hosts:
            - registry.npmjs.org
            - download.cypress.io
            - cdn.cypress.io
            - repo1.dso.mil
            - prometheus.dev.bigbang.mil
            location: MESH_EXTERNAL
            ports:
            - name: https
              number: 443
              protocol: TLS
            resolution: DNS
loki:
  strategy: scalable
  values:
    backend:
      persistence:
        size: 2Gi
      replicas: 3
      resources:
        limits:
          cpu: 500m
          memory: 1G
        requests:
          cpu: 500m
          memory: 1G
    bbtests:
      cypress:
        envs:
          cypress_check_datasource: "true"
          cypress_grafana_url: https://grafana.dev.bigbang.mil
      enabled: true
      scripts:
        envs:
          LOKI_URL: http://logging-loki-write.logging.svc:3100
    istio:
      hardened:
        customServiceEntries:
        - enabled: true
          name: cypress-service-entries-loki
          spec:
            hosts:
            - registry.npmjs.org
            - download.cypress.io
            - cdn.cypress.io
            - repo1.dso.mil
            - grafana.dev.bigbang.mil
            - optimizationguide-pa.googleapis.com
            - clientservices.googleapis.com
            - accounts.google.com
            - redirector.gvt1.com
            - content-autofill.googleapis.com
            - safebrowsing.googleapis.com
            location: MESH_EXTERNAL
            ports:
            - name: https
              number: 443
              protocol: TLS
            resolution: DNS
      loki:
        enabled: true
    minio:
      enabled: true
    read:
      persistence:
        size: 2Gi
      replicas: 3
      resources:
        limits:
          cpu: 400m
          memory: 500Mi
        requests:
          cpu: 400m
          memory: 500Mi
    write:
      persistence:
        size: 2Gi
      replicas: 3
      resources:
        limits:
          cpu: 1
          memory: 1G
        requests:
          cpu: 1
          memory: 1G
monitoring:
  enabled: true
  flux:
    install:
      crds: CreateReplace
      disableOpenAPIValidation: true
    timeout: 20m
    upgrade:
      crds: CreateReplace
      disableOpenAPIValidation: true
  git:
    branch: monitoring-301/passthrough-conversion
    tag: null
  sso:
    alertmanager:
      client_id: platform1_a8604cc9-f5e9-4656-802d-d05624370245_bb8-alertmanager
    enabled: true
    prometheus:
      client_id: platform1_a8604cc9-f5e9-4656-802d-d05624370245_bb8-prometheus
  values:
    bbtests:
      cypress:
        envs:
          cypress_alertmanager_url: https://alertmanager.dev.bigbang.mil
          cypress_bigbang_integration: "true"
          cypress_check_istio_dashboards: "true"
          cypress_grafana_url: https://grafana.dev.bigbang.mil
          cypress_keycloak_test_enable: "false"
          cypress_prometheus_url: https://prometheus.dev.bigbang.mil
          cypress_tnr_password: tnr_w!G33ZyAt@C8
          cypress_tnr_username: cypress
      enabled: true
    istio:
      enabled: true
      hardened:
        customServiceEntries:
        - enabled: true
          name: cypress-service-entries-monitoring
          spec:
            hosts:
            - registry.npmjs.org
            - download.cypress.io
            - cdn.cypress.io
            - repo1.dso.mil
            - prometheus.dev.bigbang.mil
            - grafana.dev.bigbang.mil
            - alertmanager.dev.bigbang.mil
            location: MESH_EXTERNAL
            ports:
            - name: https
              number: 443
              protocol: TLS
            resolution: DNS
    kube-state-metrics:
      resources:
        limits:
          cpu: 200m
          memory: 512Mi
        requests:
          cpu: 40m
          memory: 128Mi
    prometheus-node-exporter:
      resources:
        limits: {}
        requests:
          cpu: 100m
          memory: 30Mi
networkPolicies:
  enabled: true
neuvector:
  enabled: false
  sso:
    client_id: platform1_a8604cc9-f5e9-4656-802d-d05624370245_bb8-neuvector
    client_secret: AyAixE3
    default_role: admin
    enabled: true
    group_claim: roles
    group_mapped_roles:
    - global_role: admin
      group: admin
    - global_role: reader
      group: reader
  values:
    bbtests:
      cypress:
        envs:
          cypress_url: https://neuvector.dev.bigbang.mil
      enabled: true
    enforcer:
      podAnnotations:
        sidecar.istio.io/proxyMemoryLimit: 2Gi
    istio:
      hardened:
        customServiceEntries:
        - enabled: true
          name: cypress-service-entries-neuvector
          spec:
            hosts:
            - registry.npmjs.org
            - download.cypress.io
            - cdn.cypress.io
            - repo1.dso.mil
            - neuvector.dev.bigbang.mil
            location: MESH_EXTERNAL
            ports:
            - name: https
              number: 443
              protocol: TLS
            resolution: DNS
    k3s:
      enabled: true
promtail:
  enabled: false
registryCredentials:
  email: blair@radiusmethod.com
  password: HUGbpAjY1
  registry: registry1.dso.mil
  username: blairbowden
sso:
  certificateAuthority:
    cert: |
      -----BEGIN CERTIFICATE-----
      MIIHBTCCBO2gAwIBAgIQD/phkV/eol6Lg2gMzHk+jjANBgkqhkiG9w0BAQsFADBY
      MQswCQYDVQQGEwJVUzEXMBUGA1UEChMORGlnaUNlcnQsIEluYy4xMDAuBgNVBAMT
      J0RpZ2lDZXJ0IEc1IFRMUyBSU0E0MDk2IFNIQTM4NCAyMDIxIENBMTAeFw0yNTA0
      MTYwMDAwMDBaFw0yNjA1MTcyMzU5NTlaMG0xCzAJBgNVBAYTAlVTMR0wGwYDVQQI
      ExREaXN0cmljdCBvZiBDb2x1bWJpYTETMBEGA1UEBxMKV2FzaGluZ3RvbjEWMBQG
      A1UEChMNVS5TIEFpciBGb3JjZTESMBAGA1UEAwwJKi5kc28ubWlsMFkwEwYHKoZI
      zj0CAQYIKoZIzj0DAQcDQgAEvqgFn0XEm25UJT6jXRkkvp3OK6SI5wycUJG/Nn7n
      cScmsRh2z/35TtXeLBrONs/G1JnQHOO1AHSf2oPnu5m/NKOCA38wggN7MB8GA1Ud
      IwQYMBaAFK66lDO67zdNC9cY70rkoQ28B7ZzMB0GA1UdDgQWBBQwWWNLgVEeuSlb
      5NPf6orehUloPDAUBgNVHREEDTALggkqLmRzby5taWwwPgYDVR0gBDcwNTAzBgZn
      gQwBAgIwKTAnBggrBgEFBQcCARYbaHR0cDovL3d3dy5kaWdpY2VydC5jb20vQ1BT
      MA4GA1UdDwEB/wQEAwIDiDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIw
      gZsGA1UdHwSBkzCBkDBGoESgQoZAaHR0cDovL2NybDMuZGlnaWNlcnQuY29tL0Rp
      Z2lDZXJ0RzVUTFNSU0E0MDk2U0hBMzg0MjAyMUNBMS0xLmNybDBGoESgQoZAaHR0
      cDovL2NybDQuZGlnaWNlcnQuY29tL0RpZ2lDZXJ0RzVUTFNSU0E0MDk2U0hBMzg0
      MjAyMUNBMS0xLmNybDCBhQYIKwYBBQUHAQEEeTB3MCQGCCsGAQUFBzABhhhodHRw
      Oi8vb2NzcC5kaWdpY2VydC5jb20wTwYIKwYBBQUHMAKGQ2h0dHA6Ly9jYWNlcnRz
      LmRpZ2ljZXJ0LmNvbS9EaWdpQ2VydEc1VExTUlNBNDA5NlNIQTM4NDIwMjFDQTEt
      MS5jcnQwDAYDVR0TAQH/BAIwADCCAX4GCisGAQQB1nkCBAIEggFuBIIBagFoAHUA
      DleUvPOuqT4zGyyZB7P3kN+bwj1xMiXdIaklrGHFTiEAAAGWQHoyAgAABAMARjBE
      AiAlTW+LESY0sZaEItFvTm3SuQjLmVhLwdnXClgWfXqxxwIgd6PIbpZFf2sjbPsG
      xemMeQXo/nedZ88+pIKGtd4HlhEAdgBJnJtp3h187Pw23s2HZKa4W68Kh4AZ0VVS
      ++nrKd34wwAAAZZAejJEAAAEAwBHMEUCIQCOayVk5zOpYJTgKWlbDLu7DcAEmAmc
      T2QoacY4M1JmMgIgaC5f/4Ylm9bwSvz8+sZ3La8P7dHba+lb2tdw8jnampwAdwCW
      l2S/VViXrfdDh2g3CEJ36fA61fak8zZuRqQ/D8qpxgAAAZZAejJLAAAEAwBIMEYC
      IQDMULJLuKcsALTsL0X0SdCB0nB1wYW5sGkF3mAbHryiZAIhALrkoNzigfR4z1ae
      BDSdF6/vUAWCHbBF8pf9s+jIeuP1MA0GCSqGSIb3DQEBCwUAA4ICAQBoq3z4deX6
      JKh+PFkGZPF3zkUkUmQdxpMMQ9OR95bt4yIuP/NvzIQDT7QT/Yqod4M1HEwUs19H
      ltl0GCWWOsPa2ijc3/NwuovflWARIsI80Ze+xxftRRWcVDoESrh08g209baNyKt2
      Qi20pbFqkmq7EQLWf9JG9bsWwVNV3SnWycApidLIbXBzj8Yslx90letRrv5bal4G
      zElRdSdr2R3qLdltGllgPKGhfQi+m01D0hET17gFfeka9wfen+NJgleBn0wTpTk7
      hfTne+x5foStIo6a/v6YlCjiwW8qlk7vP7yXMEOXfqGK43E61ZK3bsDLaDYlSkXV
      Rre/NqcQMoMbefD68Ti7+GvSC9dTvl9kvEQoUhI1A4mNVp2ZeB2a8W3Ikw69HBwE
      FmJQwLIyU0WlFIhLhRuTuhUL/dMpJaWhofagEcdE2IMg+OIeWmAN9KGeNgSO2t6q
      z0A3myaxnpjMCRB8zUSnYtlQKomhLSwDES6kDmiHPiNxf4/fllK/hOL2r9kmxDOD
      nC63U31YyYCkzTmP2p0A8XelTdT4lBuS/lJjvvLCM7H7Q4i9K3RuPbYCFvkmF7Ps
      GKFbhfuFFIzcxzkeo/rYH0F6Ngn5vPnmtkSj8zeyQDg8HJsDhX+YDX9lSe0PY9zY
      fcsiDZsLZf9m0Pd4tAJEy2aON1fhbLFoJQ==
      -----END CERTIFICATE-----
      -----BEGIN CERTIFICATE-----
      MIIGuzCCBKOgAwIBAgIQDmRY51TsnMe6yDIx1flNWDANBgkqhkiG9w0BAQwFADBN
      MQswCQYDVQQGEwJVUzEXMBUGA1UEChMORGlnaUNlcnQsIEluYy4xJTAjBgNVBAMT
      HERpZ2lDZXJ0IFRMUyBSU0E0MDk2IFJvb3QgRzUwHhcNMjEwNDE0MDAwMDAwWhcN
      MzEwNDEzMjM1OTU5WjBYMQswCQYDVQQGEwJVUzEXMBUGA1UEChMORGlnaUNlcnQs
      IEluYy4xMDAuBgNVBAMTJ0RpZ2lDZXJ0IEc1IFRMUyBSU0E0MDk2IFNIQTM4NCAy
      MDIxIENBMTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAMnB9AAUezLy
      ZIJWqclXdCRODlmfOnlRYNvE3OR/WaHipH5TnngNfRz4nT97RDaZx9Mc5Sdo9c/R
      7N7juzv/5XSQIRYp488dRYQOuej2QkdfDKHDBunwqa7shUpm+2NXouQbQqNi3Tkf
      NURyVFntX+tL014KdjNr0w5KZXAzCsHTie0ZPb9JMn4MQfzKcfHcLDtytiHxCE5M
      OjEpm6O4YDQgEoPvBXTvjD/SQu4JM+f4jRhPWFzdssuTEcyGy9po/0h2xoCP/exh
      e8EabVWhqSgz5UWAG1Wn1gLsFzQwR3fYy882OiRJ+uqisbi+QIsD5Dhgmxfo4Voo
      vUcvairFFdDwQp7nTwPL1p5iZ6u2OuZS/HI0d1Yj5p9aYpi6nZR+S+iJD0hBqtSw
      EHmmAFzGgTwDBJqHKzanwvsyiUeGP7lmd323M8ZcRKGvRBjH8Caa4vZpkcYaKGAV
      K/gDUr5vEUAfs30r0NC8cQpPLaLfkA/+tJOvSpRPiPkHk/I7xMq1bJ4zcdlqZ6CC
      5hw76litkmt2mFFCg0/JtApRQavIfoaEvwrqxwTxg29ZjvE2tWo8YhwPRf4mogjQ
      XsbgXLksXThVv5oVjhzKrrydwU1KNbzmmZNRWesFGYhq/aUCEmpROkhvcHqj7233
      6gjU8xeBTxbB1KZM3oT9R9JoH3CGYZmrAgMBAAGjggGKMIIBhjASBgNVHRMBAf8E
      CDAGAQH/AgEAMB0GA1UdDgQWBBSuupQzuu83TQvXGO9K5KENvAe2czAfBgNVHSME
      GDAWgBRRMxztNkCvF9MlzWlo8q9OIz6zQTAOBgNVHQ8BAf8EBAMCAYYwHQYDVR0l
      BBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMHoGCCsGAQUFBwEBBG4wbDAkBggrBgEF
      BQcwAYYYaHR0cDovL29jc3AuZGlnaWNlcnQuY29tMEQGCCsGAQUFBzAChjhodHRw
      Oi8vY2FjZXJ0cy5kaWdpY2VydC5jb20vRGlnaUNlcnRUTFNSU0E0MDk2Um9vdEc1
      LmNydDBGBgNVHR8EPzA9MDugOaA3hjVodHRwOi8vY3JsMy5kaWdpY2VydC5jb20v
      RGlnaUNlcnRUTFNSU0E0MDk2Um9vdEc1LmNybDA9BgNVHSAENjA0MAsGCWCGSAGG
      /WwCATAHBgVngQwBATAIBgZngQwBAgEwCAYGZ4EMAQICMAgGBmeBDAECAzANBgkq
      hkiG9w0BAQwFAAOCAgEAm5n6ds96TsvAgH4+P/HASmAPv4gJGTkgXjflouTbHJqx
      FAOsExKNfs0G7BlrdqcFnIOcNR20t0hDvikyZvLT9yBAJYB3uAoYZP/7HIkdkjQB
      1EfX2A9VLzEhAitWYnv4A1vwIVgI7nKaSTz2wGd0Be6cAu+4xxjKieCYAQduI14t
      ebbHEapLulqRuvemZc/dAIeAVVrC01GKhPkGrb2iAXCRmZzo9IYh59l4u8K9LoHb
      7Hf4Ff2uDUgIa1Zabg4wXjwYvoAhxPhRa/5lSn/tGCRg/JSpi3dF0Hry1EIueLL3
      q3QfX4kjs6qTqWSHGL98sLjWDowRQWDAbgjylkGAVZBG4aqvlgEhKCLNtgzdN250
      4XWLJbcCj1F1Bi+WoXSGlpm3x+1otDJgkSnCjXs0uRxrHsB8kWzMR+WpTROqsDVQ
      /9+NAbtkLNFc6RdRHPBnvNrah8Z8tfKcGJrzjncmyBae1BdFhZ09keXQ+Zj5Fu/o
      P8gHuJhmwIPsIE5tEs33q1BUXaP6vQU+v/lmvb6Vy2xj3U091m9cYSYt1xObnOLS
      HeL48nhq1fIhJQfXWX2neiOmZxeVi+g0nZ9Ws7MpARDSTBsR8NBsWBBVcmTUKJhv
      g/cqkTWFeprxB41VkxJc79K3VL8yo01JYIUfAiTwNecb6/mvBAV/yOzGCYSqff0=
      -----END CERTIFICATE-----
      -----BEGIN CERTIFICATE-----
      MIIFZjCCA06gAwIBAgIQCPm0eKj6ftpqMzeJ3nzPijANBgkqhkiG9w0BAQwFADBN
      MQswCQYDVQQGEwJVUzEXMBUGA1UEChMORGlnaUNlcnQsIEluYy4xJTAjBgNVBAMT
      HERpZ2lDZXJ0IFRMUyBSU0E0MDk2IFJvb3QgRzUwHhcNMjEwMTE1MDAwMDAwWhcN
      NDYwMTE0MjM1OTU5WjBNMQswCQYDVQQGEwJVUzEXMBUGA1UEChMORGlnaUNlcnQs
      IEluYy4xJTAjBgNVBAMTHERpZ2lDZXJ0IFRMUyBSU0E0MDk2IFJvb3QgRzUwggIi
      MA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCz0PTJeRGd/fxmgefM1eS87IE+
      ajWOLrfn3q/5B03PMJ3qCQuZvWxX2hhKuHisOjmopkisLnLlvevxGs3npAOpPxG0
      2C+JFvuUAT27L/gTBaF4HI4o4EXgg/RZG5Wzrn4DReW+wkL+7vI8toUTmDKdFqgp
      wgscONyfMXdcvyej/Cestyu9dJsXLfKB2l2w4SMXPohKEiPQ6s+d3gMXsUJKoBZM
      pG2T6T867jp8nVid9E6P/DsjyG244gXazOvswzH016cpVIDPRFtMbzCe88zdH5RD
      nU1/cHAN1DrRN/BsnZvAFJNY781BOHW8EwOVfH/jXOnVDdXifBBiqmvwPXbzP6Po
      sMH976pXTayGpxi0KcEsDr9kvimM2AItzVwv8n/vFfQMFawKsPHTDU9qTXeXAaDx
      Zre3zu/O7Oyldcqs4+Fj97ihBMi8ez9dLRYiVu1ISf6nL3kwJZu6ay0/nTvEF+cd
      Lvvyz6b84xQslpghjLSR6Rlgg/IwKwZzUNWYOwbpx4oMYIwo+FKbbuH2TbsGJJvX
      KyY//SovcfXWJL5/MZ4PbeiPT02jP/816t9JXkGPhvnxd3lLG7SjXi/7RgLQZhNe
      XoVPzthwiHvOAbWWl9fNff2C+MIkwcoBOU+NosEUQB+cZtUMCUbW8tDRSHZWOkPL
      tgoRObqME2wGtZ7P6wIDAQABo0IwQDAdBgNVHQ4EFgQUUTMc7TZArxfTJc1paPKv
      TiM+s0EwDgYDVR0PAQH/BAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcN
      AQEMBQADggIBAGCmr1tfV9qJ20tQqcQjNSH/0GEwhJG3PxDPJY7Jv0Y02cEhJhxw
      GXIeo8mH/qlDZJY6yFMECrZBu8RHANmfGBg7sg7zNOok992vIGCukihfNudd5N7H
      PNtQOa27PShNlnx2xlv0wdsUpasZYgcYQF+Xkdycx6u1UQ3maVNVzDl92sURVXLF
      O4uJ+DQtpBflF+aZfTCIITfNMBc9uPK8qHWgQ9w+iUuQrm0D4ByjoJYJu32jtyoQ
      REtGBzRj7TG5BO6jm5qu5jF49OokYTurWGT/u4cnYiWB39yhL/btp/96j1EuMPik
      AdKFOV8BmZZvWltwGUb+hmA+rYAQCd05JS9Yf7vSdPD3Rh9GOUrYU9DzLjtxpdRv
      /PNn5AeP3SYZ4Y1b+qOTEZvpyDrDVWiakuFSdjjo4bq9+0/V77PnSIMx8IIh47a+
      p6tv75/fTM8BuGJqIz3nCU2AG3swpMPdB380vqQmsvZB6Akd4yCYqjdP//fx4ilw
      MUc/dNAUFvohigLVigmUdy7yWSiLfFCSCmZ4OIN1xLVaqBHG5cGdZlXPU8Sv13WF
      qUITVuwhd4GTWgzqltlJyqEI8pc7bZsEGCREjnwB8twl2F6GmrE52/WRMmrRpnCK
      ovfepEWFJqgejF0pW8hL2JpqA15w8oVPbEtoL8pU9ozaMv7Da4M/OMZ+
      -----END CERTIFICATE-----
  name: P1 SSO
  saml:
    metadata: <md:EntityDescriptor xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata"
      xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:ds="http://www.w3.org/2000/09/xmldsig#"
      entityID="https://login.dso.mil/auth/realms/baby-yoda"><md:IDPSSODescriptor
      WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol"><md:KeyDescriptor
      use="signing"><ds:KeyInfo><ds:KeyName>4CK69bW66HE2wph9VuBs0fTc1MaETSTpU1iflEkBHR4</ds:KeyName><ds:X509Data><ds:X509Certificate>MIICoTCCAYkCBgFyLIEqUjANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAliYWJ5LXlvZGEwHhcNMjAwNTE5MTAzNDIyWhcNMzAwNTE5MTAzNjAyWjAUMRIwEAYDVQQDDAliYWJ5LXlvZGEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCGIwvWSPD6zDbkGBpkjUDJ+BwJEE8ko8T7DC22prs03Gm2v/lEIEa4leoPKjenW+NxtvwqN0qdcjuRZ6vxvY/P9E/Wb9Bw+so7FKW6TsZkXwBGxzoU8ZvNiCLyjxwFVKxqaXodnOk3dmcfgMVnbuJ8z5SX8/IzFnZrB6iEhqLNen6uAXtGqlq/k1dTCZxLIfws/3Y1Ui4WUPcdhMMaixVt8D+78fblnhcIYpb+8sNM2uXw9wDceoigP681q/Kx3ECr8o3DuIstzQouyMVhJ0kv/ngftC5uwZHQDIissu6sluoC2+20YkrfyTldhYojBga27qKInCNJvtS2idV0+HxXAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAIVkoDYkM6ryBcuchdAL5OmyKbmmY4WDrMlatfa3uniK5jvFXrmVaJ3rcu0apdY/NhBeLSOLFVlC5w1QroGUhWm0EjAA4zyuU63Pk0sro0vyHrxztBrGPQrGXI3kjXEssaehZZvYP4b9VtYpus6oGP6bTmaDw94Zu+WrDsWdFs+27VEYwBuU0D6E+ENDGlfR+9ADEW53t6H2M3H0VsOtbArEutYgb4gmQcOIBygC7L1tGJ4IqbnhTYLh9DMKNklU+tq8TMHacps9FxELpeAib3O0J0E5zYXdraQobCCe+ao1Y7sA/wqcGQBCVuoFgty7Y37nNL7LMvygcafgqVDqw5U=</ds:X509Certificate></ds:X509Data></ds:KeyInfo></md:KeyDescriptor><md:ArtifactResolutionService
      Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://login.dso.mil/auth/realms/baby-yoda/protocol/saml/resolve"
      index="0"/><md:SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"
      Location="https://login.dso.mil/auth/realms/baby-yoda/protocol/saml"/><md:SingleLogoutService
      Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://login.dso.mil/auth/realms/baby-yoda/protocol/saml"/><md:SingleLogoutService
      Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact" Location="https://login.dso.mil/auth/realms/baby-yoda/protocol/saml"/><md:NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</md:NameIDFormat><md:NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</md:NameIDFormat><md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</md:NameIDFormat><md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</md:NameIDFormat><md:SingleSignOnService
      Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://login.dso.mil/auth/realms/baby-yoda/protocol/saml"/><md:SingleSignOnService
      Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://login.dso.mil/auth/realms/baby-yoda/protocol/saml"/><md:SingleSignOnService
      Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://login.dso.mil/auth/realms/baby-yoda/protocol/saml"/><md:SingleSignOnService
      Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact" Location="https://login.dso.mil/auth/realms/baby-yoda/protocol/saml"/></md:IDPSSODescriptor></md:EntityDescriptor>
  url: https://login.dso.mil/auth/realms/baby-yoda
tempo:
  sso:
    client_id: platform1_a8604cc9-f5e9-4656-802d-d05624370245_bb8-jaeger
    enabled: true
  values:
    bbtests:
      cypress:
        envs:
          cypress_check_datasource: "true"
          cypress_grafana_url: https://grafana.dev.bigbang.mil
          cypress_tempo_datasource: http://tempo-tempo.tempo.svc:3100
          cypress_url: https://tempo.dev.bigbang.mil
      enabled: true
      scripts:
        enabled: false
        envs:
          TEMPO_METRICS_URL: http://tempo-tempo.tempo.svc:3100
    istio:
      hardened:
        customServiceEntries:
        - enabled: true
          name: cypress-service-entries-tempo
          spec:
            hosts:
            - registry.npmjs.org
            - download.cypress.io
            - cdn.cypress.io
            - repo1.dso.mil
            - tempo.dev.bigbang.mil
            - grafana.dev.bigbang.mil
            - grafana.com
            location: MESH_EXTERNAL
            ports:
            - name: https
              number: 443
              protocol: TLS
            resolution: DNS
      tempoQuery:
        hosts:
        - tempo.{{ .Values.domain }}
    persistence:
      size: 5Gi
    tempo:
      resources:
        limits: null
        requests:
          cpu: 200m
          memory: 128Mi
    tempoQuery:
      resources:
        limits: null
        requests:
          cpu: 200m
          memory: 128Mi
twistlock:
  enabled: false
  sso:
    client_id: platform1_a8604cc9-f5e9-4656-802d-d05624370245_bb8-twistlock
    enabled: true
  values:
    bbtests:
      enabled: true
      scripts:
        envs:
          twistlock_host: https://twistlock.dev.bigbang.mil
    console:
      localVolumeUpgrade: true
      persistence:
        size: 5Gi
    defender:
      dockerSocket: /run/k3s/containerd/containerd.sock
      selinux: false
    istio:
      hardened:
        customServiceEntries:
        - enabled: true
          name: cypress-service-entries-twistlock
          spec:
            exportTo:
            - .
            hosts:
            - registry.npmjs.org
            - download.cypress.io
            - cdn.cypress.io
            - repo1.dso.mil
            - twistlock.dev.bigbang.mil
            location: MESH_EXTERNAL
            ports:
            - name: https
              number: 443
              protocol: TLS
            resolution: DNS
