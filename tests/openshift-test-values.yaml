openshift: true

domain: bigbang.dev
#domain: ${DOMAIN_CHANGE_ME}

neuvector:
  enabled: false
  values:
    crio:
      enabled: true
      path: /var/run/crio/crio.sock
     
loki:
  enabled: true
  git:
    tag: null
    branch: "openshift-updates"

promtail:
  enabled: true
  git:
    tag: null
    branch: "openshift-updates"  

tempo:
  enabled: true
  git:
    tag: null
    branch: "openshift-updates"  

grafana:
  enabled: true
  git:
    tag: null
    branch: "openshift-updates"
  values:
    downloadDashboards:
        resources:
          limits: null
          requests:
            cpu: 20m
            memory: 20M

kyverno:
  enabled: true
  git:
    tag: null
    branch: "openshift-updates"

kyvernoPolicies:
  enabled: false

kyvernoReporter:
  enabled: false

monitoring:
  enabled: true
  
  git:
    tag: null
    branch: "openshift-updates"
  values:
    alertmanager:
      enabled: true
    
    prometheusOperator:
      alertmanagerInstanceNamespaces: ['monitoring']
      alertmanagerConfigNamespaces: ['monitoring']
      prometheusInstanceNamespaces: ['monitoring']
      thanosRulerInstanceNamespaces: ['monitoring']
      #namespaces:
        #releaseNamespace: true
      kubeletService:
        enabled: false

    kube-state-metrics:
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 128Mi

    prometheus:

      thanosService:
        enabled: true
      thanosServiceMonitor: 
        enabled: true

      prometheusSpec:
        retention: 2d

        thanos:
          baseImage: registry1.dso.mil/ironbank/opensource/thanos/thanos
          version: v0.29.0 
        podMonitorNamespaceSelector:
          matchExpressions:
            - key: openshift.io/cluster-monitoring
              operator: NotIn
              values:
                - 'true'
        probeNamespaceSelector:
          matchExpressions:
            - key: openshift.io/cluster-monitoring
              operator: NotIn
              values:
                - 'true'
        serviceMonitorNamespaceSelector:
          matchExpressions:
            - key: openshift.io/cluster-monitoring
              operator: NotIn
              values:
                - 'true'
eckOperator:
  enabled: false
  git:
    tag: null
    branch: "main"

fluentbit:
  enabled: false
  git:
    tag: null
    branch: "main"
  values:
    PodSecurityContext: null
    openShift:
      securityContextConstraints:
        create: false
    securityContext:
      seLinuxOptions: null
      privileged: true

elasticsearchKibana:
  enabled: false
  git:
    tag: null
    branch: "main"
  values:
    kibana:
      count: 1
      resources:
        requests:
          cpu: 400m
          memory: 1Gi
        limits:
          cpu: 1000m
          memory: 2Gi
    elasticsearch:
      master:
        count: 1
        resources:
          requests:
            cpu: 2000m
            memory: 4Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        heap:
          min: 3g
          max: 3g
      data:
        count: 1
        resources:
          requests:
            cpu: 2000m
            memory: 4Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        heap: 
          min: 3g
          max: 3g

clusterAuditor:
  enabled: false
  git:
    tag: null
    branch: "main"
  values:
    resources:
      requests:
        cpu: 400m
        memory: 2Gi
      limits:
        cpu: null
        memory: null

gatekeeper:
  enabled: false
  git: 
    tag: 3.10.0-bb.2
  values:
    replicas: 3 
    controllerManager:
      resources:
        requests:
          cpu: 100m
          memory: 512Mi
        limits:
          cpu: 1000m
          memory: 1024Mi
    audit:
      resources:
        requests:
          cpu: 400m
          memory: 768Mi
        limits:
          cpu: 1000m
          memory: 1024Mi
    violations:
      allowedDockerRegistries:
        enforcementAction: dryrun
        parameters:
          repos: 
            - registry1.dso.mil
            - quay.io
            - registry.redhat.io
            - image-registry.openshift-image-registry.svc
      bannedImageTags:
        enforcementAction: dryrun
      selinuxPolicy:
        enabled: false
      httpsOnly:
        enforcementAction: dryrun
        parameters: 
          excludedResources: 
            - harbor/cm-acme-http-solver-.*
            - gitlab/cm-acme-http-solver-.*
      uniqueIngressHost:
        enforcementAction: dryrun
        parameters:
          excludedResources:
            - harbor/cm-acme-http-solver-.*
            - gitlab/cm-acme-http-solver-.*
      
istioOperator:
  enabled: true
  git:
    tag: null
    branch: "main"

istio:
  enabled: true
  git:
    tag: null
    branch: "main"
  values:
    profile: "openshift"
    ingressGateways:
      public-ingressgateway:
        k8s: 
          hpaSpec:
            minReplicas: 3
            maxReplicas: 5

jaeger:
  enabled: false
  git:
    tag: null
    branch: "main"
  values:
    jaeger:
      spec: 
        ingress:
          security: none

kiali: 
  enabled: false
  git:
    tag: null
    branch: "main"
  values: 
    cr: 
      spec: 
        identity: 
          cert_file: ""
          private_key_file: ""

twistlock:
  enabled: false # twistlock requires a license to work, so we're disabling it

addons:

  minioOperator:
    enabled: false


  argocd:
     enabled: false
     values:
       controller:
         resources:
           requests:
             cpu: 500m
             memory: 2Gi
           limits: null
       dex:
         resources:
           requests:
             cpu: 10m
             memory: 128Mi
           limits: null
       redis -bb:
         mast er:
           persistence:
             size: 512Mi
         replica:
           persistence:
             size: 512Mi
       redis:
         resources:
           requests:
             cpu: 50m
             memory: 256Mi
           limits: null
       server:
         resources:
           requests:
             cpu: 20m
             memory: 128Mi
           limits: null
       repoServer:
         resources:
           requests:
             cpu: 100m
             memory: 256Mi
           limits: null

  anchore:
    enabled: false
    values:
      ensureDbJobs:
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits: null
      sso:
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits: null
      postgresql:
        persistence:
          size: 256Mi
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits: null
        metrics:
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits: null
      anchoreAnalyzer:
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits: null
      anchoreApi:
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits: null
      anchoreCatalog:
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits: null
      anchorePolicyEngine:
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits: null
      anchoreSimpleQueue:
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits: null
      anchoreEngineUpgradeJob:
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits: null
      anchore-feeds-db:
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits: null
        metrics:
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits: null
      anchoreEnterpriseFeeds:
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits: null
      anchoreEnterpriseFeedsUpgradeJob:
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits: null
      anchoreEnterpriseRbac:
        authResources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits: null
        managerResources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits: null
      anchoreEnterpriseReports:
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits: null
      anchoreEnterpriseNotifications:
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits: null
      anchoreEntperpiseUi:
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits: null
      anchoreEnterpriseEngineUpgradeJob:
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits: null

  sonarqube:
    enabled: false
    values:
      resources:
        requests:
          cpu: 200m
          memory: 512Mi
        limits: null
      persistence:
        size: 5Gi
      postgresql:
        persistence:
          size: 256Mi
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits: null
 
  minio:
    enabled: false
    values:
      tenant:
        pools:
        - servers: 3
          volumesPerServer: 4
          size: 256Mi
          resources:
            requests:
              cpu: 250m
              memory: 512Mi
            limits: null
          securityContext:
            runAsUser: 1001
            runAsGroup: 1001
            fsGroup: 1001
            runAsNonRoot: true
          containerSecurityContext:
            runAsUser: 1001
            runAsGroup: 1001
            runAsNonRoot: true

  authservice:
    enabled: false
    values:
      resources:
        requests:
          cpu: 100m
          memory: 256Mi
        limits: null
      redis:
        master:
          persistence:
            size: 256Mi
        replica:
          persistence:
            size: 256Mi
   
  gitlab:
    enabled: false
    flux:
      timeout: 30m
    values:
      gitlab-runner:
        resources:
          requests:
            cpu: 20m
          limits: null
      gitlab:
        gitaly:
          persistence:
            size: 256Mi
          resources:
            ## values raised to help pass CI after default values for gitaly are fixed then can revert to original request.
            #requests:
            #  cpu: 50m
            #limits: null
            requests:
              cpu: 400m
              memory: 600Mi
            limits: null
        shared-secrets:
          resources:
            requests:
              cpu: 30m
            limits: null
        migrations:
          resources:
            requests:
              cpu: 30m
            limits: null
        toolbox:
          persistence:
            size: 256Mi
          resources:
            requests:
              cpu: 20m
            limits: null
      postgresql:
        persistence:
          size: 256Mi
        metrics:
          resources:
            requests:
              cpu: 50m
            limits: null
      minio:
        persistence:
          size: 256Mi
        resources:
          requests:
            cpu: 100m
          limits: null
      redis:
        master:
          persistence:
            size: 256Mi
        slave:
          persistence:
            size: 256Mi

  gitlabRunner:
    enabled: false
    values:
      resources:
        requests:
          memory: 128Mi
          cpu: 100m
        limits: null
 
