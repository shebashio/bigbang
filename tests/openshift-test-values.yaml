openshift: true

domain: bigbang.dev
#domain: ${DOMAIN_CHANGE_ME}


twistlock:
  enabled: true
  git:
    tag: null
    branch: "openshift-updates"
  sso:
    enabled: true
    client_id: dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_twistlock-false
  values:
    console:
      persistence:
        size: 256Mi
      localVolumeUpgrade: true
    bbtests:
      enabled: true
      cypress:
        artifacts: true
        openshift: true
        envs:
          cypress_baseUrl: "https://twistlock.bigbang.dev"
      scripts:
        envs:
          twistlock_host: "https://twistlock.bigbang.dev"

neuvector:
  enabled: true
  git:
    tag: null
    branch: "openshift-values"
  values:
    crio:
      enabled: true
      path: /var/run/crio/crio.sock
    bbtests:
      enabled: true
      cypress:
        artifacts: true
        openshift: true
        #envs:
          #cypress_url: "https://neuvector.bigbang.dev"
      #scripts:
        #envs:
          #URL: "https://neuvector.bigbang.dev"
     
loki:
  enabled: true
  git:
    tag: null
    branch: "openshift-updates"
  values:
    bbtests:
      enabled: true
      cypress:
        artifacts: true
        openshift: true 
        envs:
          cypress_check_datasource: 'true'
            #cypress_grafana_url: 'https://grafana.bigbang.dev'
          cypress_grafana_url: 'http://monitoring-grafana.monitoring.svc.cluster.local'
      scripts:
        envs:
          LOKI_URL: 'http://logging-loki-write.logging.svc:3100'

promtail:
  enabled: true
  git:
    tag: null
    branch: "openshift-updates"  

tempo:
  enabled: true
  git:
    tag: null
    branch: "openshift-updates"
  values:
    bbtests:
      enabled: true
      cypress:
        artifacts: true
        openshift: true
        #envs:
          #cypress_url: 'https://tempo.bigbang.dev'
          #cypress_tempo_datasource: 'http://tempo-tempo.tempo.svc:3100'
          #cypress_check_datasource: 'true'
          #cypress_grafana_url: 'https://grafana.bigbang.dev'
      #scripts:
        #enabled: true
        #envs:
          #TEMPO_METRICS_URL: 'http://tempo-tempo.tempo.svc:3100'  

grafana:
  enabled: true
    #git:
    #tag: null
    #branch: "openshift-updates"
  values:
    downloadDashboards:
        resources:
          limits: null
          requests:
            cpu: 20m
            memory: 20M
    bbtests:
        enabled: true
        cypress:
          artifacts: true
          openshift: true
          image: registry1.dso.mil/bigbang-ci/cypress-kubectl:8.3.1
          envs:
            cypress_grafana_url: 'https://grafana.bigbang.dev'

kyverno:
  enabled: true
  git:
    tag: null
    branch: "openshift-updates"
  values:
    bbtests:
      enabled: true
      cypress:
        artifacts: true
        openshift: true
      scripts:
        image: registry1.dso.mil/ironbank/opensource/kubernetes/kubectl:1.27.4
        additionalVolumeMounts:
          - name: "kyverno-bbtest-manifest"
            mountPath: /yaml
        additionalVolumes:
          - name: "kyverno-bbtest-manifest"
            configMap:
              name: "kyverno-bbtest-manifest"  

kyvernoPolicies:
  enabled: false

kyvernoReporter:
  enabled: false

monitoring:
  enabled: true
  
  git:
    tag: null
    branch: "openshift-updates"
  values:
    alertmanager:
      enabled: true
    
    prometheusOperator:
      alertmanagerInstanceNamespaces: ['monitoring']
      alertmanagerConfigNamespaces: ['monitoring']
      prometheusInstanceNamespaces: ['monitoring']
      thanosRulerInstanceNamespaces: ['monitoring']
      #namespaces:
        #releaseNamespace: true
      kubeletService:
        enabled: false

    kube-state-metrics:
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 128Mi

    prometheus:

      thanosService:
        enabled: true
      thanosServiceMonitor: 
        enabled: true

      prometheusSpec:
        retention: 2d
        additionalScrapeConfigs: []
        podMetadata:
          annotations:
            vault.hashicorp.com/agent-inject: "false"
            vault.hashicorp.com/agent-init-first: "true"
            vault.hashicorp.com/agent-inject-token: "true"
            vault.hashicorp.com/role: "prometheus"
            vault.hashicorp.com/agent-pre-populate: "false"
            proxy.istio.io/config: |
              holdApplicationUntilProxyStarts: true

        thanos:
          baseImage: registry1.dso.mil/ironbank/opensource/thanos/thanos
          version: v0.29.0 
        podMonitorNamespaceSelector:
          matchExpressions:
            - key: openshift.io/cluster-monitoring
              operator: NotIn
              values:
                - 'true'
        probeNamespaceSelector:
          matchExpressions:
            - key: openshift.io/cluster-monitoring
              operator: NotIn
              values:
                - 'true'
        serviceMonitorNamespaceSelector:
          matchExpressions:
            - key: openshift.io/cluster-monitoring
              operator: NotIn
              values:
                - 'true'
    bbtests:
      enabled: true
      cypress:
        artifacts: true
        openshift: true
          #image: registry1.dso.mil/bigbang-ci/cypress-kubectl:8.3.1
        envs:
          cypress_prometheus_url: 'https://prometheus.bigbang.dev'
          cypress_grafana_url: 'https://grafana.bigbang.dev'
          cypress_alertmanager_url: 'https://alertmanager.bigbang.dev'
          #cypress_prometheus_url: 'http://monitoring-monitoring-kube-prometheus.monitoring.svc.cluster.local:9090'
          #cypress_grafana_url: 'http://monitoring-grafana.monitoring.svc.cluster.local'
          #cypress_alertmanager_url: 'http://monitoring-monitoring-kube-alertmanager.monitoring.svc.cluster.local:9093'
          cypress_check_istio_dashboards: 'true'
          cypress_keycloak_test_enable: 'false'
          cypress_tnr_username: "cypress"
          cypress_tnr_password: "tnr_w!G33ZyAt@C8"   

eckOperator:
  enabled: true
  git:
    tag: null
    branch: "main"

fluentbit:
  enabled: true
  git:
    tag: null
    branch: "openshift-updates"
  values:
    PodSecurityContext: null
    openShift:
      securityContextConstraints:
        create: true
    securityContext:
      seLinuxOptions: null
      privileged: true
    bbtests:
      enabled: true
      cypress:
        artifacts: true
        openshift: true

elasticsearchKibana:
  enabled: true
  git:
    tag: null
    branch: "openshift-values"
  values:
    kibana:
      count: 1
      resources:
        requests:
          cpu: 400m
          memory: 1Gi
        limits:
          cpu: 1000m
          memory: 2Gi
    elasticsearch:
      master:
        count: 1
        resources:
          requests:
            cpu: 2000m
            memory: 4Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        heap:
          min: 3g
          max: 3g
      data:
        count: 1
        resources:
          requests:
            cpu: 2000m
            memory: 4Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        heap: 
          min: 3g
          max: 3g
    bbtests:
      enabled: true
      cypress:
        artifacts: true
        openshift: true
        envs:
          cypress_expect_logs: "true"
          cypress_kibana_url: "https://kibana.bigbang.dev" 

clusterAuditor:
  enabled: true
  git:
    tag: null
    branch: "main"
  values:
    resources:
      requests:
        cpu: 400m
        memory: 2Gi
      limits:
        cpu: null
        memory: null

gatekeeper:
  enabled: true
  git: 
    tag: 3.10.0-bb.2
  values:
    replicas: 3 
    controllerManager:
      resources:
        requests:
          cpu: 100m
          memory: 512Mi
        limits:
          cpu: 1000m
          memory: 1024Mi
    audit:
      resources:
        requests:
          cpu: 400m
          memory: 768Mi
        limits:
          cpu: 1000m
          memory: 1024Mi
    violations:
      allowedDockerRegistries:
        enforceanmentAction: dryrun
        parameters:
          repos: 
            - registry1.dso.mil
            - quay.io
            - registry.redhat.io
            - image-registry.openshift-image-registry.svc
      bannedImageTags:
        enforcementAction: dryrun
      selinuxPolicy:
        enabled: false
      httpsOnly:
        enforcementAction: dryrun
        parameters: 
          excludedResources: 
            - harbor/cm-acme-http-solver-.*
            - gitlab/cm-acme-http-solver-.*
      uniqueIngressHost:
        enforcementAction: dryrun
        parameters:
          excludedResources:
            - harbor/cm-acme-http-solver-.*
            - gitlab/cm-acme-http-solver-.*
      
istioOperator:
  enabled: true
  git:
    tag: null
    branch: "main"

istio:
  enabled: true
  git:
    tag: null
    branch: "main"
  values:
    profile: "openshift"
    ingressGateways:
      public-ingressgateway:
        k8s: 
          hpaSpec:
            minReplicas: 3
            maxReplicas: 5

jaeger:
  enabled: true
  git:
    tag: null
    branch: "main"
  values:
    jaeger:
      spec: 
        ingress:
          security: none
    sso: 
      enabled: true
    bbtests:
      enabled: true
      cypress:
        artifacts: true
        openshift: true
        envs:
          cypress_url: "https://tracing.bigbang.dev"

kiali: 
  enabled: true
  git:
    tag: null
    branch: "main"
  values: 
    cr: 
      spec: 
        identity: 
          cert_file: ""
          private_key_file: ""
    bbtests:
      enabled: true
      cypress:
        artifacts: true
        openshift: true
        #artifactsHostPath: /mnt/cypress
        #privileged: true
        resources:
          requests:
            cpu: 3
            memory: 2Gi
          limits:
            cpu: 3
            memory: 2Gi
        envs:
          cypress_url: 'https://kiali:{{ default 20001 .Values.port }}'
          #cypress_url: 'https://kiali.bigbang.dev'
          cypress_check_data: 'true'


addons:


  vault:
    enabled: false
    git:
      tag: null
      branch: "openshift-values"
    ingress:
      gateway: "passthrough"
      key: "" # Gets added via chart/ingress-certs.yaml
      cert: "" # Gets added via chart/ingress-certs.yaml
    sso:
      enabled: false
      client_id: dev_00eb8904-5b88-4c68-ad67-cec0d2e07aa6_vault
    values:
      minio:
        enabled: false
        disableSSL: true
        endpoint: minio
        accessKey: "minio"
        secretKey: "minio123"
        bucketName: vault-data
      autoInit:
        enabled: true
      global:
        tlsDisable: false
        openshift: true
      injector:
        affinity: |
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchLabels:
                      app.kubernetes.io/name: {{ template "vault.name" . }}-agent-injector
                      app.kubernetes.io/instance: "{{ .Release.Name }}"
                      component: webhook
                  topologyKey: kubernetes.io/hostname
      server:
        annotations:
          traffic.sidecar.istio.io/excludeOutboundPorts: "443"
        extraEnvironmentVars:
          VAULT_SKIP_VERIFY: "true"
          VAULT_LOG_FORMAT: "json"
        dataStorage:
          enabled: true
          size: 256Mi
        auditStorage:
          size: 256Mi
        ha:
          enabled: true
          replicas: 1
          apiAddr: "https://vault.bigbang.dev"
          raft:
            enabled: true
            config: |
              ui = true

              listener "tcp" {
                tls_disable = false
                address = "[::]:8200"
                cluster_address = "[::]:8201"
                tls_cert_file = "/vault/tls/tls.crt"
                tls_key_file  = "/vault/tls/tls.key"
                telemetry {
                  unauthenticated_metrics_access = true
                }
              }

              storage "raft" {
                path = "/vault/data"

                retry_join {
                  leader_api_addr = "https://vault-vault-0.vault-vault-internal:8200"
                  leader_client_cert_file = "/vault/tls/tls.crt"
                  leader_client_key_file = "/vault/tls/tls.key"
                  leader_tls_servername = "vault.bigbang.dev"
                }
              }

              seal "awskms" {
                region = "us-gov-west-1"
                kms_key_id = "arn:aws-us-gov:kms:us-gov-west-1:141078740716:key/4a90c90f-6199-43e8-aae0-9b2395691abe"
                endpoint = "https://kms.us-gov-west-1.amazonaws.com"
                #access_key = "AKIASBWHSX3WOMPBIRCW"
                #secret_key = "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"
              }

              telemetry {
                prometheus_retention_time = "24h"
                disable_hostname = true
              }

              service_registration "kubernetes" {}

      bbtests:
        enabled: true
        cypress:
          artifacts: true
          openshift: true
          envs:
            cypress_vault_url: "https://vault.bigbang.dev"

  minioOperator:
    enabled: true
    git:
      tag: null
      branch: "openshift-updates"
    values:
      istio: 
        enabled: true
      openshift: true

  argocd:
     enabled: true
     values:
       controller:
         resources:
           requests:
             cpu: 500m
             memory: 2Gi
           limits: null
       dex:
         resources:
           requests:
             cpu: 10m
             memory: 128Mi
           limits: null
       redis -bb:
         mast er:
           persistence:
             size: 512Mi
         replica:
           persistence:
             size: 512Mi
       redis:
         resources:
           requests:
             cpu: 50m
             memory: 256Mi
           limits: null
       server:
         resources:
           requests:
             cpu: 20m
             memory: 128Mi
           limits: null
       repoServer:
         resources:
           requests:
             cpu: 100m
             memory: 256Mi
           limits: null
       bbtests:
        enabled: true
        cypress:
          artifacts: true
          openshift: true
          #artifactsHostPath: /mnt/cypress
          #privileged: true
          envs:
            cypress_url: "https://argocd.bigbang.dev"
            #cypress_url: http://argocd-server:80
            cypress_user: "admin"
            cypress_waittime: "20000"
            cypress_timeout: "30000"
          secretEnvs:
          - name: cypress_password
            valueFrom:
              secretKeyRef:
                key: "password"
                name: argocd-initial-admin-secret
      # configs::
      #   secret:
      #       argocdServerAdminPassword: "$2a$10$rUDZDckdDZ2TEwk9PDs3QuqjkL58qR1IHE1Kj4MwDx.7/m5dytZJm"
    

  anchore:
    enabled: true
    git:
      tag: null
      branch: "openshift-updates"
    values:
      ensureDbJobs:
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits: null
      sso:
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits: null
      postgresql:
        persistence:
          size: 256Mi
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits: null
        metrics:
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits: null
      anchoreAnalyzer:
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits: null
      anchoreApi:
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits: null
      anchoreCatalog:
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits: null
      anchorePolicyEngine:
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits: null
      anchoreSimpleQueue:
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits: null
      anchoreEngineUpgradeJob:
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits: null
      anchore-feeds-db:
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits: null
        metrics:
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits: null
      anchoreEnterpriseFeeds:
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits: null
      anchoreEnterpriseFeedsUpgradeJob:
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits: null
      anchoreEnterpriseRbac:
        authResources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits: null
        managerResources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits: null
      anchoreEnterpriseReports:
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits: null
      anchoreEnterpriseNotifications:
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits: null
      anchoreEntperpiseUi:
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits: null
      anchoreEnterpriseEngineUpgradeJob:
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits: null
      bbtests:
        enabled: true
        cypress:
          artifacts: true
          openshift: true
          envs:
            ANCHORE_CLI_URL: "https://anchore-api.bigbang.dev/v1"
            ANCHORE_CLI_USER: admin
            ANCHORE_SCAN_IMAGE: quay.io/prometheus/node-exporter:latest
          secretEnvs:
            - name: ANCHORE_CLI_PASS
              valueFrom:
                secretKeyRef:
                  name: "anchore-anchore-engine-admin-pass"
                  key: ANCHORE_ADMIN_PASSWORD     

  sonarqube:
    enabled: true
    git:
      tag: null
      branch: "openshift-updates"
    values:
      resources:
        requests:
          cpu: 200m
          memory: 512Mi
        limits: null
      persistence:
        size: 5Gi
      postgresql:
        persistence:
          size: 256Mi
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits: null
      securityContext:
        enabled: false
      serviceAccount:
        create: true
      bbtests:
        enabled: true
        cypress:
          artifacts: true
          openshift: true
          envs:
            cypress_url: "https://sonarqube.bigbang.dev"
            cypress_url_setup: "https://sonarqube.bigbang.dev/setup"   
 
  minio:
    enabled: true
    git:
      tag: null
      branch: "openshift-updates"
    values:
      annotations:
        traffic.sidecar.istio.io/excludeOutboundPorts: "443"
      tenant:
        pools:
        - servers: 3
          volumesPerServer: 4
          size: 256Mi
          resources:
            requests:
              cpu: 250m
              memory: 512Mi
            limits: null
          securityContext:
            runAsUser: 1001
            runAsGroup: 1001
            fsGroup: 1001
            runAsNonRoot: true
      istio: 
        enabled: true
      openshift: true

  authservice:
    enabled: true
    git:
      tag: null
      branch: "openshift-updates"  
    chains:
      minimal:
        callback_uri: "https://minimal.bigbang.dev"
    values:
      resources:
        requests:
          cpu: 100m
          memory: 256Mi
        limits: null
      redis:
        master:
          persistence:
            size: 256Mi
        replica:
          persistence:
            size: 256Mi
   
  gitlab:
    enabled: true
    git:
      tag: null
      branch: "openshift-updates"
    flux:
      timeout: 30m
    values:
      shared-secrets:  ## Increased mem for OpenShift shared secrets pod to succeed
        resources:
          requests:
            cpu: 30m
            memory: 1024Mi
          limits: null
      gitlab-runner:
        resources:
          requests:
            cpu: 20m
          limits: null
      gitlab:
        gitaly:
          persistence:
            size: 256Mi
          resources:
            ## values raised to help pass CI after default values for gitaly are fixed then can revert to original request.
            #requests:
            #  cpu: 50m
            #limits: null
            requests:
              cpu: 400m
              memory: 600Mi
            limits: null
        migrations:
          resources:
            requests:
              cpu: 30m
            limits: null
        toolbox:
          persistence:
            size: 256Mi
          resources:
            requests:
              cpu: 20m
            limits: null
        sidekiq:
          enabled: true
          annotations:
            traffic.sidecar.istio.io/excludeOutboundPorts: "5432,6379"
        webservice:
          annotations:
            traffic.sidecar.istio.io/excludeOutboundPorts: "5432,6379"
      postgresql:
        persistence:
          size: 256Mi
        metrics:
          resources:
            requests:
              cpu: 50m
            limits: null
      minio:
        persistence:
          size: 256Mi
        resources:
          requests:
            cpu: 100m
          limits: null
      redis:
        master:
          persistence:
            size: 256Mi
        slave:
          persistence:
            size: 256Mi
      bbtests:
        enabled: true
        scripts:
          image: "registry1.dso.mil/bigbang-ci/gitlab-tester:0.0.4"
          envs:
            GITLAB_USER: "testuser"
            GITLAB_PASS: "Password123h56a78"
            GITLAB_EMAIL: "testuser@example.com"
            GITLAB_PROJECT: "my-awesome-project"
            GITLAB_REPOSITORY: http://gitlab-webservice-default.gitlab.svc.cluster.local:8181
            GITLAB_ORIGIN: http://testuser:Password123h56a78@gitlab-webservice-default.gitlab.svc.cluster.local:8181
            GITLAB_REGISTRY: gitlab-registry-test-svc.gitlab.svc.cluster.local:80

        cypress:
          artifacts: true
          openshift: true
          envs:
            cypress_baseUrl: https://gitlab.bigbang.dev
            cypress_gitlab_first_name: "test"
            cypress_gitlab_last_name: "user"
            cypress_gitlab_username: "testuser"
            cypress_gitlab_password: "Password123h56a78"
            cypress_gitlab_email: "testuser@example.com"
            cypress_gitlab_project: "my-awesome-project"
            cypress_keycloak_username: "cypress"
            cypress_keycloak_password: "tnr_w!G33ZyAt@C8"
          secretEnvs:
          - name: cypress_adminpassword
            valueFrom:
              secretKeyRef:
                name: gitlab-gitlab-initial-root-password
                key: password
         #scripts:
         #image: "registry1.dso.mil/bigbang-ci/gitlab-tester:0.0.4"
         #envs:
         #GITLAB_REPOSITORY: https://gitlab.bigbang.dev
         #GITLAB_ORIGIN: https://testuser:Password123h56a78@gitlab.bigbang.dev
         #GITLAB_REGISTRY: registry.bigbang.dev       

  gitlabRunner:
    enabled: true
    git:
      tag: null
      branch: "openshift-updates"
    values:
      resources:
        requests:
          memory: 128Mi
          cpu: 100m
        limits: null
      autoRegister:
        enabled: true
          #policies:
          # gitlab-runner:
          #exclude:
          # any:
          #  - resources:
          #      namespaces:
          #        - gitlab-runner
      bbtests:
        enabled: true
        cypress:
          artifacts: true
          openshift: true
          envs:
            cypress_baseUrl: "https://gitlab.bigbang.dev"
            cypress_gitlab_first_name: "testrunner"
            cypress_gitlab_last_name: "userrunner"
            cypress_gitlab_email: "gitlab@bigbang.dev"
            cypress_gitlab_username: "gitlabrunner_user"
            cypress_gitlab_password: "Runner_PaSsw0rd123"
            cypress_gitlab_project: "runner-hello-world"
          secretEnvs:
            - name: cypress_adminpassword
              valueFrom:
                secretKeyRef:
                  name: gitlab-gitlab-initial-root-password
                  key: password     

  nexusRepositoryManager:
    enabled: true
    git:
      tag: null
      branch: "openshift-updates"
    values:
      persistence:
        # Do NOT set this below 5Gi, nexus will fail to boot
        storageSize: 5Gi
      nexus:
        resources:
          requests:
            cpu: 100m
            memory: 1500Mi
          limits: null
      bbtests:
        enabled: true
        cypress:
          artifacts: true
          openshift: true
          envs:
            cypress_nexus_url: "https://nexus.bigbang.dev"
   
     

  mattermostOperator:
    # -- Toggle deployment of Mattermost Operator.
    enabled: true
    git:
      tag: null
      branch: "openshift-updates"

  mattermost:
    enabled: true
    git:
      tag: null
      branch: "openshift-updates"
    values:
      postgresql:
        persistence:
          size: 256Mi
      resources:
        requests:
          cpu: 200m
          memory: 256Mi
        limits: null
      podAnnotations:
        traffic.sidecar.istio.io/excludeOutboundPorts: "443"
        traffic.sidecar.istio.io/excludeOutboundPorts: "5432"
      minio:
        annotations:
          traffic.sidecar.istio.io/excludeOutboundPorts: "443"
        tenants:
          pools:
          - servers: 1
            volumesPerServer: 4
            size: 256Mi
            resources:
              requests:
                cpu: 250m
                memory: 512Mi
              limits: null
            securityContext:
              runAsUser: 1001
              runAsGroup: 1001
              fsGroup: 1001
              runAsNonRoot: true
            containerSecurityContext:
              runAsUser: 1001
              runAsGroup: 1001
              runAsNonRoot: true
      bbtests:
        enabled: true
        cypress:
          artifacts: true
          openshift: true
          #image: registry1.dso.mil/bigbang-ci/cypress-kubectl:8.3.1
          envs:
            #cypress_url: https://chat.bigbang.dev
            cypress_url: http://mattermost.mattermost.svc.cluster.local:8065
            cypress_mm_email: "test@bigbang.dev"
            cypress_mm_user: "bigbang"
            cypress_mm_password: "Bigbang#123"
            cypress_waittime: "8000"         

  keycloak:
    enabled: true
    git:
      tag: null
      branch: "openshift-updates"
    ingress:
      gateway: "passthrough"
      key: "" # Gets added via chart/ingress-certs.yaml
      cert: "" # Gets added via chart/ingress-certs.yaml
    values:
      podAnnotations:
        traffic.sidecar.istio.io/excludeOutboundPorts: "5432"
      replicas: 1
      resources:
        requests:
          cpu: 250m
          memory: 250Mi
        limits: {}
      bbtests:
        enabled: false
        cypress:
          envs:
            cypress_url: "https://keycloak.bigbang.dev"
      command:
        - "/opt/keycloak/bin/kc.sh"
      args:
        - "start"
        - "--import-realm"
      extraEnv: |-
        - name: KC_HTTPS_CERTIFICATE_FILE
          value: /opt/keycloak/conf/tls.crt
        - name: KC_HTTPS_CERTIFICATE_KEY_FILE
          value: /opt/keycloak/conf/tls.key
        - name: KC_HTTP_ENABLED
          value: "true"
        - name: KC_HTTP_RELATIVE_PATH
          value: /auth
        - name: KC_HTTPS_CLIENT_AUTH
          value: request
        - name: KC_PROXY
          value: passthrough
        - name: KC_HTTPS_TRUST_STORE_FILE
          value: /opt/keycloak/conf/truststore.jks
        - name: KC_HTTPS_TRUST_STORE_PASSWORD
          value: password
        - name: KC_HOSTNAME
          value: keycloak.bigbang.dev
        - name: KC_HOSTNAME_STRICT
          value: "true"
        - name: KC_HOSTNAME_STRICT_HTTPS
          value: "true"
        - name: KC_LOG_LEVEL
          value: "org.keycloak.events:DEBUG,org.infinispan:INFO,org.jgroups:INFO"
        - name: KC_CACHE
          value: ispn
        - name: KC_CACHE_STACK
          value: kubernetes
      secrets:
        env:
          stringData:
            CUSTOM_REGISTRATION_CONFIG: /opt/keycloak/conf/customreg.yaml
        customreg:
          stringData:
            customreg.yaml: '{{ .Files.Get "resources/dev/baby-yoda.yaml" }}'
        realm:
          stringData:
            realm.json: '{{ .Files.Get "resources/dev/baby-yoda-bb-ci.json" }}'
        truststore:
          data:
            truststore.jks: |-
              {{ .Files.Get "resources/dev/truststore.jks" | b64enc }}
        quarkusproperties:
          stringData:
            quarkus.properties: '{{ .Files.Get "resources/dev/quarkus.properties" }}'
      extraInitContainers: |-
        - name: plugin
          image: registry1.dso.mil/ironbank/big-bang/p1-keycloak-plugin:3.2.0
          imagePullPolicy: Always
          command:
          - sh
          - -c
          - |
            cp /app/p1-keycloak-plugin.jar /init
            ls -l /init
          volumeMounts:
          - name: plugin
            mountPath: "/init"
      extraVolumes: |-
        - name: customreg
          secret:
            secretName: {{ include "keycloak.fullname" . }}-customreg
        - name: realm
          secret:
            secretName: {{ include "keycloak.fullname" . }}-realm
        - name: plugin
          emptyDir: {}
        - name: truststore
          secret:
            secretName: {{ include "keycloak.fullname" . }}-truststore
        - name: quarkusproperties
          secret:
            secretName: {{ include "keycloak.fullname" . }}-quarkusproperties
            defaultMode: 0777
      extraVolumeMounts: |-
        - name: customreg
          mountPath: /opt/keycloak/conf/customreg.yaml
          subPath: customreg.yaml
          readOnly: true
        - name: realm
          mountPath: /opt/keycloak/data/import/realm.json
          subPath: realm.json
        - name: plugin
          mountPath: /opt/keycloak/providers/p1-keycloak-plugin.jar
          subPath: p1-keycloak-plugin.jar
        - name: truststore
          mountPath: /opt/keycloak/conf/truststore.jks
          subPath: truststore.jks
        - name: quarkusproperties
          mountPath: /opt/keycloak/conf/quarkus.properties
          subPath: quarkus.properties
     
      bbtests:
        enabled: true
        cypress:
          artifacts: false
          envs:
            cypress_url: "https://keycloak.bigbang.dev"     
 
  fortify:
    enabled: true
    git:
      tag: null
      branch: "openshift-updates"
    values:
      istio:
        enabled: true
      openshift: true
      bbtests:
        enabled: true
        cypress: 
          artifacts: true
          openshift: true
          envs:
            cypress_url: "http://fortify-ssc-service:80"
            cypress_new_pwd: "BigBang@2023!"
        scripts:
          image: "registry1.dso.mil/bigbang-ci/gitlab-tester:0.0.4"
          envs: {}
 


  harbor:
    enabled: true
    git:
      tag: null
      branch: "openshift-values"
    redis:
        external:
          addr: harbor-redis-bb-master:6379
    values:
      bbtests:
        enabled: true
        cypress:
          artifacts: true
          openshift: true
          envs:
            cypress_url: "https://harbor.bigbang.dev"
        scripts:
          image: "registry1.dso.mil/bigbang-ci/gitlab-tester:0.0.4"
          envs:
            HARBOR_REGISTRY: "harbor.bigbang.dev"
            HARBOR_USER: "admin"
            HARBOR_PASS: "Harbor12345"
            #HARBOR_REGISTRY: "harbor:80"
            HARBOR_REGISTRY: "harbor-core:80"
            HARBOR_PROJECT: "library" 

  velero:
    enabled: true
    git:
      tag: null
      branch: "openshift-updates"
    plugins:
    - aws
    values:
      plugins:
        aws:
          enabled: true
      istio:
        enabled: true
      serviceAccount:
        server:
          name: velero
      configuration:
        backupStorageLocation:
        - bucket: velero
          provider: aws
          default: true
          config:
            region: velero
            s3ForcePathStyle: "true"
            s3Url: https://minio-api.bigbang.dev
        volumeSnapshotLocation:
        - name: default
          provider: aws
          config:
            region: velero
      credentials:
        useSecret: true
        secretContents:
          cloud: |
            [default]
            aws_access_key_id = minio
            aws_secret_access_key = minio123
      cleanUpCRDs: true
      bbtests:
        enabled: false
        cypress:
          artifacts: true
          openshift: true
        scripts:
          envs:
            MINIO_HOST: https://minio-api.bigbang.dev

  haproxy:
    enabled: true
    git:
      tag: null
      branch: "openshift-updates"
