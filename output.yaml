---
# Source: bigbang/templates/authservice/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: authservice
  labels:
    istio-injection: enabled
    app.kubernetes.io/name: authservice
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
---
# Source: bigbang/templates/bbctl/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: bbctl
  labels:
    app.kubernetes.io/name: bbctl
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
    istio-injection: enabled
---
# Source: bigbang/templates/istio-crds/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: istio-system
  labels:
    istio-base-managed: Reconcile
    istio-injection: disabled
    app.kubernetes.io/name: istio-system
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
---
# Source: bigbang/templates/istio-crds/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: istio-gateway
  labels:
    istio-gateway-managed: Reconcile
    istio-injection: enabled
    app.kubernetes.io/name: istio-gateway
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
---
# Source: bigbang/templates/jaeger/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: jaeger
  labels:
    istio-injection: enabled
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
---
# Source: bigbang/templates/kiali/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: kiali
  labels:
    istio-injection: enabled
    app.kubernetes.io/name: kiali
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
---
# Source: bigbang/templates/kyverno-reporter/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/name: kyverno-reporter
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
    istio-injection: enabled
  name: kyverno-reporter
---
# Source: bigbang/templates/kyverno/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/name: kyverno
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
    istio-injection: disabled
  name: kyverno
---
# Source: bigbang/templates/loki/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: logging
  labels:
    app.kubernetes.io/name: logging
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
    istio-injection: enabled
---
# Source: bigbang/templates/minio-operator/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: minio-operator
  labels:
    istio-injection: enabled
    app.kubernetes.io/name: minioOperator
    app.kubernetes.io/component: "application-utilities"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
---
# Source: bigbang/templates/monitoring/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
  labels:
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
    istio-injection: enabled
---
# Source: bigbang/templates/neuvector/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: neuvector
  labels:
    app.kubernetes.io/name: neuvector
    app.kubernetes.io/component: "sandbox"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
    istio-injection: enabled
---
# Source: bigbang/templates/promtail/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: promtail
  labels:
    app.kubernetes.io/name: promtail
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
    istio-injection: enabled
---
# Source: bigbang/templates/tempo/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: tempo
  labels:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
    istio-injection: enabled
---
# Source: bigbang/templates/grafana/flux/ingress-flux.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-from-flux
  namespace: monitoring
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: grafana
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: notification-controller
      namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: flux-system
    ports:
    - port: 3000
      protocol: TCP
---
# Source: bigbang/templates/authservice/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-authservice-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    "\n# hostname is deprecated and replaced with domain. But if hostname exists then
      use it.\n\nistio:\n  enabled: true\n  hardened:\n    enabled: true\n  clusterWideHardenedEnabled:
      true\n\nimage: \n  pullPolicy: IfNotPresent\n  \nimagePullSecrets:\n  - name: private-registry\n\npodAnnotations:\n
      \ bigbang.dev/istioVersion: 1.23.6\n\nopenshift: false\n\nmonitoring:\n  enabled:
      true\n\nnetworkPolicies:\n  enabled: true\n  istioNamespaceSelector:\n  \n    ingress:
      istio-gateway\n    egress: istio-system\n  ingressLabels:\n    app: public-ingressgateway\n
      \   istio: null\nautoscaling:\n  enabled: true\n  minReplicas: 2\n  maxReplicas:
      3\nredis-bb:\n  metrics:\n    enabled: true \n    image:\n      pullSecrets:\n        -
      private-registry\n    serviceMonitor:\n      enabled: true\n      namespace: authservice\n
      \     selector: \n        app.kubernetes.io/name: redis-bb\n        app.kubernetes.io/instance:
      authservice-authservice\n      scheme: https\n      tlsConfig:\n        caFile:
      /etc/prom-certs/root-cert.pem\n        certFile: /etc/prom-certs/cert-chain.pem\n
      \       keyFile: /etc/prom-certs/key.pem\n        insecureSkipVerify: true\n    prometheusRule:\n
      \     enabled: true \n      namespace: monitoring\nissuer_uri: https://keycloak.dev.bigbang.mil/auth/realms/baby-yoda\n\nglobal:\n
      \ oidc:\n    host: keycloak.dev.bigbang.mil\n    realm: baby-yoda\n  jwks_uri: \"https://keycloak.dev.bigbang.mil/auth/realms/baby-yoda/protocol/openid-connect/certs\"\n
      \ certificate_authority: \"-----BEGIN CERTIFICATE-----\\nMIIFBTCCAu2gAwIBAgIQS6hSk/eaL6JzBkuoBI110DANBgkqhkiG9w0BAQsFADBP\\nMQswCQYDVQQGEwJVUzEpMCcGA1UEChMgSW50ZXJuZXQgU2VjdXJpdHkgUmVzZWFy\\nY2ggR3JvdXAxFTATBgNVBAMTDElTUkcgUm9vdCBYMTAeFw0yNDAzMTMwMDAwMDBa\\nFw0yNzAzMTIyMzU5NTlaMDMxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBF\\nbmNyeXB0MQwwCgYDVQQDEwNSMTAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\\nAoIBAQDPV+XmxFQS7bRH/sknWHZGUCiMHT6I3wWd1bUYKb3dtVq/+vbOo76vACFL\\nYlpaPAEvxVgD9on/jhFD68G14BQHlo9vH9fnuoE5CXVlt8KvGFs3Jijno/QHK20a\\n/6tYvJWuQP/py1fEtVt/eA0YYbwX51TGu0mRzW4Y0YCF7qZlNrx06rxQTOr8IfM4\\nFpOUurDTazgGzRYSespSdcitdrLCnF2YRVxvYXvGLe48E1KGAdlX5jgc3421H5KR\\nmudKHMxFqHJV8LDmowfs/acbZp4/SItxhHFYyTr6717yW0QrPHTnj7JHwQdqzZq3\\nDZb3EoEmUVQK7GH29/Xi8orIlQ2NAgMBAAGjgfgwgfUwDgYDVR0PAQH/BAQDAgGG\\nMB0GA1UdJQQWMBQGCCsGAQUFBwMCBggrBgEFBQcDATASBgNVHRMBAf8ECDAGAQH/\\nAgEAMB0GA1UdDgQWBBS7vMNHpeS8qcbDpHIMEI2iNeHI6DAfBgNVHSMEGDAWgBR5\\ntFnme7bl5AFzgAiIyBpY9umbbjAyBggrBgEFBQcBAQQmMCQwIgYIKwYBBQUHMAKG\\nFmh0dHA6Ly94MS5pLmxlbmNyLm9yZy8wEwYDVR0gBAwwCjAIBgZngQwBAgEwJwYD\\nVR0fBCAwHjAcoBqgGIYWaHR0cDovL3gxLmMubGVuY3Iub3JnLzANBgkqhkiG9w0B\\nAQsFAAOCAgEAkrHnQTfreZ2B5s3iJeE6IOmQRJWjgVzPw139vaBw1bGWKCIL0vIo\\nzwzn1OZDjCQiHcFCktEJr59L9MhwTyAWsVrdAfYf+B9haxQnsHKNY67u4s5Lzzfd\\nu6PUzeetUK29v+PsPmI2cJkxp+iN3epi4hKu9ZzUPSwMqtCceb7qPVxEbpYxY1p9\\n1n5PJKBLBX9eb9LU6l8zSxPWV7bK3lG4XaMJgnT9x3ies7msFtpKK5bDtotij/l0\\nGaKeA97pb5uwD9KgWvaFXMIEt8jVTjLEvwRdvCn294GPDF08U8lAkIv7tghluaQh\\n1QnlE4SEN4LOECj8dsIGJXpGUk3aU3KkJz9icKy+aUgA+2cP21uh6NcDIS3XyfaZ\\nQjmDQ993ChII8SXWupQZVBiIpcWO4RqZk3lr7Bz5MUCwzDIA359e57SSq5CCkY0N\\n4B6Vulk7LktfwrdGNVI5BsC9qqxSwSKgRJeZ9wygIaehbHFHFhcBaMDKpiZlBHyz\\nrsnnlFXCb5s8HKn5LsUgGvB24L7sGNZP2CX7dhHov+YhD+jozLW2p9W4959Bz2Ei\\nRmqDtmiXLnzqTpXbI+suyCsohKRg6Un0RC47+cpiVwHiXZAW+cn8eiNIjqbVgXLx\\nKPpdzvvtTnOPlC7SQZSYmdunr3Bf9b77AiC/ZidstK36dRILKz7OA54=\\n-----END
      CERTIFICATE-----\\n\"\n  authorization_uri: https://keycloak.dev.bigbang.mil/auth/realms/baby-yoda/protocol/openid-connect/auth\n
      \ token_uri: https://keycloak.dev.bigbang.mil/auth/realms/baby-yoda/protocol/openid-connect/token\n
      \ logout_redirect_uri: https://keycloak.dev.bigbang.mil/auth/realms/baby-yoda/protocol/openid-connect/logout\n
      \ redis_server_uri: \"tcp://authservice-authservice-redis-bb-master:6379\"\n\nchains:\n
      \ \n  minimal:\n    callback_uri: https://minimal.dev.bigbang.mil/login"
  overlays: |
    redis:
      enabled: true
    redis-bb:
      master:
        persistence:
          size: 256Mi
      replica:
        autoscaling:
          enabled: false
        persistence:
          size: 256Mi
        replicaCount: 0
    resources:
      requests:
        memory: 100Mi
---
# Source: bigbang/templates/bbctl/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-bbctl-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    "\n\nimage:\n  imagePullPolicy: IfNotPresent\n\nregistryCredentials:\nemail: \"\"\npassword:
      \"\"\nregistry: registry1.dso.mil\nusername: \"\"\n\ncredentialsFile:\n  credentials:\n
      \ - uri: registry1.dso.mil\n    username: \n    password: \n  - uri: \"repo1.dso.mil\"\n
      \   username: \"\"\n    password: \"\"\n\nbaseConfig:\n  skip-update-check: true\n
      \ preflight-check:\n    registryserver: \"https://registry1.dso.mil\"\n    registryusername:
      \n    registrypassword: \n\nistio:\n  enabled: true\n  hardened:\n    enabled: true"
  overlays: |
    bbtests:
      cypress:
        envs:
          cypress_grafana_password: prom-operator
          cypress_grafana_url: https://grafana.dev.bigbang.mil
          cypress_grafana_username: admin
      enabled: true
    istio:
      hardened:
        customAuthorizationPolicies:
        - enabled: true
          name: allow-intranamespace-bctl
          spec:
            action: ALLOW
            rules:
            - from:
              - source:
                  namespaces:
                  - loki
                  - grafana
                  - promtail
                  - monitoring
        customServiceEntries:
        - enabled: true
          name: cypress-service-entries-bbctl
          spec:
            hosts:
            - registry.npmjs.org
            - download.cypress.io
            - cdn.cypress.io
            - repo1.dso.mil
            - grafana.dev.bigbang.mil
            location: MESH_EXTERNAL
            ports:
            - name: https
              number: 443
              protocol: TLS
            resolution: DNS
---
# Source: bigbang/templates/grafana/flux/grafana-auth-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: grafana-flux-auth
  namespace: monitoring
  labels:
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
type: kubernetes.io/opaque
stringData:
  username: admin
  password: prom-operator
---
# Source: bigbang/templates/grafana/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-grafana-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    "\n# hostname is deprecated and replaced with domain. But if hostname exists then
      use it.\nhostname: dev.bigbang.mil\ndomain: dev.bigbang.mil\n\nflux:\n  enabled:
      true\n\nnetworkPolicies:\n  enabled: true\n  istioNamespaceSelector:\n  \n    ingress:
      istio-gateway\n    egress: istio-system\n  controlPlaneCidr: 0.0.0.0/0\n  ingressLabels:\n
      \   app: public-ingressgateway\n    istio: ingressgateway\n\nopenshift: false\n\nminioOperator:\n
      \ enabled: true\n\ngitlabRunner:\n  enabled: false\n\nistio:\n  enabled: true\n
      \ hardened:\n    enabled: true\n  grafana:\n    enabled: true\n    gateways:\n      -
      istio-gateway/public-ingressgateway\n  injection: enabled\n\nanchore:\n  enabled:
      false\n\nkiali:\n  enabled: true\n\nloki:\n  enabled: true\n\ntempo:\n  enabled:
      true\nredis:\n  enabled: true\n\nvault:\n  enabled: false\n  tlsDisable: false\n\nsso:\n
      \ enabled: false\nenv:\n  GF_FEATURE_TOGGLES_ENABLE: \"traceqlEditor tempoSearch
      tempoServiceGraph\"\n\nimage:\n  pullPolicy: IfNotPresent\n  pullSecrets:\n  - private-registry\nsidecar:\n
      \ imagePullPolicy: IfNotPresent\npodAnnotations:\n  bigbang.dev/istioVersion: 1.23.6\ndatasources:\n
      \ datasourcesbb.yaml:\n    apiVersion: 1\n    datasources:\n    - name: Prometheus\n
      \     type: prometheus\n      uid: prometheus\n      access: proxy\n      url: http://monitoring-monitoring-kube-prometheus.monitoring.svc:9090\n
      \     editable: true\n    - name: AuthService Master\n      type: redis-datasource\n
      \     access: proxy\n      url: authservice-authservice-redis-bb-master.authservice.svc.cluster.local:6379\n
      \     jsonData:\n        client: standalone\n    - name: AuthService Headless\n
      \     type: redis-datasource\n      access: proxy\n      url: authservice-authservice-redis-bb-headless.authservice.svc.cluster.local:6379\n
      \     jsonData:\n        client: standalone\n    - name: AuthService Replicas\n
      \     type: redis-datasource\n      access: proxy\n      url: authservice-authservice-redis-bb-replicas.authservice.svc.cluster.local:6379\n
      \     jsonData:\n        client: standalone\n    - name: Loki\n      type: loki\n
      \     url: http://logging-loki-gateway.logging.svc.cluster.local\n      access:
      proxy\n      editable: true\n      jsonData:\n        derivedFields:\n          -
      datasourceName: Tempo\n            matcherRegex: \"traceID=(\\\\w+)\"\n            name:
      TraceID\n            url: \"$${__value.raw}\"\n            datasourceUid: tempo\n
      \   - name: Tempo\n      type: tempo\n      access: proxy\n      orgId: 1\n      uid:
      tempo\n      url: http://tempo-tempo.tempo.svc:3100\n      isDefault: false\n      editable:
      true\n      jsonData:\n        httpMethod: GET\n        serviceMap:\n          datasourceUid:
      'prometheus'\n      jsonData:\n        httpMethod: GET\n        tracesToLogs:\n
      \         datasourceUid: 'Loki'\n          tags: ['job', 'instance', 'pod', 'namespace']\n
      \         mappedTags: [{ key: 'service.name', value: 'service' }]\n          mapTagNamesEnabled:
      false\n          spanStartTimeShift: '1h'\n          spanEndTimeShift: '1h'\n          filterByTraceID:
      false\n          filterBySpanID: false\n        serviceMap:\n          datasourceUid:
      'prometheus'\n        search:\n          hide: false\n        nodeGraph:\n          enabled:
      true\n        lokiSearch:\n          datasourceUid: 'Loki'\n\ngrafana.ini:\n  server:\n
      \   root_url: https://grafana.dev.bigbang.mil/\n\n  auth.generic_oauth:\n    enabled:
      false\n    name: SSO                    \nextraSecretMounts:\nserviceMonitor:\n
      \ enabled: true\n  scheme: https\n  tlsConfig:\n    caFile: /etc/prom-certs/root-cert.pem\n
      \   certFile: /etc/prom-certs/cert-chain.pem\n    keyFile: /etc/prom-certs/key.pem\n
      \   insecureSkipVerify: true  # Prometheus does not support Istio security naming,
      thus skip verifying target pod certificate"
  overlays: |
    bbtests:
      cypress:
        envs:
          cypress_grafana_url: https://grafana.dev.bigbang.mil
      enabled: true
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
        - disableDeletion: false
          editable: true
          folder: ""
          name: default
          options:
            path: /var/lib/grafana/dashboards
          orgId: 1
          type: file
    dashboards:
      default:
        k8s-deployment:
          datasource: Prometheus
          gnetId: 741
          revision: 1
    istio:
      hardened:
        customServiceEntries:
        - enabled: true
          name: cypress-service-entries-grafana
          spec:
            hosts:
            - registry.npmjs.org
            - download.cypress.io
            - cdn.cypress.io
            - repo1.dso.mil
            - grafana.dev.bigbang.mil
            location: MESH_EXTERNAL
            ports:
            - name: https
              number: 443
              protocol: TLS
            resolution: DNS
---
# Source: bigbang/templates/istio-crds/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-istio-crds-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    |-
      upstream:
        global:
          imagePullSecrets:
            - private-registry
  overlays: |
    {}
---
# Source: bigbang/templates/istio-gateway/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-istio-passthrough-gateway-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    |-
      gateway:
        servers:
        - hosts:
          - '*.dev.bigbang.mil'
          port:
            name: http
            number: 8080
            protocol: HTTP
          tls:
            httpsRedirect: true
        - hosts:
          - '*.dev.bigbang.mil'
          port:
            name: https
            number: 8443
            protocol: HTTPS
          tls:
            mode: PASSTHROUGH
      monitoring:
        enabled: true
      networkPolicies:
        enabled: true
      upstream:
        imagePullPolicy: IfNotPresent
        imagePullSecrets:
        - name: private-registry
        labels:
          istio: ingressgateway
        serviceAccount:
          create: true
          name: passthrough-ingressgateway-ingressgateway-service-account
  overlays: |
    null
---
# Source: bigbang/templates/istio-gateway/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-istio-public-gateway-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    |-
      gateway:
        servers:
        - hosts:
          - '*.dev.bigbang.mil'
          port:
            name: http
            number: 8080
            protocol: HTTP
          tls:
            httpsRedirect: true
        - hosts:
          - '*.dev.bigbang.mil'
          port:
            name: https
            number: 8443
            protocol: HTTPS
          tls:
            credentialName: public-cert
            mode: SIMPLE
      monitoring:
        enabled: true
      networkPolicies:
        enabled: true
      upstream:
        imagePullPolicy: IfNotPresent
        imagePullSecrets:
        - name: private-registry
        labels:
          istio: ingressgateway
        serviceAccount:
          create: true
          name: public-ingressgateway-ingressgateway-service-account
  overlays: |
    null
---
# Source: bigbang/templates/istiod/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-istiod-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    |-
      networkPolicies:
        enabled: true
        controlPlaneCIDRs:
          - 0.0.0.0/0
    
      monitoring:
        enabled: true
    
      authservice:
        enabled: true
    
      upstream:
        global:
          imagePullPolicy: IfNotPresent
          imagePullSecrets:
            - private-registry
        meshConfig:
          enableTracing: true
          defaultConfig:
            tracing:
              sampling: 10
              zipkin:
                address: "jaeger-collector.jaeger.svc:9411"
          extensionProviders:
            - name: "authservice"
              envoyExtAuthzGrpc:
                service: "authservice.authservice.svc.cluster.local"
                port: "10003"
        jwksResolverExtraRootCA: |-
          -----BEGIN CERTIFICATE-----
          MIIFBTCCAu2gAwIBAgIQS6hSk/eaL6JzBkuoBI110DANBgkqhkiG9w0BAQsFADBP
          MQswCQYDVQQGEwJVUzEpMCcGA1UEChMgSW50ZXJuZXQgU2VjdXJpdHkgUmVzZWFy
          Y2ggR3JvdXAxFTATBgNVBAMTDElTUkcgUm9vdCBYMTAeFw0yNDAzMTMwMDAwMDBa
          Fw0yNzAzMTIyMzU5NTlaMDMxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBF
          bmNyeXB0MQwwCgYDVQQDEwNSMTAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
          AoIBAQDPV+XmxFQS7bRH/sknWHZGUCiMHT6I3wWd1bUYKb3dtVq/+vbOo76vACFL
          YlpaPAEvxVgD9on/jhFD68G14BQHlo9vH9fnuoE5CXVlt8KvGFs3Jijno/QHK20a
          /6tYvJWuQP/py1fEtVt/eA0YYbwX51TGu0mRzW4Y0YCF7qZlNrx06rxQTOr8IfM4
          FpOUurDTazgGzRYSespSdcitdrLCnF2YRVxvYXvGLe48E1KGAdlX5jgc3421H5KR
          mudKHMxFqHJV8LDmowfs/acbZp4/SItxhHFYyTr6717yW0QrPHTnj7JHwQdqzZq3
          DZb3EoEmUVQK7GH29/Xi8orIlQ2NAgMBAAGjgfgwgfUwDgYDVR0PAQH/BAQDAgGG
          MB0GA1UdJQQWMBQGCCsGAQUFBwMCBggrBgEFBQcDATASBgNVHRMBAf8ECDAGAQH/
          AgEAMB0GA1UdDgQWBBS7vMNHpeS8qcbDpHIMEI2iNeHI6DAfBgNVHSMEGDAWgBR5
          tFnme7bl5AFzgAiIyBpY9umbbjAyBggrBgEFBQcBAQQmMCQwIgYIKwYBBQUHMAKG
          Fmh0dHA6Ly94MS5pLmxlbmNyLm9yZy8wEwYDVR0gBAwwCjAIBgZngQwBAgEwJwYD
          VR0fBCAwHjAcoBqgGIYWaHR0cDovL3gxLmMubGVuY3Iub3JnLzANBgkqhkiG9w0B
          AQsFAAOCAgEAkrHnQTfreZ2B5s3iJeE6IOmQRJWjgVzPw139vaBw1bGWKCIL0vIo
          zwzn1OZDjCQiHcFCktEJr59L9MhwTyAWsVrdAfYf+B9haxQnsHKNY67u4s5Lzzfd
          u6PUzeetUK29v+PsPmI2cJkxp+iN3epi4hKu9ZzUPSwMqtCceb7qPVxEbpYxY1p9
          1n5PJKBLBX9eb9LU6l8zSxPWV7bK3lG4XaMJgnT9x3ies7msFtpKK5bDtotij/l0
          GaKeA97pb5uwD9KgWvaFXMIEt8jVTjLEvwRdvCn294GPDF08U8lAkIv7tghluaQh
          1QnlE4SEN4LOECj8dsIGJXpGUk3aU3KkJz9icKy+aUgA+2cP21uh6NcDIS3XyfaZ
          QjmDQ993ChII8SXWupQZVBiIpcWO4RqZk3lr7Bz5MUCwzDIA359e57SSq5CCkY0N
          4B6Vulk7LktfwrdGNVI5BsC9qqxSwSKgRJeZ9wygIaehbHFHFhcBaMDKpiZlBHyz
          rsnnlFXCb5s8HKn5LsUgGvB24L7sGNZP2CX7dhHov+YhD+jozLW2p9W4959Bz2Ei
          RmqDtmiXLnzqTpXbI+suyCsohKRg6Un0RC47+cpiVwHiXZAW+cn8eiNIjqbVgXLx
          KPpdzvvtTnOPlC7SQZSYmdunr3Bf9b77AiC/ZidstK36dRILKz7OA54=
          -----END CERTIFICATE-----
  overlays: |
    {}
---
# Source: bigbang/templates/jaeger/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-jaeger-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    "\nimagePullSecrets:\n  - name: private-registry\n\nimage:\n  pullPolicy: IfNotPresent\n\n#
      hostname is deprecated and replaced with domain. But if hostname exists then use
      it.\nhostname: dev.bigbang.mil\ndomain: dev.bigbang.mil\n\nistio:\n  enabled: true\n
      \ hardened:\n    enabled: true\n  jaeger:\n    enabled: true\n    gateways:\n      -
      istio-gateway/public-ingressgateway\nannotations:\n  bigbang.dev/istioVersion: 1.23.6\n\nmonitoring:\n
      \ enabled: true\n  # conditional passes only for default istio: enabled, mTLS: SCRICT\n
      \ serviceMonitor:\n    scheme: https\n    tlsConfig:\n      caFile: /etc/prom-certs/root-cert.pem\n
      \     certFile: /etc/prom-certs/cert-chain.pem\n      keyFile: /etc/prom-certs/key.pem\n
      \     insecureSkipVerify: true  # Prometheus does not support Istio security naming,
      thus skip verifying target pod certificate\n\nelasticsearch:\n  enabled: false\n\nsso:\n
      \ enabled: false\njaeger:\n  spec:\n    strategy: allInOne\n    allInOne:\n      annotations:\n
      \       bigbang.dev/istioVersion: 1.23.6\n    query:\n      annotations:\n        bigbang.dev/istioVersion:
      1.23.6\n    agent:\n      annotations:\n        bigbang.dev/istioVersion: 1.23.6\n
      \   ingester:\n      annotations:\n        bigbang.dev/istioVersion: 1.23.6\n    collector:\n
      \     annotations:\n        bigbang.dev/istioVersion: 1.23.6\nopenshift:\n  enabled:
      false\nnetworkPolicies:\n  enabled: true\n  istioNamespaceSelector:\n  \n    ingress:
      istio-gateway\n    egress: istio-system\n  controlPlaneCidr: 0.0.0.0/0\n  ingressLabels:\n
      \   app: public-ingressgateway\n    istio: ingressgateway\n\nwebhookCertGen:\n  image:\n
      \   pullPolicy: IfNotPresent\n  cleanupProxy:\n    image:\n      pullPolicy: IfNotPresent"
  overlays: |
    bbtests:
      cypress:
        envs:
          cypress_url: https://tracing.dev.bigbang.mil
      enabled: true
---
# Source: bigbang/templates/kiali/grafana-auth-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: grafana-auth
  namespace: kiali
  labels:
    app.kubernetes.io/name: kiali
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
type: kubernetes.io/opaque
stringData:
  password: prom-operator
---
# Source: bigbang/templates/kiali/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-kiali-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    "\n# hostname is deprecated and replaced with domain. But if hostname exists then
      use it.\ndomain: dev.bigbang.mil\n\nsso:\n  enabled: false\n\nopenshift: false\n\nimage:\n
      \ pullPolicy: IfNotPresent\n\nistio:\n  enabled: true\n  hardened:\n    enabled:
      true\n    monitoring:\n      enabled: true\n  kiali:\n    gateways:\n      - istio-gateway/public-ingressgateway\npodAnnotations:\n
      \ bigbang.dev/istioVersion: 1.23.6\n\nmonitoring:\n  enabled: true\nupstream:\n
      \ cr:\n    spec:\n      istio_namespace: istio-system\n      deployment:\n        image_pull_policy:
      IfNotPresent\n        pod_annotations:\n          bigbang.dev/istioVersion: 1.23.6\n
      \       hpa:\n          spec:\n            maxReplicas: 2\n            minReplicas:
      1\n            targetCPUUtilizationPercentage: 80\n      server:\n        web_port:
      \"443\"\n      auth:\n        strategy: token\n      external_services:\n        grafana:\n
      \         enabled: true\n          url: https://grafana.dev.bigbang.mil\n          auth:\n
      \           username: admin\n            password: \"secret:grafana-auth:password\"\n
      \       tracing:\n          enabled: true\n          url: https://tracing.dev.bigbang.mil\n
      \       istio:\n          component_status:\n            components:\n              -
      app_label: istiod\n                is_core: true\n                is_proxy: false\n
      \             \n              - app_label: passthrough-ingressgateway\n                is_core:
      true\n                is_proxy: true\n              \n              - app_label:
      public-ingressgateway\n                is_core: true\n                is_proxy:
      true\n              - app_label: passthrough-ingressgateway\n                is_core:
      true\n                is_proxy: true\n                namespace: istio-gateway\n
      \             - app_label: public-ingressgateway\n                is_core: true\n
      \               is_proxy: true\n                namespace: istio-gateway\n          ingress_gateway_namespace:
      istio-gateway\n          egress_gateway_namespace: istio-gateway\nnetworkPolicies:\n
      \ enabled: true\n  controlPlaneCidr: 0.0.0.0/0\n  istioNamespaceSelector:\n  \n
      \   ingress: istio-gateway\n    egress: istio-system\n  ingressLabels:\n    app:
      public-ingressgateway\n    istio: ingressgateway"
  overlays: |
    bbtests:
      cypress:
        envs:
          cypress_check_data: "true"
          cypress_url: https://kiali.dev.bigbang.mil
      enabled: true
    cr:
      spec:
        auth:
          strategy: openid
    upstream:
      cr:
        spec:
          auth:
            strategy: anonymous
---
# Source: bigbang/templates/kyverno-policies/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-kyverno-policies-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    "\n\nwaitforready:\n  imagePullSecrets:\n  - name: private-registry\n\npolicies:\n
      \ add-default-capability-drop:\n    enabled: true\n    exclude:\n      any:\n      #
      Neuvector needs access to host to inspect network traffic\n      - resources:\n
      \         namespaces:\n          - neuvector\n          names:\n          - neuvector-enforcer-pod*\n
      \         - neuvector-cert-upgrader-job*\n          - neuvector-controller-pod*\n
      \         - neuvector-scanner-pod*\n          - neuvector-prometheus-exporter-pod*\n
      \ disallow-host-namespaces:\n    exclude:\n      any:\n      # Neuvector needs access
      to host to inspect network traffic\n      - resources:\n          namespaces:\n
      \         - neuvector\n          names:\n          - neuvector-enforcer-pod*\n\n
      \ # Istio services (istio ingress) can create type: NodePort services\n  disallow-nodeport-services:\n
      \   validationFailureAction: Enforce\n    exclude:\n      any:\n      - resources:\n
      \         kinds:\n          - Service\n          names:\n          namespaces:\n
      \         - istio-system\n      - resources:\n          kinds:\n          - Service\n
      \         names:\n          - passthrough-ingressgateway\n          \n          -
      public-ingressgateway\n          namespaces:\n          - istio-gateway\n\n  disallow-image-tags:\n
      \   enabled: true\n    validationFailureAction: Enforce\n    exclude:\n      any:\n
      \     # istio/gateway sets the deployment image to `auto` by default\n      # and
      does not expose any way for the chart consumer to modify\n      # it. The idea is
      `istiod` will inject the correct image at\n      # pod creation based on `istiod`'s
      proxy config.\n      - resources:\n          namespaces:\n          - istio-gateway\n
      \         names:\n          - '*-ingressgateway'\n          - '*-egressgateway'\n\n
      \ disallow-istio-injection-bypass:\n    enabled: true\n    exclude:\n      any:\n
      \     # Istio does not inject itself\n      - resources:\n          namespaces:\n
      \         - istio-system\n          - istio-gateway\n\n  disallow-namespaces:\n
      \   enabled: true\n    validationFailureAction: Enforce\n    parameters:\n      disallow:\n
      \     - bigbang\n      - default\n  disallow-privileged-containers:\n    exclude:\n
      \     any:\n      # Neuvector needs privileged access for realtime scanning of files
      from the node / access to the container runtime\n      - resources:\n          namespaces:\n
      \         - neuvector\n          names:\n          - neuvector-enforcer-pod*\n          -
      neuvector-controller-pod*\n          - neuvector-scanner-pod*\n\n  # -- Prevent
      Automounting of Kubernetes API Credentials on Pods and Service Accounts\n  disallow-auto-mount-service-account-token:\n
      \   enabled: true\n    validationFailureAction: Audit\n    exclude:\n      any:\n
      \     - resources:\n          namespaces:\n          - kyverno-reporter\n          kinds:\n
      \         - Pod\n          - Deployment\n          names:\n          - kyverno-reporter*\n
      \     - resources:\n          namespaces:\n          - flux-system\n          kinds:\n
      \         - Pod\n          - Deployment\n          - StatefulSet\n          names:\n
      \         - notification-controller*\n          - helm-controller*\n          -
      source-controller*\n          - kustomize-controller*\n  disallow-tolerations:\n
      \   exclude:\n      any:\n      # Prometheus Node Exporter needs to be able to run
      on all nodes, regardless of taint, to gather node metrics\n      - resources:\n
      \         namespaces:\n          - monitoring\n          names:\n          - monitoring-monitoring-prometheus-node-exporter*\n\n
      \ require-drop-all-capabilities:\n    validationFailureAction: Enforce\n    exclude:\n
      \     any:\n      # Neuvector needs access to host to inspect network traffic\n
      \     - resources:\n          namespaces:\n          - neuvector\n          names:\n
      \         - neuvector-enforcer-pod*\n          - neuvector-cert-upgrader-job-*\n
      \         - neuvector-controller-pod*\n          - neuvector-scanner-pod*\n          -
      neuvector-prometheus-exporter-pod*\n\n  # Kyverno Beta feature - https://kyverno.io/docs/writing-policies/verify-images/\n
      \ require-image-signature:\n    enabled: false\n    validationFailureAction: Audit\n\n
      \ require-labels:\n    enabled: true\n    validationFailureAction: Audit\n    parameters:\n
      \     require:\n      - app.kubernetes.io/name\n      - app.kubernetes.io/version\n\n
      \ require-istio-on-namespaces:\n    enabled: true\n    exclude:\n      any:\n      -
      resources:\n          namespaces:\n          # Kuberentes control plane does not
      use Istio\n          - kube-node-lease\n          - kube-public\n          - kube-system\n
      \         # No pods in bigbang / default\n          - bigbang\n          - default\n
      \         # Flux is installed prior to Istio\n          - flux-system\n          #
      Istio does not inject itself\n          - istio-operator\n          - istio-system\n
      \         - istio-gateway\n\n  add-default-securitycontext:\n    enabled: true\n
      \   \n    parameters:\n      excludeContainers:\n        - istio-init\n    exclude:\n
      \     any:\n      - resources:\n          namespaces:\n          - kube-system\n
      \     # For GitLab runner CI jobs that require root access\n      # promtail requires
      access to journalctl as well as /var/log.  This would require modifications\n      #
      to the host operating system, creating a user, adding that user to the  systemd-journal
      user group\n      # and then granting permissions recursively on /var/log.\n      #
      promtail requires access to /run/promtail for its buffering and persistent state.\n
      \     - resources:\n          namespaces:\n          - promtail\n          names:\n
      \         - promtail-promtail*\n      # neuvector enforcers run as root to perform
      real time scanning on the nodes/cluster\n      - resources:\n          namespaces:\n
      \         - neuvector\n          names:\n          - neuvector-enforcer-pod-*\n
      \         - neuvector-controller-pod-*\n          - neuvector-cert-upgrader-job-*\n\n\n
      \ require-non-root-group:\n    validationFailureAction: Enforce\n    \n    parameters:\n
      \     excludeContainers:\n        - istio-init\n    exclude:\n      any:\n      -
      resources:\n          namespaces:\n          - kube-system\n      \n      - resources:\n
      \         namespaces:\n          - istio-system\n          names:\n          - istiod*\n
      \     # For GitLab runner CI jobs that require root access\n      # promtail requires
      access to journalctl as well as /var/log.  This would require modifications\n      #
      to the host operating system, creating a user, adding that user to the  systemd-journal
      user group\n      # and then granting permissions recursively on /var/log.\n      #
      promtail requires access to /run/promtail for its buffering and persistent state.\n
      \     - resources:\n          namespaces:\n          - promtail\n          names:\n
      \         - promtail-promtail*\n      # neuvector enforcers run as root to perform
      real time scanning on the nodes/cluster\n      - resources:\n          namespaces:\n
      \         - neuvector\n          names:\n          - neuvector-enforcer-pod-*\n
      \         - neuvector-controller-pod-*\n          - neuvector-cert-upgrader-job-*\n\n
      \ require-non-root-user:\n    validationFailureAction: Enforce\n    \n    parameters:\n
      \     excludeContainers:\n        - istio-init\n    exclude:\n      any:\n      -
      resources:\n          namespaces:\n          - kube-system\n      # Kiali needs
      exception for operator to deploy Kiali server\n      - resources:\n          namespaces:\n
      \         - kiali\n          names:\n          - kiali-*\n      # Neuvector needs
      privileged access for realtime scanning of files from the node / access to the container
      runtime\n      - resources:\n          namespaces:\n          - neuvector\n          names:\n
      \         - neuvector*\n      # For GitLab runner CI jobs that require root access\n
      \     # promtail requires access to journalctl as well as /var/log.  This would
      require modifications\n      # to the host operating system, creating a user, adding
      that user to the systemd-journal user group\n      # and then granting permissions
      recursively on /var/log.\n      # promtail requires access to /run/promtail for
      its buffering and persistent state.\n      - resources:\n          namespaces:\n
      \         - promtail\n          names:\n          - promtail-promtail*\n\n  restrict-capabilities:\n
      \   validationFailureAction: Enforce\n    # NEEDS FURTHER JUSTIFICATION\n    # Twistlock
      Defenders require the following capabilities\n    # - NET_ADMIN  - Process monitoring
      and Iptables\n    # - NET_RAW    - Iptables (CNNF, runtime DNS, WAAS)  See https://bugzilla.redhat.com/show_bug.cgi?id=1895032\n
      \   # - SYS_ADMIN  - filesystem monitoring\n    # - SYS_PTRACE - local audit monitoring\n
      \   # - SYS_CHROOT - changing mount namespace using setns\n    # - MKNOD      -
      Create special files using mknod, used by docker-less registry scanning\n    # -
      SETFCAP    - Set file capabilties, used by docker-less registry scanning\n    #
      - IPC_LOCK\n    #\n    parameters:\n      allow:\n      # Defaults from https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted\n
      \     - NET_BIND_SERVICE\n      # Istio requires NET_ADMIN and NET_RAW for sidecar
      init: https://istio.io/latest/docs/ops/deployment/requirements/#pod-requirements\n
      \     # It uses these permissions to setup iptables for network routing\n      #
      Cannot create exclusion since sidecar is injected in most containers, so allow the
      capabilities globally\n      - NET_ADMIN\n      - NET_RAW\n    # Twistlock Defenders
      run as root to perform real time scanning on the nodes/cluster, including:\n    #
      - read logs from `/var/log` to watch for malicious processes\n    # - audit modifications
      to `/etc/passwd` (watching for suspicious changes)\n    # - access the container
      runtime socket (observing all running containers on a node)\n  restrict-host-path-mount:\n
      \   validationFailureAction: Enforce\n    exclude:\n      any:\n          # Promtail
      mounts the following hostPaths:\n          # - `/var/log/pods`: to tail pod logs\n
      \         # - `/var/lib/docker/containers`: to tail container logs\n          #
      - `/run/promtail`: for Promtail's buffering and persistent state\n          # Since
      logs can have sensitive information, it is better to exclude\n          # Promtail
      from the policy than add the paths as allowable mounts\n      - resources:\n          namespaces:\n
      \         - promtail\n          names:\n          - promtail-promtail*\n      #
      Prometheus Node Exporter mounts the following hostPaths:\n      # - `/`: monitor
      disk usage on filesystem mounts using e2fs call\n      # - `/proc` and `/sys`: gather
      node metrics\n      # Since mounting the root would expose sensitive information,
      it is better to\n      # exlcude Prometheus Node Exporter than add the paths as
      allowable mounts\n      - resources:\n          namespaces:\n          - monitoring\n
      \         names:\n          - monitoring-monitoring-prometheus-node-exporter*\n
      \     # Neuvector mounts the following hostPaths:\n      # `/var/neuvector`: for
      Neuvector's buffering and persistent state\n      # `/var/run`: communication to
      docker daemon\n      # `/proc`: monitoring of proccesses for malicious activity\n
      \     # `/sys/fs/cgroup`: important files the controller wants to monitor for malicious
      content\n      - resources:\n          namespaces:\n          - neuvector\n          names:\n
      \         - neuvector-enforcer-pod*\n          - neuvector-cert-upgrader-job-*\n
      \         - neuvector-controller-pod*\n\n  # NOTE: This restricts the ability to
      have PVCs when using a local path provisioner storage class (i.e. k3d default).\n
      \ # To override either disable this policy (not ideal) or add an allowed wildcard
      matching where local paths are provisioned.\n  # See `docs/assets/configs/example/policy-overrides-k3d.yaml`
      for an example of how to do this for k3d.\n  restrict-host-path-mount-pv:\n    validationFailureAction:
      Enforce\n\n  restrict-host-path-write:\n    validationFailureAction: Enforce\n    exclude:\n
      \     any:\n      # NEEDS FURTHER JUSTIFICATION\n      # Twistlock mounts the following
      hostPaths as writable:\n      # - `/dev/log`: writing twistlock logs to syslog socket
      on node (if enabled)\n      # - `/var/lib/twistlock`: data folder reserved for twistlock\n
      \     # - `/run` or `/var/run`: communication to docker daemon and IP tables\n      #
      - `/var/lib/containers`: Container images data from CRI\n      # - `/var/log/audit`:
      Audit logs\n      # Because the mounts are dynamically created for defenders at
      runtime, we cannot\n      # anticipate all of the paths it may mount and must exclude
      it from the policy\n      # Neuvector mounts the following hostPaths as writeable:\n
      \     # `/var/neuvector`: for Neuvector's buffering and persistent state\n      -
      resources:\n          namespaces:\n          - neuvector\n          names:\n          -
      neuvector-controller-pod*\n          - neuvector-enforcer-pod*\n    parameters:\n
      \     allow:\n      # Promtail - `/run/promtail`: promtail buffering and persistent
      state\n      - /run/promtail\n\n  restrict-image-registries:\n    validationFailureAction:
      Enforce\n    parameters:\n      allow:\n      - registry1.dso.mil\n      - registry.dso.mil\n
      \   exclude:\n      any:\n      # istio/gateway sets the deployment image to `auto`
      by default\n      # and does not expose any way for the chart consumer to modify\n
      \     # it. The idea is `istiod` will inject the correct image at\n      # pod creation
      based on `istiod`'s proxy config.\n      - resources:\n          namespaces:\n          -
      istio-gateway\n          names:\n          - '*-ingressgateway'\n          - '*-egressgateway'\n
      \ restrict-selinux-type:\n    exclude:\n      any:\n      - resources:\n          namespaces:\n
      \         - promtail\n          names:\n          # NEEDS FURTHER JUSTIFICATION\n
      \         # Promtail needs selinux option type spc_t\n          - promtail-promtail*\n
      \ restrict-volume-types:\n    exclude:\n      any:\n      - resources:\n          namespaces:\n
      \         - promtail\n          names:\n          # NEEDS FURTHER JUSTIFICATION\n
      \         # Promtail requires HostPath volume types\n          # https://github.com/grafana/helm-charts/blob/main/charts/promtail/templates/daemonset.yaml#L120\n
      \         - promtail-promtail*\n      # Prometheus node exporter requires a HostPath
      volume to monitor host metrics in /proc and /sys\n      - resources:\n          namespaces:\n
      \         - monitoring\n          names:\n          - monitoring-monitoring-prometheus-node-exporter*\n
      \     # Neuvector requires HostPath volume types\n        # Neuvector mounts the
      following hostPaths:\n        # `/var/neuvector`: (as writable) for Neuvector's
      buffering and persistent state\n        # `/var/run`: communication to docker daemon\n
      \       # `/proc`: monitoring of proccesses for malicious activity\n        # `/sys/fs/cgroup`:
      important files the controller wants to monitor for malicious content\n      # https://github.com/neuvector/neuvector-helm/blob/master/charts/core/templates/enforcer-daemonset.yaml#L108\n
      \     - resources:\n          namespaces:\n          - neuvector\n          names:\n
      \         - neuvector-enforcer-pod*\n          - neuvector-controller-pod*\n\n  update-automountserviceaccounttokens-default:\n
      \   enabled: true\n    namespaces:\n      - istio-system\n      - istio-operator\n
      \     - twistlock\n      - argocd\n      - logging\n      - velero\n      - minio\n
      \     - minio-operator\n      - kyverno-reporter\n      - kyverno\n      - velero\n
      \     - neuvector\n      - kiali\n      - harbor\n      - authservice\n      - anchore\n
      \     - fortify\n      - vault\n      - promtail\n      - fluentbit\n      - eck-operator\n
      \     - nexus-repository-manager\n      - thanos\n      - mattermost\n      - mattermost-operator\n
      \     - bigbang\n      - flux-system\n      - keycloak\n      - monitoring\n      -
      gitlab\n      - gitlab-runner\n      - headlamp\n\n  update-automountserviceaccounttokens:\n
      \   enabled: true\n    namespaces:\n      - namespace: istio-system\n        pods:\n
      \         allow:\n          - istiod-*\n          - passthrough-ingressgateway-*\n
      \         - public-ingressgateway-*\n      - namespace: istio-operator\n        pods:\n
      \         allow:\n          - istiod-*\n          - istio-operator-*\n      - namespace:
      twistlock\n        pods:\n          allow:\n          # twistlock-init pods require
      get/list/patch/etc to several resources.\n          # More details in twistlock/chart/templates/init/clusterrole.yaml\n
      \         - twistlock-init-*\n          # twistlock-volume-upgrade-job requires
      patch/get/list/update to deployments and get/list to pods\n          # More details
      in twistlock/chart/templates/init/volume-upgrade-role.yaml\n          - twistlock-volume-upgrade-job\n
      \         # Twistlock Defender enforces various policies that may involve the K8s
      cluster itself\n          # Enforcing said policies requires access to the API to
      get/list resources\n          - twistlock-defender-ds-*\n          # bb-twistlock-upgrade-job
      requires patch/get/list/update/etc to deployments daemonsets pv's and pvc\n          #
      More details in twistlock/chart/templates/bigbang/upgrade-job.yaml\n          -
      bb-twistlock-twistlock-upgrade-job-*\n      - namespace: logging\n        pods:\n
      \         allow:\n          - logging-loki-minio-*\n          deny:\n          -
      logging-ek-es-data*\n          - logging-ek-es-master*\n          - logging-ek-kb*\n
      \         - logging-ek-metrics*\n      - namespace: minio-operator\n        pods:\n
      \         allow:\n          # console pods require access to several API resources\n
      \         # More details in minio-operator/chart/templates/console-clusterrole.yaml\n
      \         - console-*\n          # operator pods require access to several API resources\n
      \         # More details in minio-operator/chart/templates/operator-clusterrole.yaml\n
      \         - minio-operator-*\n          # tenantPatchJob requires get/list/patch
      on tenants (minio CRD)\n          # More details in minio-operator/chart/templates/bigbang/tenant-patch-job.yaml\n
      \         - bb-minio-operator-minio-operator-tenant-patch\n      - namespace: minio\n
      \       pods:\n          allow:\n          # tenant pods require get/list/watch
      on secrets/tenants (CRD), and create/delete/get on services\n          # More details
      in role named minio-minio-minio-instance-role\n          - minio-minio-minio-instance-*\n
      \         - minio-instance-wait-job-*\n      - namespace: kyverno\n        pods:\n
      \         allow:\n          - kyverno-reports-controller-*\n          - kyverno-admission-controller-*\n
      \         - kyverno-cleanup-controller-*\n          - kyverno-cleanup-admission-reports-*\n
      \         - kyverno-admission-controller-*\n          - kyverno-background-controller-*\n
      \         - kyverno-admission-controller-*\n          - kyverno-cleanup-cluster-admission-reports-*\n
      \         - kyverno-cleanup-cluster-ephemeral-reports-*\n          - kyverno-cleanup-update-requests-*\n
      \         - kyverno-clean-reports-*\n      - namespace: velero\n        pods:\n
      \         allow:\n          - velero-cleanup-crds-*\n          - velero-velero-*\n
      \         - node-agent-*\n          - velero-label-namespace-*\n          - velero-script-test\n
      \         - velero-backup-restore-test\n      - namespace: neuvector\n        pods:\n
      \         allow:\n          - neuvector-manager-pod-*\n          - neuvector-scanner-pod-*\n
      \         - neuvector-cert-upgrader-job-*\n          - neuvector-controller-pod-*\n
      \         - neuvector-enforcer-pod-*\n          - neuvector-updater-pod-*\n          -
      neuvector-prometheus-exporter-pod-*\n          - neuvector-registry-adapter-pod-*\n
      \     - namespace: kiali\n        pods:\n          allow:\n          - kiali-*\n
      \     - namespace: argocd\n        pods:\n          allow:\n          # application-controller
      pods interact with secrets, configmaps, events, and Argo CRDs\n          # More
      details in argocd/chart/templates/argocd-application-controller/role.yaml\n          -
      argocd-argocd-application-controller-*\n          # dex pods interact with secrets
      and configmaps\n          # More details in argocd/chart/templates/dex/role.yaml\n
      \         - argocd-argocd-dex-server-*\n          # argocd-upgrade-job interacts
      with CRDs\n          # More details in argocd/chart/templates/bigbang/upgrade-job.yaml\n
      \         - argocd-upgrade-job-*\n          # argocd server pods interact with secrets,
      configmaps, events, and CRDs\n          # More details in argocd/chart/templates/argocd-server/role.yaml\n
      \         - argocd-argocd-server-*\n          # repo server pods require access
      to the K8s API if using RBAC\n          # Ref: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/rbac.md\n
      \         - argocd-argocd-repo-server-*\n          # The applicationSet controller
      pods interact with many API resources, including CRDs\n          # More details
      in argocd/chart/templates/argocd-applicationset/role.yaml\n          - argocd-argocd-applicationset-controller-*\n
      \         # notifications controller pods interact with secrets, configmaps, and
      CRDs\n          # More details in argocd/chart/templates/argocd-notifications/role.yaml\n
      \         # Additionally (this wildcard covers both)-\n          # notifications
      bot pods interact with secrets, configmaps, and CRDs\n          # More details in
      argocd/chart/templates/argocd-notifications/bots/slack/role.yaml\n          - argocd-argocd-notifications-controller-*\n
      \     - namespace: harbor\n        # Omitting the serviceAccount and Pods section
      forces the policy to apply to\n        # all of the serviceAccount and Pods in the
      namespace\n      - namespace: authservice\n        pods:\n          allow:\n          -
      authservice-authservice-redis-bb-*\n          - authservice-haproxy-sso-*\n      -
      namespace: monitoring\n        pods:\n          allow:\n          - monitoring-grafana*\n
      \         - monitoring-monitoring-kube-admission-create-*\n          - monitoring-monitoring-kube-admission-patch-*\n
      \         - monitoring-monitoring-kube-state-metrics*\n          - monitoring-monitoring-kube-operator*\n
      \         - prometheus-monitoring-monitoring-kube-prometheus*\n      - namespace:
      alloy\n        pods:\n          allow:\n          - alloy-*\n      - namespace:
      mimir\n        pods:\n          allow:\n          - mimir-mimir-rollout-operator-*\n
      \         - mimir-mimir-minio*\n      - namespace: anchore\n        pods:\n          allow:\n
      \         - anchore-ui-redis-*\n      - namespace: jaeger\n        pods:\n          allow:\n
      \         - jaeger-jaeger-jaeger-operator-*\n          - jaeger-clean-svc-monitor\n
      \     - namespace: fortify\n        # Omitting the serviceAccount and pods section
      forces the policy to apply to\n        # all of the serviceAccounts and pods in
      the namespace\n      - namespace: vault\n        pods:\n          allow:\n          -
      vault-vault-*\n          - vault-vault-agent-injector-*\n          - vault-vault-job-init-*\n
      \     - namespace: promtail\n        pods:\n          allow:\n          - promtail-promtail-*\n
      \     - namespace: fluentbit\n        pods:\n          allow:\n          - fluentbit-fluent-bit-*\n
      \     - namespace: eck-operator\n        pods:\n          allow:\n          - elastic-operator-*\n
      \     - namespace: nexus-repository-manager\n        pods:\n          allow:\n          -
      nexus-repository-manager-*\n      - namespace: thanos\n        pods:\n          allow:\n
      \         - thanos-minio-*\n          deny:\n          - thanos-query-frontend-*\n
      \         - thanos-storegateway*\n          - thanos-query*\n      - namespace:
      mattermost\n        pods:\n          allow:\n          - default-minio-bucket-creation-*\n
      \         - mattermost-minio-*\n          - mattermost-wait-job-*\n      - namespace:
      mattermost-operator\n        pods:\n          allow:\n          - mattermost-operator-*\n
      \     - namespace: keycloak\n        pods:\n          allow:\n          - keycloak-*\n
      \     - namespace: gitlab\n        pods:\n          allow:\n          - gitlab-shared-secrets*\n
      \         - gitlab-script-test\n      - namespace: gitlab-runner\n        pods:\n
      \         allow:\n          - gitlab-runner-*\n      - namespace: headlamp\n        pods:\n
      \         allow:\n          - headlamp-*\n\nistio:\n  enabled: true"
  overlays: |
    additionalPolicyExceptions:
      testpolicyexception:
        annotations:
          policies.kyverno.io/category: Test
          policies.kyverno.io/description: This Test PolicyException allows pods to deploy
            busybox for debugging.
          policies.kyverno.io/subject: Pod
          policies.kyverno.io/title: Test PolicyException
        enabled: true
        kind: PolicyException
        namespace: kyverno
        spec:
          conditions:
            any:
            - key: '{{ request.object.metadata.labels.app || '''' }}'
              operator: Equals
              value: busybox
          exceptions:
          - policyName: block-ephemeral-containers
            ruleNames:
            - block-ephemeral-containers
          match:
            any:
            - resources:
                kinds:
                - Pod
                names:
                - important-tool*
    bbtests:
      enabled: true
    exclude:
      any:
      - resources:
          names:
          - svclb-*
          namespaces:
          - istio-system
      - resources:
          names:
          - bad-test*
          - good-test*
          namespaces:
          - default
    excludeContainers:
    - not-me
    - or-me
    policies:
      add-default-capability-drop:
        exclude:
          any:
          - resources:
              names:
              - neuvector-enforcer-pod*
              - neuvector-cert-upgrader-job*
              - neuvector-controller-pod*
              - neuvector-scanner-pod*
              - neuvector-prometheus-exporter-pod*
              namespaces:
              - neuvector
          - resources:
              names:
              - require-drop-all-capabilities*
              namespaces:
              - default
          - resources:
              names:
              - guestbook-ui-*
              namespaces:
              - argocd
      add-default-securitycontext:
        exclude:
          any:
          - resources:
              namespaces:
              - kube-system
          - resources:
              names:
              - promtail-promtail*
              namespaces:
              - promtail
          - resources:
              names:
              - neuvector-enforcer-pod-*
              - neuvector-controller-pod-*
              - neuvector-cert-upgrader-job-*
              namespaces:
              - neuvector
          - resources:
              names:
              - speaker-*
              namespaces:
              - metallb-system
          - resources:
              names:
              - guestbook*
              namespaces:
              - argocd
          - resources:
              names:
              - velero-backup-restore-test*
              namespaces:
              - velero
          - resources:
              names:
              - volume-upgrade-job*
              namespaces:
              - twistlock
          - resources:
              names:
              - alloy-config-validator*
              - alloy-config-analysis*
              - alloy-test*
              namespaces:
              - alloy
      clone-configs:
        parameters:
          clone:
          - kind: ConfigMap
            name: clone-configs-1
            namespace: '{{ .Release.Namespace }}'
          - kind: Secret
            name: clone-configs-2
            namespace: '{{ .Release.Namespace }}'
      disallow-annotations:
        parameters:
          disallow:
          - 'kyverno-policies-bbtest/test: disallowed'
          - kyverno-policies-bbtest/disallowed
      disallow-labels:
        parameters:
          disallow:
          - 'kyverno-policies-bbtest/test: disallowed'
          - kyverno-policies-bbtest/disallowed
      disallow-namespaces:
        parameters:
          disallow:
          - bigbang
          - default
          - bigbang
      disallow-tolerations:
        parameters:
          disallow:
          - effect: NoSchedule
            key: notallowed
            value: "false"
          - effect: '*NoSchedule'
            key: disa??owed
            value: "true"
      require-annotations:
        parameters:
          require:
          - 'kyverno-policies-bbtest/test: required'
          - kyverno-policies-bbtest/required
      require-drop-all-capabilities:
        exclude:
          any:
          - resources:
              names:
              - neuvector-enforcer-pod*
              - neuvector-cert-upgrader-job-*
              - neuvector-controller-pod*
              - neuvector-scanner-pod*
              - neuvector-prometheus-exporter-pod*
              namespaces:
              - neuvector
          - resources:
              names:
              - twistlock-defender-ds*
              namespaces:
              - twistlock
          - resources:
              names:
              - neuvector-enforcer-pod*
              - neuvector-controller-pod*
              - neuvector-prometheus-exporter-pod*
              namespaces:
              - neuvector
          - resources:
              names:
              - guestbook-ui-*
              namespaces:
              - argocd
      require-image-signature:
        enabled: false
        parameters:
          require:
          - attestors:
            - count: 1
              entries:
              - keys:
                  publicKeys: |-
                    -----BEGIN PUBLIC KEY-----
                    MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE8nXRh950IZbRj8Ra/N9sbqOPZrfM
                    5/KAQN0/KjHcorm/J5yctVd7iEcnessRQjU917hmKO6JWVGHpDguIyakZA==
                    -----END PUBLIC KEY-----
                  rekor:
                    ignoreTlog: true
                    url: ""
            imageReferences:
            - ghcr.io/kyverno/test-verify-image:*
            mutateDigest: false
            verifyDigest: false
          - attestors:
            - count: 1
              entries:
              - keys:
                  publicKeys: |-
                    -----BEGIN PUBLIC KEY-----
                    MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE7CjMGH005DFFz6mffqTIGurBt6fL
                    UfTZxuEDFRBS8mFJx1xw8DEVvjMibLTtqmAoJxUmzmGFgzz+LV875syVEg==
                    -----END PUBLIC KEY-----
                  rekor:
                    ignoreTlog: true
                    url: ""
            imageReferences:
            - registry1.dso.mil/ironbank/*
            mutateDigest: false
            verifyDigest: false
        validationFailureAction: Audit
      require-labels:
        parameters:
          require:
          - app.kubernetes.io/name
          - app.kubernetes.io/version
          - 'kyverno-policies-bbtest/test: required'
          - kyverno-policies-bbtest/required
      require-non-root-group:
        exclude:
          any:
          - resources:
              namespaces:
              - kube-system
          - resources:
              names:
              - istiod*
              namespaces:
              - istio-system
          - resources:
              names:
              - promtail-promtail*
              namespaces:
              - promtail
          - resources:
              names:
              - neuvector-enforcer-pod-*
              - neuvector-controller-pod-*
              - neuvector-cert-upgrader-job-*
              namespaces:
              - neuvector
          - resources:
              names:
              - fortify-mysql-*
              namespaces:
              - fortify
          - resources:
              names:
              - speaker-*
              - controller-*
              namespaces:
              - metallb-system
          - resources:
              names:
              - velero-backup-restore-test*
              namespaces:
              - velero
          - resources:
              names:
              - alloy-config-validator*
              - alloy-config-analysis*
              - alloy-test*
              namespaces:
              - alloy
      require-non-root-user:
        exclude:
          any:
          - resources:
              namespaces:
              - kube-system
          - resources:
              names:
              - kiali-*
              namespaces:
              - kiali
          - resources:
              names:
              - neuvector*
              namespaces:
              - neuvector
          - resources:
              names:
              - promtail-promtail*
              namespaces:
              - promtail
          - resources:
              names:
              - speaker-*
              namespaces:
              - metallb-system
          - resources:
              names:
              - guestbook*
              namespaces:
              - argocd
          - resources:
              names:
              - velero-backup-restore-test*
              namespaces:
              - velero
          - resources:
              names:
              - volume-upgrade-job*
              namespaces:
              - twistlock
          - resources:
              names:
              - alloy-config-validator*
              - alloy-config-analysis*
              - alloy-test*
              namespaces:
              - alloy
      restrict-external-ips:
        parameters:
          allow:
          - 192.168.0.1
      restrict-external-names:
        parameters:
          allow:
          - allowed
      restrict-host-path-mount:
        exclude:
          any:
          - resources:
              names:
              - promtail-promtail*
              namespaces:
              - promtail
          - resources:
              names:
              - monitoring-monitoring-prometheus-node-exporter*
              namespaces:
              - monitoring
          - resources:
              names:
              - neuvector-enforcer-pod*
              - neuvector-cert-upgrader-job-*
              - neuvector-controller-pod*
              namespaces:
              - neuvector
          - resources:
              names:
              - '*-cypress-test*'
              namespaces:
              - anchore
              - backstage
              - gitlab
              - gitlab-runner
              - kiali
              - cluster-auditor
              - mattermost
              - nexus-repository-manager
              - keycloak
              - jaeger
              - kyverno-reporter
              - mimir
              - monitoring
              - vault
              - logging
              - twistlock
              - sonarqube
              - logging
              - tempo
              - argocd
              - minio
              - minio-operator
              - neuvector
              - harbor
              - fortify
              - thanos
              - alloy
              - headlamp
        parameters:
          allow:
          - /tmp/allowed
      restrict-host-path-mount-pv:
        parameters:
          allow:
          - /tmp/allowed
          - /var/lib/rancher/k3s/storage/pvc-*
      restrict-host-path-write:
        exclude:
          any:
          - resources:
              names:
              - neuvector-controller-pod*
              - neuvector-enforcer-pod*
              namespaces:
              - neuvector
          - resources:
              names:
              - '*-cypress-test*'
              namespaces:
              - anchore
              - backstage
              - gitlab
              - gitlab-runner
              - kiali
              - cluster-auditor
              - mattermost
              - nexus-repository-manager
              - keycloak
              - kyverno-reporter
              - jaeger
              - mimir
              - monitoring
              - vault
              - logging
              - twistlock
              - sonarqube
              - logging
              - tempo
              - argocd
              - minio
              - minio-operator
              - neuvector
              - harbor
              - fortify
              - thanos
              - alloy
              - headlamp
          - resources:
              names:
              - neuvector-enforcer-*
              - neuvector-manager-*
              namespaces:
              - neuvector
        parameters:
          allow:
          - /run/promtail
          - /tmp/allowed
      restrict-host-ports:
        parameters:
          allow:
          - "63999"
          - '>= 64000 & < 65000'
          - '> 65000'
      restrict-image-registries:
        exclude:
          any:
          - resources:
              names:
              - '*-ingressgateway'
              - '*-egressgateway'
              namespaces:
              - istio-gateway
          - resources:
              namespaces:
              - gitlab
      restrict-volume-types:
        exclude:
          any:
          - resources:
              names:
              - promtail-promtail*
              namespaces:
              - promtail
          - resources:
              names:
              - monitoring-monitoring-prometheus-node-exporter*
              namespaces:
              - monitoring
          - resources:
              names:
              - neuvector-enforcer-pod*
              - neuvector-controller-pod*
              namespaces:
              - neuvector
          - resources:
              names:
              - '*-cypress-test*'
              namespaces:
              - anchore
              - backstage
              - gitlab
              - gitlab-runner
              - kiali
              - cluster-auditor
              - mattermost
              - nexus-repository-manager
              - keycloak
              - kyverno-reporter
              - jaeger
              - mimir
              - monitoring
              - vault
              - logging
              - twistlock
              - sonarqube
              - logging
              - tempo
              - argocd
              - minio
              - minio-operator
              - neuvector
              - harbor
              - fortify
              - thanos
              - alloy
              - headlamp
      update-image-registry:
        parameters:
          update:
          - from: replace.image.registry
            to: registry1.dso.mil
---
# Source: bigbang/templates/kyverno-reporter/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-kyverno-reporter-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    "\n\nglobal:\n  fullnameOverride: kyverno-reporter\n\nimage:\n  pullPolicy: IfNotPresent\nimagePullSecrets:\n-
      name: private-registry\nistio:\n  enabled: true\npodAnnotations:\n  bigbang.dev/istioVersion:
      1.23.6\n\nkyvernoPlugin:\n  image:\n    pullPolicy: IfNotPresent\n  imagePullSecrets:\n
      \ - name: private-registry\n  podAnnotations:\n    bigbang.dev/istioVersion: 1.23.6\n\nui:\n
      \ image:\n    pullPolicy: IfNotPresent\n  imagePullSecrets:\n  - name: private-registry\n
      \ podAnnotations:\n    bigbang.dev/istioVersion: 1.23.6\n\nmonitoring:\n  enabled:
      true\n  grafana:\n    namespace: monitoring\n  serviceMonitor:\n    scheme: https\n
      \   tlsConfig:\n      caFile: /etc/prom-certs/root-cert.pem\n      certFile: /etc/prom-certs/cert-chain.pem\n
      \     keyFile: /etc/prom-certs/key.pem\n      insecureSkipVerify: true  # Prometheus
      does not support Istio security naming, thus skip verifying target pod certificate\n
      \ kyverno:\n    serviceMonitor:\n      scheme: https\n      tlsConfig:\n        caFile:
      /etc/prom-certs/root-cert.pem\n        certFile: /etc/prom-certs/cert-chain.pem\n
      \       keyFile: /etc/prom-certs/key.pem\n        insecureSkipVerify: true  # Prometheus
      does not support Istio security naming, thus skip verifying target pod certificate\n\nopenshift:
      false\n\nnetworkPolicies:\n  enabled: true\n  istioNamespaceSelector:\n  \n    ingress:
      istio-gateway\n    egress: istio-system\n  controlPlaneCidr: 0.0.0.0/0"
  overlays: |
    bbtests:
      cypress:
        envs:
          cypress_check_datasource: "true"
          cypress_grafana_url: https://grafana.dev.bigbang.mil
          cypress_prometheus_url: https://prometheus.dev.bigbang.mil
        resources:
          limits:
            cpu: 2
            memory: 3Gi
          requests:
            cpu: 2
            memory: 3Gi
      enabled: true
    istio:
      hardened:
        customServiceEntries:
        - enabled: true
          name: cypress-service-entries-kyvernoreporter
          spec:
            exportTo:
            - .
            hosts:
            - registry.npmjs.org
            - download.cypress.io
            - cdn.cypress.io
            - repo1.dso.mil
            - prometheus.dev.bigbang.mil
            location: MESH_EXTERNAL
            ports:
            - name: https
              number: 443
              protocol: TLS
            resolution: DNS
---
# Source: bigbang/templates/kyverno/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-kyverno-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    |2-
    
      replicaCount: 3
    
      image:
        pullSecrets:
        - name: private-registry
        pullPolicy: IfNotPresent
    
      openshift: false
    
      networkPolicies:
        enabled: true
        controlPlaneCidr: 0.0.0.0/0
    
      serviceMonitor:
        enabled: true
        dashboards:
          namespace: monitoring
    
      admissionController:
        serviceMonitor:
          enabled: true
    
      backgroundController:
        serviceMonitor:
          enabled: true
    
      cleanupController:
        serviceMonitor:
          enabled: true
    
      reportsController:
        serviceMonitor:
          enabled: true
    
      grafana:
        enabled: true
        namespace: monitoring
    
      istio:
        enabled: true
  overlays: |
    admissionController:
      container:
        extraArgs:
          webhookTimeout: 30
        resources:
          limits:
            cpu: 1
            memory: 768Mi
          requests:
            cpu: 1
            memory: 768Mi
    bbtests:
      enabled: true
    features:
      policyexceptions:
        enabled: true
        namespace: kyverno
    networkPolicies:
      externalRegistries:
        allowEgress: true
---
# Source: bigbang/templates/loki/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-loki-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    "\n# hostname is deprecated and replaced with domain. But if hostname exists then
      use it.\nhostname: dev.bigbang.mil\ndomain: dev.bigbang.mil\n\nclusterName: \"\"\n\nopenshift:
      false\n\nistio:\n  enabled: true\n  hardened:\n    enabled: true\n    monitoring:\n
      \     enabled: true\n    promtail:\n      enabled: true\n    fluentbit:\n      enabled:
      false\n    minioOperator:\n      enabled: true\n    alloy:\n      enabled: false\n
      \ loki:\n    enabled: true\n    gateways:\n      - istio-gateway/public-ingressgateway\n\nimagePullSecrets:\n
      \ - name: private-registry\n\nimage:\n  pullPolicy: IfNotPresent\n\nnetworkPolicies:\n
      \ enabled: true\n  controlPlaneCidr: 0.0.0.0/0\n  istioNamespaceSelector:\n  \n
      \   ingress: istio-gateway\n    egress: istio-system\n\nmonitoring:\n  enabled:
      true\n  serviceMonitor:\n    enabled: true\n    # conditional passes only for default
      istio: enabled, mTLS: SCRICT\n    scheme: https\n    tlsConfig:\n      caFile: /etc/prom-certs/root-cert.pem\n
      \     certFile: /etc/prom-certs/cert-chain.pem\n      keyFile: /etc/prom-certs/key.pem\n
      \     insecureSkipVerify: true  # Prometheus does not support Istio security naming,
      thus skip verifying target pod certificate\n  rules:\n    enabled: true\n    alerting:
      true\npromtail:\n  enabled: true\n\nloki:\n  extraMemberlistConfig:\n    bind_addr:\n
      \     - ${MY_POD_IP}\n  storage:\n    type: \"s3\"\n    bucketNames:\n      {}\n
      \   s3:\n      endpoint: \n      region: \n      accessKeyId: \n      secretAccessKey:
      \n  # The bbctl violations dashboard output can be larger than the default loki
      line limit of 256KB\n  # Setting max_line_size = 0 removes the limit so the data
      can be ingested properly\n  limits_config:\n    max_line_size: 0\n  podAnnotations:\n
      \   bigbang.dev/istioVersion: 1.23.6\ndeploymentMode: SimpleScalable\nsingleBinary:\n
      \ replicas: 0\nread:\n  replicas: 3\n  extraArgs:\n    - -config.expand-env=true\n
      \ extraEnv:\n    - name: MY_POD_IP\n      valueFrom:\n        fieldRef:\n          fieldPath:
      status.podIP\nwrite:\n  replicas: 3\n  extraArgs:\n    - -config.expand-env=true\n
      \ extraEnv:\n    - name: MY_POD_IP\n      valueFrom:\n        fieldRef:\n          fieldPath:
      status.podIP\nbackend:\n  replicas: 3\n  extraArgs:\n    - -config.expand-env=true\n
      \ extraEnv:\n    - name: MY_POD_IP\n      valueFrom:\n        fieldRef:\n          fieldPath:
      status.podIP\ngateway:\n  enabled: true\n  extraArgs:\n    - -config.expand-env=true\n
      \ extraEnv:\n    - name: MY_POD_IP\n      valueFrom:\n        fieldRef:\n          fieldPath:
      status.podIP\n\n# Allows users to deploy distributed mode but calls out that we
      do not support it"
  overlays: |
    backend:
      persistence:
        size: 2Gi
      replicas: 3
      resources:
        limits:
          cpu: 500m
          memory: 1G
        requests:
          cpu: 500m
          memory: 1G
    bbtests:
      cypress:
        envs:
          cypress_check_datasource: "true"
          cypress_grafana_url: https://grafana.dev.bigbang.mil
      enabled: true
      scripts:
        envs:
          LOKI_URL: http://logging-loki-write.logging.svc:3100
    istio:
      hardened:
        customServiceEntries:
        - enabled: true
          name: cypress-service-entries-loki
          spec:
            hosts:
            - registry.npmjs.org
            - download.cypress.io
            - cdn.cypress.io
            - repo1.dso.mil
            - grafana.dev.bigbang.mil
            - optimizationguide-pa.googleapis.com
            - clientservices.googleapis.com
            - accounts.google.com
            - redirector.gvt1.com
            - content-autofill.googleapis.com
            - safebrowsing.googleapis.com
            location: MESH_EXTERNAL
            ports:
            - name: https
              number: 443
              protocol: TLS
            resolution: DNS
      loki:
        enabled: true
    minio:
      enabled: true
    read:
      persistence:
        size: 2Gi
      replicas: 3
      resources:
        limits:
          cpu: 400m
          memory: 500Mi
        requests:
          cpu: 400m
          memory: 500Mi
    write:
      persistence:
        size: 2Gi
      replicas: 3
      resources:
        limits:
          cpu: 1
          memory: 1G
        requests:
          cpu: 1
          memory: 1G
---
# Source: bigbang/templates/minio-operator/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-minio-operator-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    "\n# hostname is deprecated and replaced with domain. But if hostname exists then
      use it.\nhostname: dev.bigbang.mil\ndomain: dev.bigbang.mil\n\npodAnnotations:\n
      \ sidecar.istio.io/inject: \"true\"\n  traffic.sidecar.istio.io/includeInboundPorts:
      \"*\"\n  traffic.sidecar.istio.io/excludeInboundPorts: \"9443\"\n\nconsole:\n  imagePullSecrets:\n
      \   - name: private-registry\n\noperator:\n  image:\n    pullPolicy: IfNotPresent\n
      \ imagePullSecrets:\n    - name: private-registry\n  env:\n    - name: MINIO_OPERATOR_TLS_ENABLE\n
      \     value: \"on\"\n    - name: CLUSTER_DOMAIN\n      value: \"cluster.local\"\n
      \   - name: WATCHED_NAMESPACE\n      value: \"\"\n    - name: PROMETHEUS_NAMESPACE\n
      \     value: \"monitoring\"\n\nnetworkPolicies:\n  enabled: true\n  controlPlaneCidr:
      0.0.0.0/0\n  istioNamespaceSelector:\n  \n    ingress: istio-gateway\n    egress:
      istio-system\n  ingressLabels:\n    app: public-ingressgateway\n    istio: ingressgateway\n\nistio:\n
      \ enabled: true\n  hardened:\n    enabled: true\n  console:\n    gateways:\n      -
      istio-gateway/public-ingressgateway\nannotations:\n  bigbang.dev/istioVersion: 1.23.6\n\nmonitoring:\n
      \ enabled: true"
  overlays: |
    bbtests:
      enabled: true
    console:
      enabled: true
    istio:
      console:
        enabled: false
      hardened:
        customAuthorizationPolicies:
        - enabled: true
          name: allow-intranamespace-minio-operator
          spec:
            action: ALLOW
            rules:
            - from:
              - source:
                  namespaces:
                  - minio-operator
        customServiceEntries:
        - enabled: true
          name: cypress-service-entries-minio-operator
          spec:
            exportTo:
            - .
            hosts:
            - registry.npmjs.org
            - download.cypress.io
            - cdn.cypress.io
            - repo1.dso.mil
            - minio-operator.dev.bigbang.mil
            location: MESH_EXTERNAL
            ports:
            - name: https
              number: 443
              protocol: TLS
            resolution: DNS
---
# Source: bigbang/templates/monitoring/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-monitoring-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    "\n# hostname is deprecated and replaced with domain. But if hostname exists then
      use it.\nhostname: dev.bigbang.mil\ndomain: dev.bigbang.mil\n\nflux:\n  enabled:
      true\n\nnetworkPolicies:\n  enabled: true\n  istioNamespaceSelector:\n  \n    ingress:
      istio-gateway\n    egress: istio-system\n  controlPlaneCidr: 0.0.0.0/0\n  ingressLabels:\n
      \   app: public-ingressgateway\n    istio: ingressgateway\n\nopenshift: false\n\nminioOperator:\n
      \ enabled: true\n\ngitlabRunner:\n  enabled: false\n\nistio:\n  enabled: true\n
      \ hardened:\n    enabled: true\n    loki:\n      enabled: true\n    alloy:\n      enabled:
      false\n  clusterWideHardenedEnabled: true\n  prometheus:\n    enabled: true\n    gateways:\n
      \     - istio-gateway/public-ingressgateway\n  alertmanager:\n    enabled: true\n
      \   gateways:\n      - istio-gateway/public-ingressgateway\n  injection: enabled\n\nalertmanager:\n
      \ alertmanagerSpec:\n    # The operator performs a strategic merge to add our imagePullPolicy
      definition to the default containers\n    # NOTE: This functionality is not actively
      maintained upstream and may not work in a future monitoring upgrade\n    containers:\n
      \     - name: \"alertmanager\"\n        imagePullPolicy: IfNotPresent\n      - name:
      \"config-reloader\"\n        imagePullPolicy: IfNotPresent\n    podMetadata:\n      labels:\n
      \     annotations:\n        bigbang.dev/istioVersion: 1.23.6\n  serviceMonitor:\n
      \   scheme: https\n    tlsConfig:\n      caFile: /etc/prom-certs/root-cert.pem\n
      \     certFile: /etc/prom-certs/cert-chain.pem\n      keyFile: /etc/prom-certs/key.pem\n
      \     insecureSkipVerify: true  # Prometheus does not support Istio security naming,
      thus skip verifying target pod certificate\n\nprometheus:\n  monitor:\n    relabelings:\n
      \     - action: replace\n        replacement: logging-loki\n        targetLabel:
      cluster\n  prometheusSpec:\n    alertingEndpoints:\n    - name: monitoring-monitoring-kube-alertmanager\n
      \     namespace: monitoring\n      apiVersion: v2\n      port: http-web\n      pathPrefix:
      /\n      scheme: https\n      tlsConfig:\n        caFile: /etc/prom-certs/root-cert.pem\n
      \       certFile: /etc/prom-certs/cert-chain.pem\n        keyFile: /etc/prom-certs/key.pem\n
      \       insecureSkipVerify: true  # Prometheus does not support Istio security naming,
      thus skip verifying target pod certificate\n\n    # The operator performs a strategic
      merge to add our imagePullPolicy definition to the default containers\n    # NOTE:
      This functionality is not actively maintained upstream and may not work in a future
      monitoring upgrade\n    containers:\n      - name: \"prometheus\"\n        imagePullPolicy:
      IfNotPresent\n      - name: \"config-reloader\"\n        imagePullPolicy: IfNotPresent\n
      \   enableRemoteWriteReceiver: true\n    podMetadata:\n      labels:\n        app:
      prometheus\n      annotations:\n        bigbang.dev/istioVersion: 1.23.6\n        traffic.sidecar.istio.io/includeOutboundIPRanges:
      \"\"\n        proxy.istio.io/config: |\n          proxyMetadata:\n            OUTPUT_CERTS:
      /etc/istio-output-certs\n        sidecar.istio.io/userVolumeMount: '[{\"name\":
      \"istio-certs\", \"mountPath\": \"/etc/istio-output-certs\"}]'           \n    #
      Scrape config for service endpoints.\n    #\n    # The relabeling allows the actual
      service scrape endpoint to be configured\n    # via the following annotations:\n
      \   #\n    # * `prometheus.io/scrape`: Only scrape services that have a value of
      `true`\n    # * `prometheus.io/scheme`: If the metrics endpoint is secured then
      you will need\n    # to set this to `https` & most likely set the `tls_config` of
      the scrape config.\n    # * `prometheus.io/path`: If the metrics path is not `/metrics`
      override this.\n    # * `prometheus.io/port`: If the metrics are exposed on a different
      port to the\n    # service then set this appropriately.\n    # Example scrape config
      for pods\n    #\n    # The relabeling allows the actual pod scrape endpoint to be
      configured via the\n    # following annotations:\n    #\n    # * `prometheus.io/scrape`:
      Only scrape pods that have a value of `true`\n    # * `prometheus.io/path`: If the
      metrics path is not `/metrics` override this.\n    # * `prometheus.io/port`: Scrape
      the pod on the indicated port instead of the default of `9102`.    \n    # Add volume/mount
      for Istio certs for mTLS scraping\n    volumes:\n      - emptyDir:\n          medium:
      Memory\n        name: istio-certs\n    volumeMounts:\n      - mountPath: /etc/prom-certs/\n
      \       name: istio-certs\n\n\nanchore:\n  enabled: false\n\nkiali:\n  enabled:
      true\n\nloki:\n  enabled: true\n\ntempo:\n  enabled: true\nredis:\n  enabled: true\n\nvault:\n
      \ enabled: false\n  tlsDisable: false\n\nglobal:\n  imagePullSecrets:\n  - name:
      private-registry\n\nsso:\n  enabled: false\n\nprometheus-node-exporter:\n  image:\n
      \   pullPolicy: IfNotPresent\n  prometheus:\n    monitor:\n      relabelings:\n
      \       - action: replace\n          replacement: logging-loki\n          targetLabel:
      cluster\n        - targetLabel: \"instance\"\n          sourceLabels:\n            -
      \"__meta_kubernetes_pod_node_name\"\n      scheme: https\n      tlsConfig:\n        caFile:
      /etc/prom-certs/root-cert.pem\n        certFile: /etc/prom-certs/cert-chain.pem\n
      \       keyFile: /etc/prom-certs/key.pem\n        insecureSkipVerify: true  # Prometheus
      does not support Istio security naming, thus skip verifying target pod certificate\n
      \ podAnnotations:\n    bigbang.dev/istioVersion: 1.23.6\nkubelet:\n  serviceMonitor:\n
      \   cAdvisorRelabelings:\n      - action: replace\n        replacement: logging-loki\n
      \       targetLabel: cluster\n      - targetLabel: metrics_path\n        sourceLabels:\n
      \         - \"__metrics_path__\"\n      - targetLabel: \"instance\"\n        sourceLabels:\n
      \         - \"node\"\ndefaultRules:\n  additionalRuleLabels:\n    cluster: logging-loki\n\nkube-state-metrics:\n
      \ image:\n    pullPolicy: IfNotPresent\n  prometheus:\n    monitor:\n      relabelings:\n
      \       - action: replace\n          replacement: logging-loki\n          targetLabel:
      cluster\n        - targetLabel: \"instance\"\n          sourceLabels:\n            -
      \"__meta_kubernetes_pod_node_name\"\n      scheme: https\n      tlsConfig:\n        caFile:
      /etc/prom-certs/root-cert.pem\n        certFile: /etc/prom-certs/cert-chain.pem\n
      \       keyFile: /etc/prom-certs/key.pem\n        insecureSkipVerify: true  # Prometheus
      does not support Istio security naming, thus skip verifying target pod certificate\n
      \ podAnnotations:\n    bigbang.dev/istioVersion: 1.23.6\n\nprometheusOperator:\n
      \ image:\n    pullPolicy: IfNotPresent\n  admissionWebhooks:\n    cleanupProxy:\n
      \     image:\n        pullPolicy: IfNotPresent\n    patch:\n      image:\n        pullPolicy:
      IfNotPresent\n  podAnnotations:\n    bigbang.dev/istioVersion: 1.23.6"
  overlays: |
    bbtests:
      cypress:
        envs:
          cypress_alertmanager_url: https://alertmanager.dev.bigbang.mil
          cypress_bigbang_integration: "true"
          cypress_check_istio_dashboards: "true"
          cypress_grafana_url: https://grafana.dev.bigbang.mil
          cypress_keycloak_test_enable: "false"
          cypress_prometheus_url: https://prometheus.dev.bigbang.mil
          cypress_tnr_password: tnr_w!G33ZyAt@C8
          cypress_tnr_username: cypress
      enabled: true
    istio:
      hardened:
        customServiceEntries:
        - enabled: true
          name: cypress-service-entries-monitoring
          spec:
            hosts:
            - registry.npmjs.org
            - download.cypress.io
            - cdn.cypress.io
            - repo1.dso.mil
            - prometheus.dev.bigbang.mil
            - grafana.dev.bigbang.mil
            - alertmanager.dev.bigbang.mil
            location: MESH_EXTERNAL
            ports:
            - name: https
              number: 443
              protocol: TLS
            resolution: DNS
    kube-state-metrics:
      resources:
        limits: {}
        requests:
          cpu: 10m
          memory: 32Mi
    prometheus-node-exporter:
      resources:
        limits: {}
        requests:
          cpu: 100m
          memory: 30Mi
---
# Source: bigbang/templates/neuvector/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-neuvector-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    "# Includes suffix of \"A1a\" to ensure password always meets default minimum password
      requirements\n\n# hostname is deprecated and replaced with domain. But if hostname
      exists then use it.\ndomain: dev.bigbang.mil\n\nopenshift: false\n\nistio:\n  enabled:
      true\n  hardened:\n    enabled: true\n  neuvector:\n    gateways:\n      - istio-gateway/public-ingressgateway\n
      \ injection: enabled\n\nmonitoring:\n  enabled: true\ncontroller:\n  podAnnotations:\n
      \   bigbang.dev/istioVersion: 1.23.6\n  secret:\n    enabled: true\n    data:\n
      \     userinitcfg.yaml:\n        always_reload: true\n        users:\n        -
      username: metrics\n          password: xyte59mrSG3tDZbt84\n          role: reader\n
      \         fullname: metrics\n\nmonitor:\n  install: true\n  exporter:\n    enabled:
      true\n    podAnnotations:\n      checksum/metrics-pass: 2aaf6232806d42ada1e6f5e6477a12af6db075bf29540ca664087b3285b570d0\n
      \     bigbang.dev/istioVersion: 1.23.6\n    serviceMonitor:\n      enabled: true\n
      \     # conditional passes only for default istio: enabled, mTLS: SCRICT\n      scheme:
      https\n      tlsConfig:\n        caFile: /etc/prom-certs/root-cert.pem\n        certFile:
      /etc/prom-certs/cert-chain.pem\n        keyFile: /etc/prom-certs/key.pem\n        insecureSkipVerify:
      true  # Prometheus does not support Istio security naming, thus skip verifying target
      pod certificate\n    svc:\n      enabled: true\n      type: ClusterIP\n    CTRL_USERNAME:
      metrics\n    CTRL_PASSWORD: xyte59mrSG3tDZbt84\nenforcer:\n  podAnnotations:\n    bigbang.dev/istioVersion:
      1.23.6\ncve:\n  updater:\n    podAnnotations:\n      bigbang.dev/istioVersion: 1.23.6\n
      \ scanner:\n    podAnnotations:\n      bigbang.dev/istioVersion: 1.23.6\nmanager:\n
      \ podAnnotations:\n    bigbang.dev/istioVersion: 1.23.6\n\nnetworkPolicies:\n  enabled:
      true\n  controlPlaneCidr: 0.0.0.0/0\n  istioNamespaceSelector:\n  \n    ingress:
      istio-gateway\n    egress: istio-system\n  ingressLabels:\n    app: public-ingressgateway\n
      \   istio: ingressgateway"
  overlays: |
    bbtests:
      cypress:
        envs:
          cypress_url: https://neuvector.dev.bigbang.mil
      enabled: true
    enforcer:
      podAnnotations:
        sidecar.istio.io/proxyMemoryLimit: 2Gi
    istio:
      hardened:
        customServiceEntries:
        - enabled: true
          name: cypress-service-entries-neuvector
          spec:
            hosts:
            - registry.npmjs.org
            - download.cypress.io
            - cdn.cypress.io
            - repo1.dso.mil
            - neuvector.dev.bigbang.mil
            location: MESH_EXTERNAL
            ports:
            - name: https
              number: 443
              protocol: TLS
            resolution: DNS
    k3s:
      enabled: true
---
# Source: bigbang/templates/promtail/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-promtail-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    "\nhostname: \n\nimage:\n  pullPolicy: IfNotPresent\n\nopenshift: false\n\nistio:\n
      \ enabled: true\n  hardened:\n    enabled: true\n\nloki:\n  enabled: true\n\nserviceMonitor:\n
      \ enabled: true\n  # conditional passes only for default istio: enabled, mTLS: SCRICT\n
      \ scheme: https\n  tlsConfig:\n    caFile: /etc/prom-certs/root-cert.pem\n    certFile:
      /etc/prom-certs/cert-chain.pem\n    keyFile: /etc/prom-certs/key.pem\n    insecureSkipVerify:
      true  # Prometheus does not support Istio security naming, thus skip verifying target
      pod certificate\n\nmonitoring:\n  enabled: true\n\nnetworkPolicies:\n  enabled:
      true\n  controlPlaneCidr: 0.0.0.0/0\n  istioNamespaceSelector:\n  \n    ingress:
      istio-gateway\n    egress: istio-system\npodAnnotations:\n  bigbang.dev/istioVersion:
      1.23.6\nimagePullSecrets:\n  - name: private-registry\nconfig:\n  clients:\n    -
      url: http://logging-loki-write.logging.svc.cluster.local:3100/loki/api/v1/push\n
      \     external_labels:\n        cluster: logging-loki\n# If loki is disabled and
      promtail is not"
  overlays: |
    {}
---
# Source: bigbang/templates/tempo/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-tempo-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    "\npodAnnotations:\n  bigbang.dev/istioVersion: 1.23.6\n\nobjectStorage: \n  access_key_id:
      \n  secret_access_key: \n\ntempo:\n  pullPolicy: IfNotPresent\n  global_overrides:\n
      \   ingestion_rate_limit_bytes: 30000000\n  metricsGenerator:\n    enabled: true\n
      \   remoteWriteUrl: \"http://monitoring-monitoring-kube-prometheus.monitoring.svc.cluster.local:9090/api/v1/write\"\n\n#
      hostname is deprecated and replaced with domain. But if hostname exists then use
      it.\nhostname: dev.bigbang.mil\ndomain: dev.bigbang.mil\n\ntempoQuery:\n  pullPolicy:
      IfNotPresent\n\nserviceAccount:\n  imagePullSecrets:\n    - name: private-registry\n\nnetworkPolicies:\n
      \ enabled: true\n  istioNamespaceSelector:\n  \n    ingress: istio-gateway\n    egress:
      istio-system\n  controlPlaneCidr: 0.0.0.0/0\n  ingressLabels:\n    app: public-ingressgateway\n
      \   istio: ingressgateway\n\nistio:\n  enabled: true\n  hardened:\n    enabled:
      true\n  tempoQuery:\n    # Set TempoQuery UI to \"tempo.\" if Jaeger is enabled\n
      \   hosts:\n      - \"tempo.dev.bigbang.mil\"\n    gateways:\n      - istio-gateway/public-ingressgateway\n\nmonitoring:\n
      \ enabled: true\n\nserviceMonitor:\n  enabled: true\n  # conditional passes only
      if all conditionals are true:\n  # - istio: enabled\n  # - mTLS: SCRICT\n  scheme:
      https\n  tlsConfig:\n    caFile: /etc/prom-certs/root-cert.pem\n    certFile: /etc/prom-certs/cert-chain.pem\n
      \   keyFile: /etc/prom-certs/key.pem\n    insecureSkipVerify: true  # Prometheus
      does not support Istio security naming, thus skip verifying target pod certificate\n\nsso:\n
      \ enabled: false\npodLabels:"
  overlays: |
    bbtests:
      cypress:
        envs:
          cypress_check_datasource: "true"
          cypress_grafana_url: https://grafana.dev.bigbang.mil
          cypress_tempo_datasource: http://tempo-tempo.tempo.svc:3100
          cypress_url: https://tempo.dev.bigbang.mil
      enabled: true
      scripts:
        enabled: false
        envs:
          TEMPO_METRICS_URL: http://tempo-tempo.tempo.svc:3100
    istio:
      hardened:
        customServiceEntries:
        - enabled: true
          name: cypress-service-entries-tempo
          spec:
            hosts:
            - registry.npmjs.org
            - download.cypress.io
            - cdn.cypress.io
            - repo1.dso.mil
            - tempo.dev.bigbang.mil
            - grafana.dev.bigbang.mil
            - grafana.com
            location: MESH_EXTERNAL
            ports:
            - name: https
              number: 443
              protocol: TLS
            resolution: DNS
      tempoQuery:
        hosts:
        - tempo.{{ .Values.domain }}
    persistence:
      size: 5Gi
    tempo:
      resources:
        limits: null
        requests:
          cpu: 200m
          memory: 128Mi
    tempoQuery:
      resources:
        limits: null
        requests:
          cpu: 200m
          memory: 128Mi
---
# Source: bigbang/templates/grafana/flux-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: flux-grafana-dashboards 
  namespace: monitoring
  labels:
    grafana_dashboard: "1"
data:
  flux-cluster-dashboard.json: |
    
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          },
          {
            "datasource": {
              "type": "datasource",
              "uid": "grafana"
            },
            "enable": true,
            "iconColor": "red",
            "name": "flux events",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [
                "flux"
              ],
              "type": "tags"
            }
          }
        ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "iteration": 1652337714814,
      "links": [],
      "panels": [
        {
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "blue",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 100
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 6,
            "x": 0,
            "y": 0
          },
          "id": 24,
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "value"
          },
          "pluginVersion": "7.5.5",
          "targets": [
            {
              "exemplar": true,
              "expr": "count(gotk_reconcile_condition{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",type=\"Ready\",status=\"True\",kind=~\"Kustomization|HelmRelease\"})\n-\nsum(gotk_reconcile_condition{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",type=\"Ready\",status=\"Deleted\",kind=~\"Kustomization|HelmRelease\"})",
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Cluster Reconcilers",
          "type": "stat"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 6,
            "x": 6,
            "y": 0
          },
          "id": 28,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "value"
          },
          "pluginVersion": "7.5.5",
          "targets": [
            {
              "exemplar": true,
              "expr": "sum(gotk_reconcile_condition{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",type=\"Ready\",status=\"False\",kind=~\"Kustomization|HelmRelease\"})",
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Failing Reconcilers",
          "type": "stat"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "blue",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 100
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 6,
            "x": 12,
            "y": 0
          },
          "id": 29,
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "value"
          },
          "pluginVersion": "7.5.5",
          "targets": [
            {
              "exemplar": true,
              "expr": "count(gotk_reconcile_condition{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",type=\"Ready\",status=\"True\",kind=~\"GitRepository|OCIRepository|HelmRepository|Bucket\"})\n-\nsum(gotk_reconcile_condition{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",type=\"Ready\",status=\"Deleted\",kind=~\"GitRepository|OCIRepository|HelmRepository|Bucket\"})",
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Kubernetes Manifests Sources",
          "type": "stat"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 6,
            "x": 18,
            "y": 0
          },
          "id": 30,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "value"
          },
          "pluginVersion": "7.5.5",
          "targets": [
            {
              "exemplar": true,
              "expr": "sum(gotk_reconcile_condition{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",type=\"Ready\",status=\"False\",kind=~\"GitRepository|OCIRepository|HelmRepository|Bucket\"})",
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Failing Sources",
          "type": "stat"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "#EAB839",
                    "value": 1
                  },
                  {
                    "color": "red",
                    "value": 61
                  }
                ]
              },
              "unit": "s"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 12,
            "x": 0,
            "y": 5
          },
          "id": 8,
          "options": {
            "displayMode": "gradient",
            "minVizHeight": 10,
            "minVizWidth": 0,
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "mean"
              ],
              "fields": "",
              "values": false
            },
            "showUnfilled": true,
            "text": {}
          },
          "pluginVersion": "7.5.5",
          "targets": [
            {
              "exemplar": true,
              "expr": "sum(rate(gotk_reconcile_duration_seconds_sum{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",kind=~\"Kustomization|HelmRelease\"}[5m])) by (kind)\n/\n  sum(rate(gotk_reconcile_duration_seconds_count{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",kind=~\"Kustomization|HelmRelease\"}[5m])) by (kind)",
              "interval": "",
              "legendFormat": "{{kind}}",
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Reconciler ops avg. duration",
          "type": "bargauge"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "#EAB839",
                    "value": 1
                  },
                  {
                    "color": "red",
                    "value": 61
                  }
                ]
              },
              "unit": "s"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 12,
            "x": 12,
            "y": 5
          },
          "id": 31,
          "options": {
            "displayMode": "gradient",
            "minVizHeight": 10,
            "minVizWidth": 0,
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "mean"
              ],
              "fields": "",
              "values": false
            },
            "showUnfilled": true,
            "text": {}
          },
          "pluginVersion": "7.5.5",
          "targets": [
            {
              "exemplar": true,
              "expr": "sum(rate(gotk_reconcile_duration_seconds_sum{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",kind=~\"GitRepository|OCIRepository|HelmRepository|Bucket\"}[5m])) by (kind)\n/\n  sum(rate(gotk_reconcile_duration_seconds_count{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",kind=~\"GitRepository|OCIRepository|HelmRepository|Bucket\"}[5m])) by (kind)",
              "interval": "",
              "legendFormat": "{{kind}}",
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Source ops avg. duration",
          "type": "bargauge"
        },
        {
          "collapsed": false,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 9
          },
          "id": 15,
          "panels": [],
          "title": "Status",
          "type": "row"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "custom": {
                "displayMode": "auto",
                "filterable": true,
                "inspect": false
              },
              "mappings": [
                {
                  "options": {
                    "0": {
                      "text": "Ready"
                    },
                    "1": {
                      "text": "Not Ready"
                    }
                  },
                  "type": "value"
                }
              ],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "blue",
                    "value": null
                  },
                  {
                    "color": "blue",
                    "value": 0
                  },
                  {
                    "color": "red",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Status"
                },
                "properties": [
                  {
                    "id": "custom.displayMode",
                    "value": "color-background"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 11,
            "w": 12,
            "x": 0,
            "y": 10
          },
          "id": 33,
          "options": {
            "footer": {
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": true,
                "displayName": "Status"
              }
            ]
          },
          "pluginVersion": "7.5.5",
          "targets": [
            {
              "exemplar": true,
              "expr": "gotk_reconcile_condition{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",type=\"Ready\",status=\"False\",kind=~\"Kustomization|HelmRelease\"}",
              "format": "table",
              "instant": true,
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Cluster reconciliation readiness ",
          "transformations": [
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "Time": true,
                  "__name__": true,
                  "app": true,
                  "container": true,
                  "endpoint": true,
                  "exported_namespace": false,
                  "instance": true,
                  "job": true,
                  "kubernetes_namespace": true,
                  "kubernetes_pod_name": true,
                  "namespace": true,
                  "pod": true,
                  "pod_template_hash": true,
                  "status": true,
                  "type": true
                },
                "indexByName": {},
                "renameByName": {
                  "Value": "Status",
                  "exported_namespace": "Namespace",
                  "kind": "Kind",
                  "name": "Name",
                  "namespace": "Operator Namespace"
                }
              }
            }
          ],
          "type": "table"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "custom": {
                "displayMode": "auto",
                "filterable": true,
                "inspect": false
              },
              "mappings": [
                {
                  "options": {
                    "0": {
                      "text": "Ready"
                    },
                    "1": {
                      "text": "Not Ready"
                    }
                  },
                  "type": "value"
                }
              ],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "blue",
                    "value": null
                  },
                  {
                    "color": "blue",
                    "value": 0
                  },
                  {
                    "color": "red",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Status"
                },
                "properties": [
                  {
                    "id": "custom.displayMode",
                    "value": "color-background"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 11,
            "w": 12,
            "x": 12,
            "y": 10
          },
          "id": 34,
          "options": {
            "footer": {
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": true,
                "displayName": "Status"
              }
            ]
          },
          "pluginVersion": "7.5.5",
          "targets": [
            {
              "exemplar": true,
              "expr": "gotk_reconcile_condition{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",type=\"Ready\",status=\"False\",kind=~\"GitRepository|OCIRepository|HelmRepository|Bucket\"}",
              "format": "table",
              "instant": true,
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Source acquisition readiness ",
          "transformations": [
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "Time": true,
                  "__name__": true,
                  "app": true,
                  "container": true,
                  "endpoint": true,
                  "exported_namespace": false,
                  "instance": true,
                  "job": true,
                  "kubernetes_namespace": true,
                  "kubernetes_pod_name": true,
                  "namespace": true,
                  "pod": true,
                  "pod_template_hash": true,
                  "status": true,
                  "type": true
                },
                "indexByName": {},
                "renameByName": {
                  "Value": "Status",
                  "exported_namespace": "Namespace",
                  "kind": "Kind",
                  "name": "Name",
                  "namespace": "Operator Namespace"
                }
              }
            }
          ],
          "type": "table"
        },
        {
          "collapsed": false,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 21
          },
          "id": 17,
          "panels": [],
          "title": "Timing",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 22
          },
          "hiddenSeries": false,
          "id": 27,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "hideEmpty": true,
            "hideZero": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.5",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "exemplar": true,
              "expr": "sum(rate(gotk_reconcile_duration_seconds_sum{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",kind=~\"Kustomization|HelmRelease\"}[5m])) by (kind, name)\n/\n  sum(rate(gotk_reconcile_duration_seconds_count{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",kind=~\"Kustomization|HelmRelease\"}[5m])) by (kind, name)",
              "hide": false,
              "interval": "",
              "legendFormat": "{{kind}}/{{name}}",
              "refId": "B"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Cluster reconciliation duration",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "s",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 30
          },
          "hiddenSeries": false,
          "id": 35,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "hideEmpty": true,
            "hideZero": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.5",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "exemplar": true,
              "expr": "sum(rate(gotk_reconcile_duration_seconds_sum{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",kind=~\"GitRepository|OCIRepository|HelmRepository|Bucket\"}[5m])) by (kind, name)\n/\n  sum(rate(gotk_reconcile_duration_seconds_count{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",kind=~\"GitRepository|OCIRepository|HelmRepository|Bucket\"}[5m])) by (kind, name)",
              "hide": false,
              "interval": "",
              "legendFormat": "{{kind}}/{{name}}",
              "refId": "B"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Source acquisition duration",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "s",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        }
      ],
      "refresh": "30s",
      "schemaVersion": 36,
      "style": "light",
      "tags": [
        "flux"
      ],
      "templating": {
        "list": [
          {
            "allValue": "",
            "current": {
              "selected": true,
              "text": [
                "All"
              ],
              "value": [
                "$__all"
              ]
            },
            "datasource": "$DS_PROMETHEUS",
            "definition": "label_values(gotk_reconcile_condition, namespace)",
            "description": null,
            "error": null,
            "hide": 0,
            "includeAll": true,
            "label": null,
            "multi": true,
            "name": "operator_namespace",
            "options": [],
            "query": {
              "query": "label_values(gotk_reconcile_condition, namespace)",
              "refId": "StandardVariableQuery"
            },
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 5,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {
              "selected": true,
              "tags": [],
              "text": [
                "All"
              ],
              "value": [
                "$__all"
              ]
            },
            "datasource": "$DS_PROMETHEUS",
            "definition": "label_values(gotk_reconcile_condition, exported_namespace)",
            "description": null,
            "error": null,
            "hide": 0,
            "includeAll": true,
            "label": null,
            "multi": true,
            "name": "namespace",
            "options": [],
            "query": {
              "query": "label_values(gotk_reconcile_condition, exported_namespace)",
              "refId": "StandardVariableQuery"
            },
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "current": {
              "selected": false,
              "text": "Prometheus",
              "value": "Prometheus"
            },
            "hide": 0,
            "includeAll": false,
            "label": "Datasource",
            "multi": false,
            "name": "DS_PROMETHEUS",
            "options": [],
            "query": "prometheus",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "type": "datasource"
          }
        ]
      },
      "time": {
        "from": "now-15m",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "10s",
          "30s",
          "1m",
          "5m",
          "15m",
          "30m",
          "1h",
          "2h",
          "1d"
        ]
      },
      "title": "Flux Cluster Stats",
      "uid": "flux-cluster",
      "version": 3
    }
    
  flux-control-plane-dashboard.json: |
    
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [],
              "type": "dashboard"
            },
            "type": "dashboard"
          },
          {
            "datasource": {
              "type": "datasource",
              "uid": "grafana"
            },
            "enable": true,
            "iconColor": "red",
            "name": "flux events",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [
                "flux"
              ],
              "type": "tags"
            }
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "gnetId": null,
      "graphTooltip": 0,
      "id": 29,
      "iteration": 1639041352219,
      "links": [],
      "liveNow": false,
      "panels": [
        {
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "blue",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 100
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 6,
            "x": 0,
            "y": 0
          },
          "id": 24,
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "value"
          },
          "pluginVersion": "8.2.3",
          "targets": [
            {
              "expr": "sum(go_info{namespace=\"$namespace\",pod=~\".*-controller-.*\"})",
              "interval": "",
              "legendFormat": "pods",
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Controllers",
          "type": "stat"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "blue",
                    "value": null
                  },
                  {
                    "color": "#EAB839",
                    "value": 50
                  },
                  {
                    "color": "red",
                    "value": 100
                  }
                ]
              },
              "unit": "s"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 6,
            "x": 6,
            "y": 0
          },
          "id": 23,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.2.3",
          "targets": [
            {
              "expr": "max(workqueue_longest_running_processor_seconds{namespace=\"$namespace\",pod=~\".*-controller-.*\"})",
              "hide": false,
              "interval": "",
              "legendFormat": "seconds",
              "refId": "B"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Max Work Queue",
          "type": "stat"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "blue",
                    "value": null
                  },
                  {
                    "color": "#EAB839",
                    "value": 500000000
                  },
                  {
                    "color": "red",
                    "value": 900000000
                  }
                ]
              },
              "unit": "decbits"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 6,
            "x": 12,
            "y": 0
          },
          "id": 25,
          "options": {
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showThresholdLabels": false,
            "showThresholdMarkers": true,
            "text": {}
          },
          "pluginVersion": "8.2.3",
          "targets": [
            {
              "expr": "sum(go_memstats_alloc_bytes{namespace=\"$namespace\",pod=~\".*-controller-.*\"})",
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Memory",
          "type": "gauge"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "blue",
                    "value": null
                  },
                  {
                    "color": "#EAB839",
                    "value": 50
                  },
                  {
                    "color": "red",
                    "value": 100
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 6,
            "x": 18,
            "y": 0
          },
          "id": 26,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "mean"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.2.3",
          "targets": [
            {
              "expr": "sum(rate(rest_client_requests_total{namespace=\"$namespace\",pod=~\".*-controller-.*\"}[1m]))",
              "interval": "",
              "legendFormat": "requests",
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "API Requests",
          "type": "stat"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "decimals": null,
          "description": "",
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 5
          },
          "hiddenSeries": false,
          "id": 21,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": false,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "8.2.3",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(rate(rest_client_requests_total{namespace=\"$namespace\"}[1m]))",
              "hide": false,
              "interval": "",
              "legendFormat": "total",
              "refId": "A"
            },
            {
              "expr": "sum(rate(rest_client_requests_total{namespace=\"$namespace\",code!~\"2..\"}[1m]))",
              "hide": false,
              "interval": "",
              "legendFormat": "errors",
              "refId": "B"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Kubernetes API Requests",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "$$hashKey": "object:912",
              "decimals": null,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "$$hashKey": "object:913",
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 13
          },
          "id": 15,
          "panels": [],
          "title": "Resource Usage",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 11,
            "w": 12,
            "x": 0,
            "y": 14
          },
          "hiddenSeries": false,
          "id": 11,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "8.2.3",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "rate(process_cpu_seconds_total{namespace=\"$namespace\",pod=~\".*-controller-.*\"}[1m])",
              "interval": "",
              "legendFormat": "{{pod}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "CPU Usage",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "$$hashKey": "object:93",
              "format": "s",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "$$hashKey": "object:94",
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 11,
            "w": 12,
            "x": 12,
            "y": 14
          },
          "hiddenSeries": false,
          "id": 13,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "8.2.3",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(container_memory_working_set_bytes{namespace=\"$namespace\",container!=\"POD\",container!=\"\",pod=~\".*-controller-.*\"}) by (pod)",
              "hide": false,
              "interval": "",
              "legendFormat": "{{pod}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Memory Usage",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "$$hashKey": "object:93",
              "decimals": 0,
              "format": "bytes",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "$$hashKey": "object:94",
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 25
          },
          "id": 17,
          "panels": [],
          "title": "Reconciliation Stats",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 26
          },
          "hiddenSeries": false,
          "id": 27,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": false,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "8.2.3",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "workqueue_longest_running_processor_seconds{name=\"kustomization\"}",
              "hide": false,
              "interval": "",
              "legendFormat": "kustomizations",
              "refId": "B"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Cluster Reconciliation Duration",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "$$hashKey": "object:912",
              "format": "s",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "$$hashKey": "object:913",
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": true,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "decimals": 2,
          "description": "",
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 34
          },
          "hiddenSeries": false,
          "id": 2,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": false,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": false,
          "linewidth": 1,
          "nullPointMode": "null",
          "percentage": false,
          "pluginVersion": "8.2.3",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": true,
          "targets": [
            {
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"kustomization\",result!=\"error\"}[1m])) by (controller)",
              "format": "time_series",
              "interval": "",
              "legendFormat": "successful reconciliations ",
              "refId": "A"
            },
            {
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"kustomization\",result=\"error\"}[1m])) by (controller)",
              "format": "time_series",
              "interval": "",
              "legendFormat": "failed reconciliations ",
              "refId": "B"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Cluster Reconciliations ops/min",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "$$hashKey": "object:1171",
              "format": "opm",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "$$hashKey": "object:1172",
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 42
          },
          "id": 29,
          "panels": [],
          "title": "Sources Stats",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": true,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "decimals": 2,
          "description": "",
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 43
          },
          "hiddenSeries": false,
          "id": 4,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": false,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": false,
          "linewidth": 1,
          "nullPointMode": "null",
          "percentage": false,
          "pluginVersion": "8.2.3",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": true,
          "targets": [
            {
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"gitrepository\",result!=\"error\"}[1m]))",
              "format": "time_series",
              "interval": "",
              "legendFormat": "successful git pulls",
              "refId": "A"
            },
            {
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"gitrepository\",result=\"error\"}[1m]))",
              "format": "time_series",
              "interval": "",
              "legendFormat": "failed git pulls",
              "refId": "B"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Git Repos ops/min",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "$$hashKey": "object:285",
              "format": "opm",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "$$hashKey": "object:286",
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": true,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "decimals": 2,
          "description": "",
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 43
          },
          "hiddenSeries": false,
          "id": 4,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": false,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": false,
          "linewidth": 1,
          "nullPointMode": "null",
          "percentage": false,
          "pluginVersion": "8.2.3",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": true,
          "targets": [
            {
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"ocirepository\",result!=\"error\"}[1m]))",
              "format": "time_series",
              "interval": "",
              "legendFormat": "successful oci pulls",
              "refId": "A"
            },
            {
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"ocirepository\",result=\"error\"}[1m]))",
              "format": "time_series",
              "interval": "",
              "legendFormat": "failed oci pulls",
              "refId": "B"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "OCI Repos ops/min",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "$$hashKey": "object:285",
              "format": "opm",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "$$hashKey": "object:286",
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": true,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "decimals": 2,
          "description": "",
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 52
          },
          "hiddenSeries": false,
          "id": 4,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": false,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": false,
          "linewidth": 1,
          "nullPointMode": "null",
          "percentage": false,
          "pluginVersion": "8.2.3",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": true,
          "targets": [
            {
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"helmrepository\",result!=\"error\"}[1m]))",
              "format": "time_series",
              "interval": "",
              "legendFormat": "successful helm pulls",
              "refId": "A"
            },
            {
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"helmrepository\",result=\"error\"}[1m]))",
              "format": "time_series",
              "interval": "",
              "legendFormat": "failed helm pulls",
              "refId": "B"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Helm Repos ops/min",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "$$hashKey": "object:285",
              "format": "opm",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "$$hashKey": "object:286",
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": true,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "decimals": 2,
          "description": "",
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 52
          },
          "hiddenSeries": false,
          "id": 4,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": false,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": false,
          "linewidth": 1,
          "nullPointMode": "null",
          "percentage": false,
          "pluginVersion": "8.2.3",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": true,
          "targets": [
            {
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"bucket\",result!=\"error\"}[1m]))",
              "format": "time_series",
              "interval": "",
              "legendFormat": "successful bucket pulls",
              "refId": "A"
            },
            {
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"bucket\",result=\"error\"}[1m]))",
              "format": "time_series",
              "interval": "",
              "legendFormat": "failed bucket pulls",
              "refId": "B"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Buckets ops/min",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "$$hashKey": "object:285",
              "format": "opm",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "$$hashKey": "object:286",
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 61
          },
          "id": 19,
          "panels": [],
          "title": "Helm Stats",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 62
          },
          "hiddenSeries": false,
          "id": 9,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "nullPointMode": "null as zero",
          "percentage": false,
          "pluginVersion": "8.2.3",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(0.50, sum(rate(controller_runtime_reconcile_time_seconds_bucket{controller=\"helmrelease\"}[5m])) by (le))",
              "hide": true,
              "interval": "",
              "legendFormat": "P50",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(0.90, sum(rate(controller_runtime_reconcile_time_seconds_bucket{controller=\"helmrelease\"}[5m])) by (le))",
              "hide": true,
              "interval": "",
              "legendFormat": "P90",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(0.99, sum(rate(controller_runtime_reconcile_time_seconds_bucket{controller=\"helmrelease\"}[5m])) by (le))",
              "hide": false,
              "interval": "",
              "legendFormat": "P99",
              "refId": "C"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Helm Release Duration",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "$$hashKey": "object:1612",
              "format": "s",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "$$hashKey": "object:1613",
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": true,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "decimals": 2,
          "description": "",
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 70
          },
          "hiddenSeries": false,
          "id": 5,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": false,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": false,
          "linewidth": 1,
          "nullPointMode": "null",
          "percentage": false,
          "pluginVersion": "8.2.3",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": true,
          "targets": [
            {
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"helmrelease\",result!=\"error\"}[1m])) by (controller)",
              "format": "time_series",
              "interval": "",
              "legendFormat": "successful reconciliations ",
              "refId": "A"
            },
            {
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"helmrelease\",result=\"error\"}[1m])) by (controller)",
              "format": "time_series",
              "interval": "",
              "legendFormat": "failed reconciliations ",
              "refId": "B"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Helm Releases ops/min",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "$$hashKey": "object:1102",
              "format": "opm",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "$$hashKey": "object:1103",
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": true,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "decimals": 2,
          "description": "",
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 70
          },
          "hiddenSeries": false,
          "id": 6,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": false,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": false,
          "linewidth": 1,
          "nullPointMode": "null",
          "percentage": false,
          "pluginVersion": "8.2.3",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": true,
          "targets": [
            {
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"helmchart\",result!=\"error\"}[1m])) by (controller)",
              "format": "time_series",
              "interval": "",
              "legendFormat": "successful chart pulls",
              "refId": "A"
            },
            {
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"helmchart\",result=\"error\"}[1m])) by (controller)",
              "format": "time_series",
              "interval": "",
              "legendFormat": "failed chart pulls",
              "refId": "B"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Helm Charts ops/min",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "$$hashKey": "object:1892",
              "format": "opm",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "$$hashKey": "object:1893",
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        }
      ],
      "refresh": "10s",
      "schemaVersion": 31,
      "style": "light",
      "tags": [
        "flux"
      ],
      "templating": {
        "list": [
          {
            "current": {
              "selected": false,
              "text": "Prometheus",
              "value": "Prometheus"
            },
            "description": null,
            "error": null,
            "hide": 2,
            "includeAll": false,
            "label": null,
            "multi": false,
            "name": "DS_PROMETHEUS",
            "options": [],
            "query": "prometheus",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "type": "datasource"
          },
          {
            "allValue": null,
            "current": {
              "selected": false,
              "text": "flux-system",
              "value": "flux-system"
            },
            "datasource": "${DS_PROMETHEUS}",
            "definition": "workqueue_work_duration_seconds_count",
            "description": null,
            "error": null,
            "hide": 0,
            "includeAll": false,
            "label": null,
            "multi": false,
            "name": "namespace",
            "options": [],
            "query": {
              "query": "workqueue_work_duration_seconds_count",
              "refId": "Prometheus-namespace-Variable-Query"
            },
            "refresh": 2,
            "regex": "/.*namespace=\"([^\"]*).*/",
            "skipUrlSync": false,
            "sort": 0,
            "tagValuesQuery": "",
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          }
        ]
      },
      "time": {
        "from": "now-15m",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "10s",
          "30s",
          "1m",
          "5m",
          "15m",
          "30m",
          "1h",
          "2h",
          "1d"
        ]
      },
      "timezone": "",
      "title": "Flux Control Plane",
      "uid": "flux-control-plane",
      "version": 2
    }
  flux-logs-dashboard.json: |
    
    {
      "__inputs": [
        {
          "name": "DS_LOKI",
          "label": "Loki",
          "description": "",
          "type": "datasource",
          "pluginId": "loki",
          "pluginName": "Loki"
        }
      ],
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [],
              "type": "dashboard"
            },
            "type": "dashboard"
          },
          {
            "datasource": {
              "type": "datasource",
              "uid": "grafana"
            },
            "enable": true,
            "iconColor": "red",
            "name": "flux events",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [
                "flux"
              ],
              "type": "tags"
            }
          }
        ]
      },
      "description": "Flux logs collected from Kubernetes, stored in Loki",
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "id": 29,
      "iteration": 1653748775696,
      "links": [],
      "liveNow": false,
      "panels": [
        {
          "datasource": "${DS_LOKI}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "bars",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 4,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "hidden",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": "${DS_LOKI}",
              "expr": "sum(count_over_time({namespace=~\"$namespace\", stream=~\"$stream\", app =~\"$controller\"} | json | __error__!=\"JSONParserErr\" | level=~\"$level\" |= \"$query\" [$__interval]))",
              "instant": false,
              "legendFormat": "Log count",
              "range": true,
              "refId": "A"
            }
          ],
          "type": "timeseries"
        },
        {
          "datasource": "${DS_LOKI}",
          "description": "Logs from services running in Kubernetes",
          "gridPos": {
            "h": 25,
            "w": 24,
            "x": 0,
            "y": 4
          },
          "id": 2,
          "options": {
            "dedupStrategy": "numbers",
            "enableLogDetails": false,
            "prettifyLogMessage": true,
            "showCommonLabels": false,
            "showLabels": false,
            "showTime": false,
            "sortOrder": "Descending",
            "wrapLogMessage": false
          },
          "targets": [
            {
              "datasource": "${DS_LOKI}",
              "expr": "{namespace=~\"$namespace\", stream=~\"$stream\", app =~\"$controller\"} | json | __error__!=\"JSONParserErr\" | level=~\"$level\" |= \"$query\"",
              "refId": "A"
            }
          ],
          "type": "logs"
        }
      ],
      "refresh": "10s",
      "schemaVersion": 36,
      "style": "light",
      "tags": [
        "flux"
      ],
      "templating": {
        "list": [
          {
            "current": {
              "selected": false,
              "text": "",
              "value": ""
            },
            "description": "String to search for",
            "hide": 0,
            "label": "Search Query",
            "name": "query",
            "options": [
              {
                "selected": true,
                "text": "",
                "value": ""
              }
            ],
            "query": "",
            "skipUrlSync": false,
            "type": "textbox"
          },
          {
            "allValue": "info|error",
            "current": {
              "selected": false,
              "text": "All",
              "value": "$__all"
            },
            "hide": 0,
            "includeAll": true,
            "multi": false,
            "name": "level",
            "options": [
              {
                "selected": true,
                "text": "All",
                "value": "$__all"
              },
              {
                "selected": false,
                "text": "info",
                "value": "info"
              },
              {
                "selected": false,
                "text": "error",
                "value": "error"
              }
            ],
            "query": "info,error",
            "queryValue": "",
            "skipUrlSync": false,
            "type": "custom"
          },
          {
            "allValue": ".+",
            "current": {
              "selected": true,
              "text": [
                "All"
              ],
              "value": [
                "$__all"
              ]
            },
            "datasource": "${DS_LOKI}",
            "definition": "label_values(app)",
            "hide": 0,
            "includeAll": true,
            "multi": true,
            "name": "controller",
            "options": [],
            "query": "label_values(app)",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "type": "query"
          },
          {
            "allValue": ".+",
            "current": {
              "selected": true,
              "text": [
                "flux-system"
              ],
              "value": [
                "flux-system"
              ]
            },
            "datasource": "${DS_LOKI}",
            "definition": "label_values(namespace)",
            "hide": 0,
            "includeAll": true,
            "multi": true,
            "name": "namespace",
            "options": [],
            "query": "label_values(namespace)",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "type": "query"
          },
          {
            "allValue": ".+",
            "current": {
              "selected": false,
              "text": "All",
              "value": "$__all"
            },
            "datasource": "${DS_LOKI}",
            "definition": "label_values(stream)",
            "hide": 0,
            "includeAll": true,
            "multi": true,
            "name": "stream",
            "options": [],
            "query": "label_values(stream)",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "type": "query"
          },
          {
            "current": {
              "selected": false,
              "text": "Loki",
              "value": "Loki"
            },
            "hide": 0,
            "includeAll": false,
            "label": "Datasource",
            "multi": false,
            "name": "DS_LOKI",
            "options": [],
            "query": "loki",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "type": "datasource"
          }
        ]
      },
      "time": {
        "from": "now-6h",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "Flux Logs",
      "uid": "flux-logs",
      "version": 2
    }
---
# Source: bigbang/templates/grafana/flux/alert.yaml
apiVersion: notification.toolkit.fluxcd.io/v1beta3
kind: Alert
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
spec:
  providerRef:
    name: grafana
  eventSeverity: info
  eventSources:
    - kind: GitRepository
      name: '*'
      namespace: bigbang
---
# Source: bigbang/templates/authservice/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: authservice
  namespace: default
  labels:
    app.kubernetes.io/name: authservice
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/product/packages/authservice.git
  ref:
    tag: 1.0.4-bb.3
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/bbctl/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: bbctl
  namespace: default
  labels:
    app.kubernetes.io/name: bbctl
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/product/packages/bbctl.git
  ref:
    tag: 1.0.0-bb.8
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/grafana/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: grafana
  namespace: default
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/product/packages/grafana.git
  ref:
    tag: 8.14.0-bb.0
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/istio-crds/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: istio-crds
  namespace: default
  labels:
    app.kubernetes.io/name: istio-crds
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/apps/sandbox/istio-crds.git
  ref:
    tag: 1.25.2-bb.0
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/istio-gateway/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: istio-gateway
  namespace: default
  labels:
    app.kubernetes.io/name: istio-gateway
    app.kubernetes.io/component: core
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/product/packages/istio-gateway.git
  ref:
    tag: 1.25.2-bb.1
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/istiod/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: istiod
  namespace: default
  labels:
    app.kubernetes.io/name: istiod
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/apps/sandbox/istiod.git
  ref:
    tag: 1.25.2-bb.4
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/jaeger/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: jaeger
  namespace: default
  labels:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/product/packages/jaeger.git
  ref:
    tag: 2.57.0-bb.8
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/kiali/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: kiali
  namespace: default
  labels:
    app.kubernetes.io/name: kiali
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/product/packages/kiali.git
  ref:
    tag: 2.9.0-bb.2
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/kyverno-policies/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: kyverno-policies
  namespace: default
  labels:
    app.kubernetes.io/name: kyverno-policies
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/product/packages/kyverno-policies.git
  ref:
    tag: 3.3.4-bb.9
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/kyverno-reporter/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: kyverno-reporter
  namespace: default
  labels:
    app.kubernetes.io/name: kyverno-reporter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/product/packages/kyverno-reporter.git
  ref:
    tag: 3.0.3-bb.1
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/kyverno/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: kyverno
  namespace: default
  labels:
    app.kubernetes.io/name: kyverno
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/product/packages/kyverno.git
  ref:
    tag: 3.3.6-bb.1
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/loki/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: loki
  namespace: default
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/product/packages/loki.git
  ref:
    tag: 6.29.0-bb.1
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/minio-operator/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: minio-operator
  namespace: default
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/product/packages/minio-operator.git
  ref:
    tag: 7.1.1-bb.0
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/minio/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: minio
  namespace: default
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/product/packages/minio.git
  ref:
    tag: 7.0.1-bb.0
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/monitoring/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: monitoring
  namespace: default
  labels:
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/product/packages/monitoring.git
  ref:
    tag: 72.2.0-bb.0
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/neuvector/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: neuvector
  namespace: default
  labels:
    app.kubernetes.io/name: neuvector
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/product/packages/neuvector.git
  ref:
    tag: 2.8.5-bb.0
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/promtail/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: promtail
  namespace: default
  labels:
    app.kubernetes.io/name: promtail
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/product/packages/promtail.git
  ref:
    tag: 6.16.6-bb.4
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/tempo/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: tempo
  namespace: default
  labels:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
spec:
  interval: 1m
  url: https://repo1.dso.mil/big-bang/product/packages/tempo.git
  ref:
    tag: 1.21.0-bb.1
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/authservice/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authservice
  namespace: default
  labels:
    app.kubernetes.io/name: authservice
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
  annotations:
    checksum/bigbang-values: e5d378449f026892c215338d96cd104db30070067ad69c206b3526aab331256a
spec:
  targetNamespace: authservice
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: authservice
        namespace: default
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3

  valuesFrom:
    - name: release-name-authservice-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-authservice-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-authservice-values
      kind: Secret
      valuesKey: "overlays"

  dependsOn:
  - name: istiod
    namespace: default
  - name: monitoring
    namespace: default
---
# Source: bigbang/templates/bbctl/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: bbctl
  namespace: default
  labels:
    app.kubernetes.io/name: bbctl
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
  annotations:
    checksum/bigbang-values: e7e752e71e598f3d98e4a0b91107ce8aae53301cada0955f8ba266a98e4d4448
spec:
  targetNamespace: bbctl
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: bbctl
        namespace: default
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3

  valuesFrom:
    - name: release-name-bbctl-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-bbctl-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-bbctl-values
      kind: Secret
      valuesKey: "overlays"

  dependsOn:
    - name: monitoring
      namespace: default
    - name: grafana
      namespace: default
    - name: loki
      namespace: default
    - name: promtail
      namespace: default
---
# Source: bigbang/templates/grafana/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
  namespace: default
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
  annotations:
    checksum/bigbang-values: 1ea2459c5c6a27249b520ef2154f57afc9fe1ea1b29ae0f70a80f34ea736a9ba
spec:
  driftDetection:
    mode: warn
  targetNamespace: monitoring
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: grafana
        namespace: default
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: release-name-grafana-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-grafana-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-grafana-values
      kind: Secret
      valuesKey: "overlays"
  dependsOn:
    - name: istiod
      namespace: default
    - name: kyverno-policies
      namespace: default
    - name: monitoring
      namespace: default
---
# Source: bigbang/templates/istio-crds/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: istio-crds
  namespace: default
  labels:
    app.kubernetes.io/name: istio-crds
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
  annotations:
    checksum/bigbang-values: eb444f6b74ef79df31630b6280c7fa75b47c4443d8186ebf4cc42e75c3757267
spec:
  releaseName: istio-crds
  targetNamespace: istio-system
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: istio-crds
        namespace: default
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: release-name-istio-crds-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-istio-crds-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-istio-crds-values
      kind: Secret
      valuesKey: "overlays"
  dependsOn:
    - name: kyverno-policies
      namespace: default
---
# Source: bigbang/templates/istio-gateway/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: passthrough-ingressgateway
  namespace: default
  labels:
    app.kubernetes.io/name: istio-gateway-passthrough
    app.kubernetes.io/component: core
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
  annotations:
    checksum/bigbang-values: f1871d1a9adfb90102b224de9c78e4125ef6689e25f5f465c695b866cb5a1f40
spec:
  releaseName: passthrough-ingressgateway
  targetNamespace: istio-gateway
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: istio-gateway
        namespace: default
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3
  
  valuesFrom:
    - name: release-name-istio-passthrough-gateway-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-istio-passthrough-gateway-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-istio-passthrough-gateway-values
      kind: Secret
      valuesKey: "overlays"

  dependsOn:
    - name: istiod
      namespace: default
    - name: kyverno-policies
      namespace: default
status: {}
---
# Source: bigbang/templates/istio-gateway/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: public-ingressgateway
  namespace: default
  labels:
    app.kubernetes.io/name: istio-gateway-public
    app.kubernetes.io/component: core
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
  annotations:
    checksum/bigbang-values: f1871d1a9adfb90102b224de9c78e4125ef6689e25f5f465c695b866cb5a1f40
spec:
  releaseName: public-ingressgateway
  targetNamespace: istio-gateway
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: istio-gateway
        namespace: default
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3
  
  valuesFrom:
    - name: release-name-istio-public-gateway-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-istio-public-gateway-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-istio-public-gateway-values
      kind: Secret
      valuesKey: "overlays"

  dependsOn:
    - name: istiod
      namespace: default
    - name: kyverno-policies
      namespace: default
status: {}
---
# Source: bigbang/templates/istiod/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: istiod
  namespace: default
  labels:
    app.kubernetes.io/name: istiod
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
  annotations:
    checksum/bigbang-values: e7457783a0e4ea211e3eb3660cec4a3c1279d6610aa7032f0c760cd23ae5a2d3
spec:
  releaseName: istiod
  targetNamespace: istio-system
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: istiod
        namespace: default
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: release-name-istiod-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-istiod-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-istiod-values
      kind: Secret
      valuesKey: "overlays"

  dependsOn:
    - name: istio-crds
      namespace: default
    - name: kyverno-policies
      namespace: default
---
# Source: bigbang/templates/jaeger/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: jaeger
  namespace: default
  labels:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
  annotations:
    checksum/bigbang-values: ffa42040b57d914ed6ad2271bed2d5ad9449cf794e9dd13518e6468a6e77ae71
spec:
  driftDetection:
    mode: warn
  targetNamespace: jaeger
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: jaeger
        namespace: default
      interval: 5m
  install:
    crds: CreateReplace
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    crds: CreateReplace
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: release-name-jaeger-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-jaeger-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-jaeger-values
      kind: Secret
      valuesKey: "overlays"

  
  dependsOn:
    - name: istiod
      namespace: default
    - name: monitoring
      namespace: default
---
# Source: bigbang/templates/kiali/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kiali
  namespace: default
  labels:
    app.kubernetes.io/name: kiali
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
  annotations:
    checksum/bigbang-values: 32fb7769874cc4cc387d77adb76d05cd61b55cab4210ab1b7b7d3d3a72df4ca5
spec:
  targetNamespace: kiali
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: kiali
        namespace: default
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: release-name-kiali-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-kiali-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-kiali-values
      kind: Secret
      valuesKey: "overlays"

  
  dependsOn:
    - name: istiod
      namespace: default
    - name: monitoring
      namespace: default
---
# Source: bigbang/templates/kyverno-policies/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kyverno-policies
  namespace: default
  labels:
    app.kubernetes.io/name: kyverno-policies
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
  annotations:
    checksum/bigbang-values: caa32204fc5ef95321f702618eba877abae0fee11a594811e25bdc2b1935d2c6
spec:
  targetNamespace: kyverno
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: kyverno-policies
        namespace: default
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: release-name-kyverno-policies-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-kyverno-policies-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-kyverno-policies-values
      kind: Secret
      valuesKey: "overlays"
  dependsOn:
    - name: kyverno
      namespace: default
---
# Source: bigbang/templates/kyverno-reporter/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kyverno-reporter
  namespace: default
  labels:
    app.kubernetes.io/name: kyverno-reporter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
  annotations:
    checksum/bigbang-values: ed5a21cb2fc63b6f98fdcbe34362da14a625f56b2caf76993ab268e7f96ffa91
spec:
  targetNamespace: kyverno-reporter
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: kyverno-reporter
        namespace: default
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: release-name-kyverno-reporter-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-kyverno-reporter-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-kyverno-reporter-values
      kind: Secret
      valuesKey: "overlays"
  dependsOn:
    - name: kyverno
      namespace: default
    - name: kyverno-policies
      namespace: default
    - name: monitoring
      namespace: default
    - name: istiod
      namespace: default
---
# Source: bigbang/templates/kyverno/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kyverno
  namespace: default
  labels:
    app.kubernetes.io/name: kyverno
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
  annotations:
    checksum/bigbang-values: cccdd859801d99627d051bf04315e4dfb39b9109158db4cf9aa043abba7db894
spec:
  targetNamespace: kyverno
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: kyverno
        namespace: default
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: release-name-kyverno-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-kyverno-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-kyverno-values
      kind: Secret
      valuesKey: "overlays"
---
# Source: bigbang/templates/loki/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: loki
  namespace: default
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
  annotations:
    checksum/bigbang-values: 24c131e00f91796bd7aa876a635e0dd4701ad7cb0045b21b59ca2929a9ca8639
spec:
  driftDetection:
    mode: warn
    ignore:
      - paths: [""]
        target:
          kind: Tenant
      - paths: [""]
        target:
         kind: Sidecar
  releaseName: logging-loki
  targetNamespace: logging
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: loki
        namespace: default
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: release-name-loki-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-loki-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-loki-values
      kind: Secret
      valuesKey: "overlays"
  dependsOn:
    - name: monitoring
      namespace: default
    - name: istiod
      namespace: default
    - name: kyverno-policies
      namespace: default
    - name: minio-operator
      namespace: default
---
# Source: bigbang/templates/minio-operator/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: minio-operator
  namespace: default
  annotations:
    checksum/bigbang-values: 5fda86512f38654ba24143a6f328fb759e5138c24cbb8c6b00b607fd9bc42c56
spec:
  targetNamespace: minio-operator
  driftDetection:
    mode: warn
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: minio-operator
        namespace: default
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: release-name-minio-operator-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-minio-operator-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-minio-operator-values
      kind: Secret
      valuesKey: "overlays"

  values:
    podAnnotations:
      sidecar.istio.io/inject: "true"
      traffic.sidecar.istio.io/includeInboundPorts: "*"
      traffic.sidecar.istio.io/excludeInboundPorts: "9443"
    imagePullSecrets:
      - name: private-registry
  dependsOn:
    - name: istiod
      namespace: default
    - name: kyverno-policies
      namespace: default
---
# Source: bigbang/templates/monitoring/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: monitoring
  namespace: default
  labels:
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
  annotations:
    checksum/bigbang-values: 12d46fa0352452a5c9cc015c5b3797bcd3f57a3fe909b2e0ff178d116a49da90
spec:
  targetNamespace: monitoring
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: monitoring
        namespace: default
      interval: 5m
  install:
    crds: CreateReplace
    disableOpenAPIValidation: true
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 20m
  upgrade:
    cleanupOnFail: false
    crds: CreateReplace
    disableOpenAPIValidation: true
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: release-name-monitoring-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-monitoring-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-monitoring-values
      kind: Secret
      valuesKey: "overlays"
  dependsOn:
    - name: istiod
      namespace: default
    - name: kyverno-policies
      namespace: default
---
# Source: bigbang/templates/neuvector/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: neuvector
  namespace: default
  labels:
    app.kubernetes.io/name: neuvector
    app.kubernetes.io/component: "sandbox"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
  annotations:
    checksum/bigbang-values: 00fb0212d56a452203c7952cd935b278200db242a58ed2ae154681dccd950e02
spec:
  targetNamespace: neuvector
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: neuvector
        namespace: default
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: release-name-neuvector-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-neuvector-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-neuvector-values
      kind: Secret
      valuesKey: "overlays"
  dependsOn:
    - name: istiod
      namespace: default
    - name: kyverno-policies
      namespace: default
    - name: monitoring
      namespace: default
---
# Source: bigbang/templates/promtail/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: promtail
  namespace: default
  labels:
    app.kubernetes.io/name: promtail
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
  annotations:
    checksum/bigbang-values: 10c989d4a72f411956d3737f594854b78f4e13213b79dcea8ce36efe942a841c
spec:
  driftDetection:
    mode: warn
  targetNamespace: promtail
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: promtail
        namespace: default
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: release-name-promtail-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-promtail-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-promtail-values
      kind: Secret
      valuesKey: "overlays"

  dependsOn:
    - name: loki
      namespace: default
    - name: istiod
      namespace: default
    - name: kyverno-policies
      namespace: default
---
# Source: bigbang/templates/tempo/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: tempo
  namespace: default
  labels:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
  annotations:
    checksum/bigbang-values: a268dfdc8449bb3d4a6bc014fcd760d5099a234112f38181e83db88b46677912
spec:
  driftDetection:
    mode: warn
  targetNamespace: tempo
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: tempo
        namespace: default
      interval: 5m
  install:
    remediation:
      retries: 3
  interval: 1m
  rollback:
    cleanupOnFail: false
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: false
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: release-name-tempo-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-tempo-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-tempo-values
      kind: Secret
      valuesKey: "overlays"
  dependsOn:
    - name: monitoring
      namespace: default
    - name: istiod
      namespace: default
---
# Source: bigbang/templates/grafana/flux/provider.yaml
apiVersion: notification.toolkit.fluxcd.io/v1beta3
kind: Provider
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.52.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-2.52.0
spec:
  type: grafana
  address: "http://monitoring-monitoring-grafana.monitoring/api/annotations"
  secretRef:
    name: grafana-flux-auth
