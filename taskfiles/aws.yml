# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

vars:
  BIGBANG_DIR: .

tasks:
  ec2:
    desc: Create an EC2 instance for BigBang development using k3d-dev script
    DOCKER_HOST: 
      sh: "yq .DOCKER_HOST dev.yaml"
    cmds:
      - "{{.BIGBANG_DIR}}/docs/assets/scripts/developer/k3d-dev.sh"
      - task: ec2:ssh-config
      - task: ec2:post
    status:
      - cat dev.yaml
      - "DOCKER_HOST={{ .DOCKER_HOST }} docker ps"

  ec2:post:
    desc: Output basic metadata about instance
    cmds:
      - "aws ec2 describe-instances --filters \"Name=tag:Name,Values=$(aws sts get-caller-identity --query 'Arn' --output text | cut -d'/' -f3 | tr -d '@')-dev\"
        \"Name=instance-state-name,Values=running\"
        --query 'Reservations[0].Instances[0]'
        --output json | yq eval '{
          \"INST_ID\": .InstanceId,
          \"EC2_PUBLIC_IP\": .PublicIpAddress,
          \"COMMAND_PREFIX\": (\"ssh ubuntu@\" + .PublicIpAddress),
          \"DOCKER_HOST\": (\"ssh://ubuntu@\" + .PublicIpAddress),
          \"BASE_MOUNT_DIR\": \"/home/ubuntu\",
          \"STATE\": .State.Name
        }' > dev.yaml" 

  ec2:ssh-config:
    desc: Create or update SSH config host entry for the EC2 instance
    vars:
      AWS_USERNAME: 
        sh: aws sts get-caller-identity --query 'Arn' --output text | cut -d'/' -f3 | tr -d '@'
      EC2_PUBLIC_IP:
        sh: aws ec2 describe-instances --filters "Name=tag:Name,Values={{.AWS_USERNAME}}-dev" "Name=instance-state-name,Values=pending,running,stopping,stopped"  --query 'Reservations[*].Instances[*].[PublicIpAddress]' --output json | jq -r '.[0][0][0]'
      SSH_CONFIG: ~/.ssh/config
      HOST_ENTRY: |
        Host {{.EC2_PUBLIC_IP}}
          HostName {{.EC2_PUBLIC_IP}}
          User ubuntu
          IdentityFile ~/.ssh/{{.AWS_USERNAME}}-dev-default.pem
          IdentitiesOnly yes
          StrictHostKeyChecking no
    cmds:
      - |
        # Check if the host entry already exists
        if grep -q "^Host mydockerhost$" {{.SSH_CONFIG}}; then
          echo "Updating existing mydockerhost entry in SSH config..."
          # Remove existing entry (from "Host mydockerhost" to the next "Host" or end of file)
          awk '/^Host mydockerhost$/{flag=1; next} /^Host /{flag=0} !flag' {{.SSH_CONFIG}} > {{.SSH_CONFIG}}.tmp
          mv {{.SSH_CONFIG}}.tmp {{.SSH_CONFIG}}
        else
          echo "Adding new mydockerhost entry to SSH config..."
        fi
        
        # Add the new/updated host entry
        echo "" >> {{.SSH_CONFIG}}
        echo "{{.HOST_ENTRY}}" >> {{.SSH_CONFIG}}
        
        echo "SSH config updated successfully!"
        echo "You can now connect using: ssh {{.EC2_PUBLIC_IP}}"

  ec2:destroy:
    desc: Destroy EC2 instance for BigBang development using k3d-dev script
    cmds:
      - "{{.BIGBANG_DIR}}/docs/assets/scripts/developer/k3d-dev.sh -d --recreate-cloud-instance"
      - "rm -f dev.yaml"