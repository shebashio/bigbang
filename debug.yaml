---
# Source: bigbang/templates/alloy/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: alloy
  labels:
    app.kubernetes.io/name: alloy
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
    istio-injection: enabled
---
# Source: bigbang/templates/authservice/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: authservice
  labels:
    istio-injection: enabled
    app.kubernetes.io/name: authservice
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
---
# Source: bigbang/templates/bbctl/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: bbctl
  labels:
    app.kubernetes.io/name: bbctl
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
    istio-injection: enabled
---
# Source: bigbang/templates/istio-crds/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: istio-system
  labels:
    istio-base-managed: Reconcile
    istio-injection: disabled
    app.kubernetes.io/name: istio-system
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
---
# Source: bigbang/templates/istio-crds/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: istio-gateway
  labels:
    istio-gateway-managed: Reconcile
    istio-injection: enabled
    app.kubernetes.io/name: istio-gateway
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
---
# Source: bigbang/templates/kiali/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: kiali
  labels:
    istio-injection: enabled
    app.kubernetes.io/name: kiali
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
---
# Source: bigbang/templates/kyverno-reporter/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/name: kyverno-reporter
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
    istio-injection: enabled
  name: kyverno-reporter
---
# Source: bigbang/templates/kyverno/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/name: kyverno
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
    istio-injection: disabled
  name: kyverno
---
# Source: bigbang/templates/loki/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: logging
  labels:
    app.kubernetes.io/name: logging
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
    istio-injection: enabled
---
# Source: bigbang/templates/metrics-server/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/component: "cluster-utilities"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
    istio-injection: enabled
  name: metrics-server
---
# Source: bigbang/templates/prometheus-operator-crds/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
  labels:
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
    istio-injection: enabled
---
# Source: bigbang/templates/tempo/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: tempo
  labels:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
    istio-injection: enabled
---
# Source: bigbang/templates/grafana/flux/ingress-flux.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-from-flux
  namespace: monitoring
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: grafana
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: notification-controller
      namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: flux-system
    ports:
    - port: 3000
      protocol: TCP
---
# Source: bigbang/templates/alloy/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-alloy-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    |-
      istio:
        enabled: true
        hardened:
          enabled: false
      k8s-monitoring:
        alloy-logs:
          enabled: true
        destinations:
        - name: loki
          type: loki
          url: http://logging-loki.logging.svc.cluster.local:3100/loki/api/v1/push
        podLogs:
          collector: alloy-logs
          destinations:
          - loki
          enabled: true
          labelsToKeep:
          - app.kubernetes.io/name
          - container
          - instance
          - job
          - level
          - namespace
          - service.name
          - service.namespace
          - deployment.environment
          - deployment.environment.name
          - k8s.namespace.name
          - k8s.deployment.name
          - k8s.statefulset.name
          - k8s.daemonset.name
          - k8s.cronjob.name
          - k8s.job.name
          - k8s.node.name
          - k8s.pod.name
          - pod
          structuredMetadata:
            k8s.pod.name: null
            pod: null
      monitoring:
        enabled: true
      networkPolicies:
        controlPlaneCidr: 0.0.0.0/0
        enabled: true
        istioNamespaceSelector:
          egress: istio-system
          ingress: istio-gateway
      serviceMonitors:
      - additionalLabels:
          app.kubernetes.io/instance: alloy
          app.kubernetes.io/name: alloy-logs
        name: alloy-alloy-logs
        scheme: https
        selectorLabels:
          app.kubernetes.io/instance: alloy-alloy-logs
          app.kubernetes.io/name: alloy-logs
        tlsConfig:
          caFile: /etc/prom-certs/root-cert.pem
          certFile: /etc/prom-certs/cert-chain.pem
          insecureSkipVerify: true
          keyFile: /etc/prom-certs/key.pem
      upstream:
        istio:
          enabled: true
          hardened:
            enabled: false
        k8s-monitoring:
          alloy-logs:
            enabled: true
          destinations:
          - name: loki
            type: loki
            url: http://logging-loki.logging.svc.cluster.local:3100/loki/api/v1/push
          podLogs:
            collector: alloy-logs
            destinations:
            - loki
            enabled: true
            labelsToKeep:
            - app.kubernetes.io/name
            - container
            - instance
            - job
            - level
            - namespace
            - service.name
            - service.namespace
            - deployment.environment
            - deployment.environment.name
            - k8s.namespace.name
            - k8s.deployment.name
            - k8s.statefulset.name
            - k8s.daemonset.name
            - k8s.cronjob.name
            - k8s.job.name
            - k8s.node.name
            - k8s.pod.name
            - pod
            structuredMetadata:
              k8s.pod.name: null
              pod: null
        monitoring:
          enabled: true
        networkPolicies:
          controlPlaneCidr: 0.0.0.0/0
          enabled: true
          istioNamespaceSelector:
            egress: istio-system
            ingress: istio-gateway
        serviceMonitors:
        - additionalLabels:
            app.kubernetes.io/instance: alloy
            app.kubernetes.io/name: alloy-logs
          name: alloy-alloy-logs
          scheme: https
          selectorLabels:
            app.kubernetes.io/instance: alloy-alloy-logs
            app.kubernetes.io/name: alloy-logs
          tlsConfig:
            caFile: /etc/prom-certs/root-cert.pem
            certFile: /etc/prom-certs/cert-chain.pem
            insecureSkipVerify: true
            keyFile: /etc/prom-certs/key.pem
  overlays: |
    {}
---
# Source: bigbang/templates/authservice/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-authservice-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    |-
      chains:
        alertmanager:
          authorization_uri: https://login.dso.mil/auth/realms/baby-yoda/protocol/openid-connect/auth
          callback_uri: https://alertmanager.dev.bigbang.mil/login/generic_oauth
          client_id: platform1_a8604cc9-f5e9-4656-802d-d05624370245_bb8-alertmanager
          client_secret: ""
          logout_redirect_uri: https://login.dso.mil/auth/realms/baby-yoda/protocol/openid-connect/logout
          match:
            header: :authority
            prefix: alertmanager.dev.bigbang.mil
          token_uri: https://login.dso.mil/auth/realms/baby-yoda/protocol/openid-connect/token
        prometheus:
          authorization_uri: https://login.dso.mil/auth/realms/baby-yoda/protocol/openid-connect/auth
          callback_uri: https://prometheus.dev.bigbang.mil/login/generic_oauth
          client_id: platform1_a8604cc9-f5e9-4656-802d-d05624370245_bb8-prometheus
          client_secret: ""
          logout_redirect_uri: https://login.dso.mil/auth/realms/baby-yoda/protocol/openid-connect/logout
          match:
            header: :authority
            prefix: prometheus.dev.bigbang.mil
          token_uri: https://login.dso.mil/auth/realms/baby-yoda/protocol/openid-connect/token
      global:
        authorization_uri: https://login.dso.mil/auth/realms/baby-yoda/protocol/openid-connect/auth
        jwks_uri: https://login.dso.mil/auth/realms/baby-yoda/protocol/openid-connect/certs
        logout_redirect_uri: https://login.dso.mil/auth/realms/baby-yoda/protocol/openid-connect/logout
        oidc:
          host: login.dso.mil
          realm: baby-yoda
        token_uri: https://login.dso.mil/auth/realms/baby-yoda/protocol/openid-connect/token
      image:
        pullPolicy: IfNotPresent
      imagePullSecrets:
      - name: private-registry
      issuer_uri: https://login.dso.mil/auth/realms/baby-yoda
      istio:
        clusterWideHardenedEnabled: false
        enabled: true
        hardened:
          enabled: false
      monitoring:
        enabled: true
      networkPolicies:
        enabled: true
        ingressLabels:
          app: public-ingressgateway
          istio: ingressgateway
        istioNamespaceSelector:
          egress: istio-system
          ingress: istio-gateway
      openshift: false
      podAnnotations:
        bigbang.dev/istioVersion: 1.26.3
      upstream:
        chains:
          alertmanager:
            authorization_uri: https://login.dso.mil/auth/realms/baby-yoda/protocol/openid-connect/auth
            callback_uri: https://alertmanager.dev.bigbang.mil/login/generic_oauth
            client_id: platform1_a8604cc9-f5e9-4656-802d-d05624370245_bb8-alertmanager
            client_secret: ""
            logout_redirect_uri: https://login.dso.mil/auth/realms/baby-yoda/protocol/openid-connect/logout
            match:
              header: :authority
              prefix: alertmanager.dev.bigbang.mil
            token_uri: https://login.dso.mil/auth/realms/baby-yoda/protocol/openid-connect/token
          prometheus:
            authorization_uri: https://login.dso.mil/auth/realms/baby-yoda/protocol/openid-connect/auth
            callback_uri: https://prometheus.dev.bigbang.mil/login/generic_oauth
            client_id: platform1_a8604cc9-f5e9-4656-802d-d05624370245_bb8-prometheus
            client_secret: ""
            logout_redirect_uri: https://login.dso.mil/auth/realms/baby-yoda/protocol/openid-connect/logout
            match:
              header: :authority
              prefix: prometheus.dev.bigbang.mil
            token_uri: https://login.dso.mil/auth/realms/baby-yoda/protocol/openid-connect/token
        global:
          authorization_uri: https://login.dso.mil/auth/realms/baby-yoda/protocol/openid-connect/auth
          jwks_uri: https://login.dso.mil/auth/realms/baby-yoda/protocol/openid-connect/certs
          logout_redirect_uri: https://login.dso.mil/auth/realms/baby-yoda/protocol/openid-connect/logout
          oidc:
            host: login.dso.mil
            realm: baby-yoda
          token_uri: https://login.dso.mil/auth/realms/baby-yoda/protocol/openid-connect/token
        image:
          pullPolicy: IfNotPresent
        imagePullSecrets:
        - name: private-registry
        issuer_uri: https://login.dso.mil/auth/realms/baby-yoda
        istio:
          clusterWideHardenedEnabled: false
          enabled: true
          hardened:
            enabled: false
        monitoring:
          enabled: true
        networkPolicies:
          enabled: true
          ingressLabels:
            app: public-ingressgateway
            istio: ingressgateway
          istioNamespaceSelector:
            egress: istio-system
            ingress: istio-gateway
        openshift: false
        podAnnotations:
          bigbang.dev/istioVersion: 1.26.3
  overlays: |
    {}
---
# Source: bigbang/templates/bbctl/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-bbctl-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    |-
      baseConfig:
        preflight-check:
          registrypassword: null
          registryserver: https://registry1.dso.mil
          registryusername: null
        skip-update-check: true
      credentialsFile:
        credentials:
        - password: null
          uri: registry1.dso.mil
          username: null
        - password: ""
          uri: repo1.dso.mil
          username: ""
      email: ""
      image:
        imagePullPolicy: IfNotPresent
      istio:
        enabled: true
        hardened:
          enabled: false
      password: ""
      registry: registry1.dso.mil
      registryCredentials: null
      upstream:
        baseConfig:
          preflight-check:
            registrypassword: null
            registryserver: https://registry1.dso.mil
            registryusername: null
          skip-update-check: true
        credentialsFile:
          credentials:
          - password: null
            uri: registry1.dso.mil
            username: null
          - password: ""
            uri: repo1.dso.mil
            username: ""
        email: ""
        image:
          imagePullPolicy: IfNotPresent
        istio:
          enabled: true
          hardened:
            enabled: false
        password: ""
        registry: registry1.dso.mil
        registryCredentials: null
        username: ""
      username: ""
  overlays: |
    {}
---
# Source: bigbang/templates/grafana/flux/grafana-auth-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: grafana-flux-auth
  namespace: monitoring
  labels:
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
type: kubernetes.io/opaque
stringData:
  username: admin
  password: prom-operator
---
# Source: bigbang/templates/grafana/secret-sso.yaml
apiVersion: v1
kind: Secret
metadata:
  name: grafana-sso
  namespace: monitoring
type: kubernetes.io/opaque
stringData:
  client_id: platform1_a8604cc9-f5e9-4656-802d-d05624370245_bb8-grafana
---
# Source: bigbang/templates/grafana/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-grafana-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    |-
      anchoreEnterprise:
        enabled: false
      datasources:
        datasourcesbb.yaml:
          apiVersion: 1
          datasources:
          - access: proxy
            editable: true
            name: Prometheus
            type: prometheus
            uid: prometheus
            url: http://monitoring-monitoring-kube-prometheus.monitoring.svc:9090
          - access: proxy
            editable: true
            jsonData:
              derivedFields:
              - datasourceName: Tempo
                datasourceUid: tempo
                matcherRegex: traceID=(\w+)
                name: TraceID
                url: $${__value.raw}
            name: Loki
            type: loki
            url: http://logging-loki.logging.svc.cluster.local:3100
          - access: proxy
            editable: true
            isDefault: false
            jsonData:
              httpMethod: GET
              lokiSearch:
                datasourceUid: Loki
              nodeGraph:
                enabled: true
              search:
                hide: false
              serviceMap:
                datasourceUid: prometheus
              tracesToLogs:
                datasourceUid: Loki
                filterBySpanID: false
                filterByTraceID: false
                mapTagNamesEnabled: false
                mappedTags:
                - key: service.name
                  value: service
                spanEndTimeShift: 1h
                spanStartTimeShift: 1h
                tags:
                - job
                - instance
                - pod
                - namespace
            name: Tempo
            orgId: 1
            type: tempo
            uid: tempo
            url: http://tempo-tempo.tempo.svc:3100
      domain: dev.bigbang.mil
      env:
        GF_FEATURE_TOGGLES_ENABLE: traceqlEditor tempoSearch tempoServiceGraph
      extraSecretMounts:
      - defaultMode: 288
        mountPath: /etc/secrets/auth_generic_oauth
        name: auth-generic-oauth-secret
        readOnly: true
        secretName: grafana-sso
      flux:
        enabled: true
      gitlabRunner:
        enabled: false
      grafana.ini:
        auth.generic_oauth:
          allow_sign_up: true
          api_url: https://login.dso.mil/auth/realms/baby-yoda/protocol/openid-connect/userinfo
          auth_url: https://login.dso.mil/auth/realms/baby-yoda/protocol/openid-connect/auth
          client_id: $__file{/etc/secrets/auth_generic_oauth/client_id}
          enabled: true
          name: P1 SSO
          role_attribute_path: Viewer
          scopes: openid Grafana
          token_url: https://login.dso.mil/auth/realms/baby-yoda/protocol/openid-connect/token
        server:
          root_url: https://grafana.dev.bigbang.mil/
      hostname: dev.bigbang.mil
      image:
        pullPolicy: IfNotPresent
        pullSecrets:
        - private-registry
      istio:
        enabled: true
        grafana:
          enabled: true
          gateways:
          - istio-gateway/public-ingressgateway
        hardened:
          enabled: false
        injection: enabled
      kiali:
        enabled: true
      loki:
        enabled: true
      minioOperator:
        enabled: false
      networkPolicies:
        controlPlaneCidr: 0.0.0.0/0
        enabled: true
        ingressLabels:
          app: public-ingressgateway
          istio: ingressgateway
        istioNamespaceSelector:
          egress: istio-system
          ingress: istio-gateway
      openshift: false
      podAnnotations:
        bigbang.dev/istioVersion: 1.26.3
      serviceMonitor:
        enabled: true
        scheme: https
        tlsConfig:
          caFile: /etc/prom-certs/root-cert.pem
          certFile: /etc/prom-certs/cert-chain.pem
          insecureSkipVerify: true
          keyFile: /etc/prom-certs/key.pem
      sidecar:
        imagePullPolicy: IfNotPresent
      sso:
        enabled: true
      tempo:
        enabled: true
      upstream:
        anchoreEnterprise:
          enabled: false
        datasources:
          datasourcesbb.yaml:
            apiVersion: 1
            datasources:
            - access: proxy
              editable: true
              name: Prometheus
              type: prometheus
              uid: prometheus
              url: http://monitoring-monitoring-kube-prometheus.monitoring.svc:9090
            - access: proxy
              editable: true
              jsonData:
                derivedFields:
                - datasourceName: Tempo
                  datasourceUid: tempo
                  matcherRegex: traceID=(\w+)
                  name: TraceID
                  url: $${__value.raw}
              name: Loki
              type: loki
              url: http://logging-loki.logging.svc.cluster.local:3100
            - access: proxy
              editable: true
              isDefault: false
              jsonData:
                httpMethod: GET
                lokiSearch:
                  datasourceUid: Loki
                nodeGraph:
                  enabled: true
                search:
                  hide: false
                serviceMap:
                  datasourceUid: prometheus
                tracesToLogs:
                  datasourceUid: Loki
                  filterBySpanID: false
                  filterByTraceID: false
                  mapTagNamesEnabled: false
                  mappedTags:
                  - key: service.name
                    value: service
                  spanEndTimeShift: 1h
                  spanStartTimeShift: 1h
                  tags:
                  - job
                  - instance
                  - pod
                  - namespace
              name: Tempo
              orgId: 1
              type: tempo
              uid: tempo
              url: http://tempo-tempo.tempo.svc:3100
        domain: dev.bigbang.mil
        env:
          GF_FEATURE_TOGGLES_ENABLE: traceqlEditor tempoSearch tempoServiceGraph
        extraSecretMounts:
        - defaultMode: 288
          mountPath: /etc/secrets/auth_generic_oauth
          name: auth-generic-oauth-secret
          readOnly: true
          secretName: grafana-sso
        flux:
          enabled: true
        gitlabRunner:
          enabled: false
        grafana.ini:
          auth.generic_oauth:
            allow_sign_up: true
            api_url: https://login.dso.mil/auth/realms/baby-yoda/protocol/openid-connect/userinfo
            auth_url: https://login.dso.mil/auth/realms/baby-yoda/protocol/openid-connect/auth
            client_id: $__file{/etc/secrets/auth_generic_oauth/client_id}
            enabled: true
            name: P1 SSO
            role_attribute_path: Viewer
            scopes: openid Grafana
            token_url: https://login.dso.mil/auth/realms/baby-yoda/protocol/openid-connect/token
          server:
            root_url: https://grafana.dev.bigbang.mil/
        hostname: dev.bigbang.mil
        image:
          pullPolicy: IfNotPresent
          pullSecrets:
          - private-registry
        istio:
          enabled: true
          grafana:
            enabled: true
            gateways:
            - istio-gateway/public-ingressgateway
          hardened:
            enabled: false
          injection: enabled
        kiali:
          enabled: true
        loki:
          enabled: true
        minioOperator:
          enabled: false
        networkPolicies:
          controlPlaneCidr: 0.0.0.0/0
          enabled: true
          ingressLabels:
            app: public-ingressgateway
            istio: ingressgateway
          istioNamespaceSelector:
            egress: istio-system
            ingress: istio-gateway
        openshift: false
        podAnnotations:
          bigbang.dev/istioVersion: 1.26.3
        serviceMonitor:
          enabled: true
          scheme: https
          tlsConfig:
            caFile: /etc/prom-certs/root-cert.pem
            certFile: /etc/prom-certs/cert-chain.pem
            insecureSkipVerify: true
            keyFile: /etc/prom-certs/key.pem
        sidecar:
          imagePullPolicy: IfNotPresent
        sso:
          enabled: true
        tempo:
          enabled: true
        vault:
          enabled: false
          tlsDisable: true
      vault:
        enabled: false
        tlsDisable: true
  overlays: |
    istio:
      enabled: true
---
# Source: bigbang/templates/istio-crds/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-istio-crds-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    |-
      upstream:
        global:
          imagePullSecrets:
          - private-registry
        upstream:
          global:
            imagePullSecrets:
            - private-registry
  overlays: |
    {}
---
# Source: bigbang/templates/istio-gateway/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-istio-passthrough-gateway-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    |-
      gateway:
        servers:
        - hosts:
          - '*.dev.bigbang.mil'
          port:
            name: http
            number: 8080
            protocol: HTTP
          tls:
            httpsRedirect: true
        - hosts:
          - '*.dev.bigbang.mil'
          port:
            name: https
            number: 8443
            protocol: HTTPS
          tls:
            mode: PASSTHROUGH
      networkPolicies:
        enabled: true
        istioNamespaceSelector:
          egress: istio-system
          ingress: istio-gateway
      upstream:
        gateway:
          servers:
          - hosts:
            - '*.dev.bigbang.mil'
            port:
              name: http
              number: 8080
              protocol: HTTP
            tls:
              httpsRedirect: true
          - hosts:
            - '*.dev.bigbang.mil'
            port:
              name: https
              number: 8443
              protocol: HTTPS
            tls:
              mode: PASSTHROUGH
        imagePullPolicy: IfNotPresent
        imagePullSecrets:
        - name: private-registry
        labels:
          istio: ingressgateway
        networkPolicies:
          enabled: true
          istioNamespaceSelector:
            egress: istio-system
            ingress: istio-gateway
        serviceAccount:
          create: true
          name: passthrough-ingressgateway-ingressgateway-service-account
        upstream:
          imagePullPolicy: IfNotPresent
          imagePullSecrets:
          - name: private-registry
          labels:
            istio: ingressgateway
          serviceAccount:
            create: true
            name: passthrough-ingressgateway-ingressgateway-service-account
  overlays: |
    null
---
# Source: bigbang/templates/istio-gateway/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-istio-public-gateway-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    |-
      gateway:
        servers:
        - hosts:
          - '*.dev.bigbang.mil'
          port:
            name: http
            number: 8080
            protocol: HTTP
          tls:
            httpsRedirect: true
        - hosts:
          - '*.dev.bigbang.mil'
          port:
            name: https
            number: 8443
            protocol: HTTPS
          tls:
            credentialName: public-cert
            mode: SIMPLE
      networkPolicies:
        enabled: true
        istioNamespaceSelector:
          egress: istio-system
          ingress: istio-gateway
      upstream:
        gateway:
          servers:
          - hosts:
            - '*.dev.bigbang.mil'
            port:
              name: http
              number: 8080
              protocol: HTTP
            tls:
              httpsRedirect: true
          - hosts:
            - '*.dev.bigbang.mil'
            port:
              name: https
              number: 8443
              protocol: HTTPS
            tls:
              credentialName: public-cert
              mode: SIMPLE
        imagePullPolicy: IfNotPresent
        imagePullSecrets:
        - name: private-registry
        labels:
          istio: ingressgateway
        networkPolicies:
          enabled: true
          istioNamespaceSelector:
            egress: istio-system
            ingress: istio-gateway
        serviceAccount:
          create: true
          name: public-ingressgateway-ingressgateway-service-account
        upstream:
          imagePullPolicy: IfNotPresent
          imagePullSecrets:
          - name: private-registry
          labels:
            istio: ingressgateway
          serviceAccount:
            create: true
            name: public-ingressgateway-ingressgateway-service-account
  overlays: |
    null
---
# Source: bigbang/templates/istiod/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-istiod-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    |-
      authservice:
        enabled: false
      monitoring:
        enabled: true
      networkPolicies:
        controlPlaneCIDRs:
        - 0.0.0.0/0
        egress:
          definitions:
            sso:
              to:
              - ipBlock:
                  cidr: 0.0.0.0/0
          from:
            istiod:
              to:
                definition:
                  sso: false
        enabled: true
        ingress:
          to:
            istiod:15014:
              from:
                k8s:
                  kiali/kiali: true
                  monitoring/prometheus: true
      upstream:
        authservice:
          enabled: false
        global:
          imagePullPolicy: IfNotPresent
          imagePullSecrets:
          - private-registry
        meshConfig:
          accessLogFormat: |
            [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %CONNECTION_TERMINATION_DETAILS% "%UPSTREAM_TRANSPORT_FAILURE_REASON%" %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%" %UPSTREAM_CLUSTER% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME% traceID=%REQ(x-b3-traceid)%
          defaultConfig:
            tracing:
              sampling: 10
              zipkin:
                address: tempo-tempo.tempo.svc:9411
          enableTracing: true
        monitoring:
          enabled: true
        networkPolicies:
          controlPlaneCIDRs:
          - 0.0.0.0/0
          egress:
            definitions:
              sso:
                to:
                - ipBlock:
                    cidr: 0.0.0.0/0
            from:
              istiod:
                to:
                  definition:
                    sso: false
          enabled: true
          ingress:
            to:
              istiod:15014:
                from:
                  k8s:
                    kiali/kiali: true
                    monitoring/prometheus: true
        upstream:
          global:
            imagePullPolicy: IfNotPresent
            imagePullSecrets:
            - private-registry
          meshConfig:
            accessLogFormat: |
              [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %CONNECTION_TERMINATION_DETAILS% "%UPSTREAM_TRANSPORT_FAILURE_REASON%" %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%" %UPSTREAM_CLUSTER% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME% traceID=%REQ(x-b3-traceid)%
            defaultConfig:
              tracing:
                sampling: 10
                zipkin:
                  address: tempo-tempo.tempo.svc:9411
            enableTracing: true
  overlays: |
    {}
---
# Source: bigbang/templates/kiali/grafana-auth-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: grafana-auth
  namespace: kiali
  labels:
    app.kubernetes.io/name: kiali
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
type: kubernetes.io/opaque
stringData:
  password: prom-operator
---
# Source: bigbang/templates/kiali/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-kiali-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    |-
      domain: dev.bigbang.mil
      istio:
        enabled: true
        hardened:
          enabled: false
        kiali:
          gateways:
          - istio-gateway/public-ingressgateway
      monitoring:
        enabled: true
      networkPolicies:
        egress:
          definitions:
            kubeAPI:
              to:
              - ipBlock:
                  cidr: 0.0.0.0/0
            sso:
              to:
              - ipBlock:
                  cidr: 0.0.0.0/0
          from:
            kiali:
              to:
                definition:
                  sso: true
                k8s:
                  istio-system/istiod:15014: true
                  monitoring/grafana:3000: true
                  monitoring/prometheus:9090: true
                  tempo/tempo:3100: true
        enabled: true
      openshift: false
      sso:
        enabled: true
      tracing:
        enabled: true
      upstream:
        cr:
          spec:
            auth:
              openid:
                client_id: platform1_a8604cc9-f5e9-4656-802d-d05624370245_bb8-kiali
                disable_rbac: true
                issuer_uri: https://login.dso.mil/auth/realms/baby-yoda
                scopes:
                - openid
                - email
                username_claim: email
              strategy: openid
            deployment:
              hpa:
                spec:
                  maxReplicas: 2
                  minReplicas: 1
                  targetCPUUtilizationPercentage: 80
              image_pull_policy: IfNotPresent
              pod_annotations:
                bigbang.dev/istioVersion: 1.26.3
            external_services:
              grafana:
                auth:
                  password: secret:grafana-auth:password
                  username: admin
                enabled: true
                url: https://grafana.dev.bigbang.mil
              istio:
                component_status:
                  components:
                  - app_label: istiod
                    is_core: true
                    is_proxy: false
                  - app_label: passthrough-ingressgateway
                    is_core: true
                    is_proxy: true
                    namespace: istio-gateway
                  - app_label: public-ingressgateway
                    is_core: true
                    is_proxy: true
                    namespace: istio-gateway
                egress_gateway_namespace: istio-gateway
                ingress_gateway_namespace: istio-gateway
              tracing:
                enabled: true
                internal_url: http://tempo-tempo.tempo.svc.cluster.local:3100
                provider: tempo
            istio_namespace: istio-system
            server:
              web_port: "443"
        domain: dev.bigbang.mil
        image:
          pullPolicy: IfNotPresent
        istio:
          enabled: true
          hardened:
            enabled: false
          kiali:
            gateways:
            - istio-gateway/public-ingressgateway
        monitoring:
          enabled: true
        networkPolicies:
          egress:
            definitions:
              kubeAPI:
                to:
                - ipBlock:
                    cidr: 0.0.0.0/0
              sso:
                to:
                - ipBlock:
                    cidr: 0.0.0.0/0
            from:
              kiali:
                to:
                  definition:
                    sso: true
                  k8s:
                    istio-system/istiod:15014: true
                    monitoring/grafana:3000: true
                    monitoring/prometheus:9090: true
                    tempo/tempo:3100: true
          enabled: true
        openshift: false
        podAnnotations:
          bigbang.dev/istioVersion: 1.26.3
        sso:
          enabled: true
        tracing:
          enabled: true
        upstream:
          cr:
            spec:
              auth:
                openid:
                  client_id: platform1_a8604cc9-f5e9-4656-802d-d05624370245_bb8-kiali
                  disable_rbac: true
                  issuer_uri: https://login.dso.mil/auth/realms/baby-yoda
                  scopes:
                  - openid
                  - email
                  username_claim: email
                strategy: openid
              deployment:
                hpa:
                  spec:
                    maxReplicas: 2
                    minReplicas: 1
                    targetCPUUtilizationPercentage: 80
                image_pull_policy: IfNotPresent
                pod_annotations:
                  bigbang.dev/istioVersion: 1.26.3
              external_services:
                grafana:
                  auth:
                    password: secret:grafana-auth:password
                    username: admin
                  enabled: true
                  url: https://grafana.dev.bigbang.mil
                istio:
                  component_status:
                    components:
                    - app_label: istiod
                      is_core: true
                      is_proxy: false
                    - app_label: passthrough-ingressgateway
                      is_core: true
                      is_proxy: true
                      namespace: istio-gateway
                    - app_label: public-ingressgateway
                      is_core: true
                      is_proxy: true
                      namespace: istio-gateway
                  egress_gateway_namespace: istio-gateway
                  ingress_gateway_namespace: istio-gateway
                tracing:
                  enabled: true
                  internal_url: http://tempo-tempo.tempo.svc.cluster.local:3100
                  provider: tempo
              istio_namespace: istio-system
              server:
                web_port: "443"
          image:
            pullPolicy: IfNotPresent
          podAnnotations:
            bigbang.dev/istioVersion: 1.26.3
  overlays: |
    {}
---
# Source: bigbang/templates/kyverno-policies/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-kyverno-policies-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    |-
      istio:
        enabled: true
      policies:
        add-default-capability-drop:
          enabled: true
          exclude:
            any: null
        add-default-securitycontext:
          enabled: true
          exclude:
            any:
            - resources:
                namespaces:
                - kube-system
            - resources:
                names:
                - alloy-alloy-logs*
                namespaces:
                - alloy
          parameters:
            excludeContainers:
            - istio-init
        disallow-auto-mount-service-account-token:
          enabled: true
          exclude:
            any:
            - resources:
                kinds:
                - Pod
                - Deployment
                names:
                - kyverno-reporter*
                namespaces:
                - kyverno-reporter
            - resources:
                kinds:
                - Pod
                - Deployment
                - StatefulSet
                names:
                - notification-controller*
                - helm-controller*
                - source-controller*
                - kustomize-controller*
                namespaces:
                - flux-system
          validationFailureAction: Audit
        disallow-image-tags:
          enabled: true
          exclude:
            any:
            - resources:
                names:
                - '*-ingressgateway'
                - '*-egressgateway'
                namespaces:
                - istio-gateway
          validationFailureAction: Enforce
        disallow-istio-injection-bypass:
          enabled: true
          exclude:
            any:
            - resources:
                namespaces:
                - istio-system
                - istio-gateway
        disallow-namespaces:
          enabled: true
          parameters:
            disallow:
            - bigbang
            - default
          validationFailureAction: Enforce
        disallow-nodeport-services:
          exclude:
            any:
            - resources:
                kinds:
                - Service
                names: null
                namespaces:
                - istio-system
            - resources:
                kinds:
                - Service
                names:
                - passthrough-ingressgateway
                - public-ingressgateway
                namespaces:
                - istio-gateway
          validationFailureAction: Enforce
        disallow-tolerations:
          exclude:
            any:
            - resources:
                names:
                - monitoring-monitoring-prometheus-node-exporter*
                namespaces:
                - monitoring
        require-drop-all-capabilities:
          exclude:
            any: null
          validationFailureAction: Enforce
        require-image-signature:
          enabled: false
          validationFailureAction: Audit
        require-istio-on-namespaces:
          enabled: true
          exclude:
            any:
            - resources:
                namespaces:
                - kube-node-lease
                - kube-public
                - kube-system
                - bigbang
                - default
                - flux-system
                - istio-system
                - istio-gateway
        require-labels:
          enabled: true
          parameters:
            require:
            - app.kubernetes.io/name
            - app.kubernetes.io/version
          validationFailureAction: Audit
        require-non-root-group:
          exclude:
            any:
            - resources:
                namespaces:
                - kube-system
            - resources:
                names:
                - istiod*
                namespaces:
                - istio-system
            - resources:
                names:
                - alloy-alloy-logs*
                namespaces:
                - alloy
          parameters:
            excludeContainers:
            - istio-init
          validationFailureAction: Enforce
        require-non-root-user:
          exclude:
            any:
            - resources:
                namespaces:
                - kube-system
            - resources:
                names:
                - kiali-*
                namespaces:
                - kiali
            - resources:
                names:
                - alloy-alloy-logs*
                namespaces:
                - alloy
          parameters:
            excludeContainers:
            - istio-init
          validationFailureAction: Enforce
        restrict-capabilities:
          exclude:
            any:
            - resources:
                names:
                - alloy-alloy-metrics*
                - alloy-alloy-receiver*
                - alloy-alloy-logs*
                - alloy-alloy-singleton*
                namespaces:
                - alloy
          parameters:
            allow:
            - NET_BIND_SERVICE
            - NET_ADMIN
            - NET_RAW
          validationFailureAction: Enforce
        restrict-host-path-mount:
          exclude:
            any:
            - resources:
                names:
                - monitoring-monitoring-prometheus-node-exporter*
                namespaces:
                - monitoring
            - resources:
                names:
                - alloy-alloy-logs*
                namespaces:
                - alloy
          validationFailureAction: Enforce
        restrict-host-path-mount-pv:
          validationFailureAction: Enforce
        restrict-host-path-write:
          validationFailureAction: Enforce
        restrict-image-registries:
          exclude:
            any:
            - resources:
                names:
                - '*-ingressgateway'
                - '*-egressgateway'
                namespaces:
                - istio-gateway
          parameters:
            allow:
            - registry1.dso.mil
            - registry.dso.mil
          validationFailureAction: Enforce
        restrict-selinux-type:
          exclude:
            any:
            - resources:
                names:
                - alloy-alloy-logs-*
                namespaces:
                - alloy
        restrict-volume-types:
          exclude:
            any:
            - resources:
                names:
                - monitoring-monitoring-prometheus-node-exporter*
                namespaces:
                - monitoring
            - resources:
                names:
                - alloy-alloy-logs*
                namespaces:
                - alloy
        update-automountserviceaccounttokens:
          enabled: true
          namespaces:
          - namespace: istio-system
            pods:
              allow:
              - istiod-*
              - passthrough-ingressgateway-*
              - public-ingressgateway-*
          - namespace: twistlock
            pods:
              allow:
              - twistlock-init-*
              - twistlock-volume-upgrade-job
              - twistlock-defender-ds-*
              - bb-twistlock-twistlock-upgrade-job-*
          - namespace: logging
            pods:
              allow:
              - logging-loki-minio-*
              deny:
              - logging-ek-es-data*
              - logging-ek-es-master*
              - logging-ek-kb*
              - logging-ek-metrics*
          - namespace: minio-operator
            pods:
              allow:
              - console-*
              - minio-operator-*
              - bb-minio-operator-minio-operator-tenant-patch
          - namespace: minio
            pods:
              allow:
              - minio-minio-minio-instance-*
              - minio-instance-wait-job-*
          - namespace: kyverno
            pods:
              allow:
              - kyverno-reports-controller-*
              - kyverno-admission-controller-*
              - kyverno-cleanup-controller-*
              - kyverno-cleanup-admission-reports-*
              - kyverno-admission-controller-*
              - kyverno-background-controller-*
              - kyverno-admission-controller-*
              - kyverno-cleanup-cluster-admission-reports-*
              - kyverno-cleanup-cluster-ephemeral-reports-*
              - kyverno-cleanup-update-requests-*
              - kyverno-clean-reports-*
          - namespace: velero
            pods:
              allow:
              - velero-cleanup-crds-*
              - velero-velero-*
              - node-agent-*
              - velero-label-namespace-*
              - velero-script-test
              - velero-backup-restore-test
          - namespace: neuvector
            pods:
              allow:
              - neuvector-manager-pod-*
              - neuvector-scanner-pod-*
              - neuvector-cert-upgrader-job-*
              - neuvector-controller-pod-*
              - neuvector-enforcer-pod-*
              - neuvector-updater-pod-*
              - neuvector-prometheus-exporter-pod-*
              - neuvector-registry-adapter-pod-*
          - namespace: kiali
            pods:
              allow:
              - kiali-*
          - namespace: argocd
            pods:
              allow:
              - argocd-argocd-application-controller-*
              - argocd-argocd-dex-server-*
              - argocd-upgrade-job-*
              - argocd-argocd-server-*
              - argocd-argocd-repo-server-*
              - argocd-argocd-applicationset-controller-*
              - argocd-argocd-notifications-controller-*
          - namespace: harbor
          - namespace: authservice
            pods:
              allow:
              - authservice-authservice-redis-bb-*
              - authservice-haproxy-sso-*
          - namespace: monitoring
            pods:
              allow:
              - monitoring-grafana*
              - monitoring-admission-patch*
              - monitoring-admission-create*
              - monitoring-monitoring-kube-state-metrics*
              - monitoring-operator*
              - prometheus-monitoring-prometheus*
          - namespace: alloy
            pods:
              allow:
              - alloy-*
          - namespace: mimir
            pods:
              allow:
              - mimir-mimir-rollout-operator-*
              - mimir-mimir-minio*
          - namespace: anchore
            pods:
              allow:
              - anchore-ui-redis-*
          - namespace: fortify
          - namespace: vault
            pods:
              allow:
              - vault-vault-*
              - vault-vault-agent-injector-*
              - vault-vault-job-init-*
          - namespace: fluentbit
            pods:
              allow:
              - fluentbit-fluent-bit-*
          - namespace: eck-operator
            pods:
              allow:
              - elastic-operator-*
          - namespace: nexus-repository-manager
            pods:
              allow:
              - nexus-repository-manager-*
          - namespace: thanos
            pods:
              allow:
              - thanos-minio-*
              deny:
              - thanos-query-frontend-*
              - thanos-storegateway*
              - thanos-query*
          - namespace: mattermost
            pods:
              allow:
              - default-minio-bucket-creation-*
              - mattermost-minio-*
              - mattermost-wait-job-*
          - namespace: mattermost-operator
            pods:
              allow:
              - mattermost-operator-*
          - namespace: keycloak
            pods:
              allow:
              - keycloak-*
          - namespace: gitlab
            pods:
              allow:
              - gitlab-shared-secrets*
              - gitlab-script-test
          - namespace: gitlab-runner
            pods:
              allow:
              - gitlab-runner-*
          - namespace: headlamp
            pods:
              allow:
              - headlamp-*
        update-automountserviceaccounttokens-default:
          enabled: true
          namespaces:
          - istio-system
          - twistlock
          - argocd
          - logging
          - velero
          - minio
          - minio-operator
          - kyverno-reporter
          - kyverno
          - velero
          - neuvector
          - kiali
          - harbor
          - authservice
          - anchore
          - fortify
          - vault
          - fluentbit
          - eck-operator
          - nexus-repository-manager
          - thanos
          - mattermost
          - mattermost-operator
          - bigbang
          - flux-system
          - keycloak
          - monitoring
          - gitlab
          - gitlab-runner
          - headlamp
      upstream:
        istio:
          enabled: true
        policies:
          add-default-capability-drop:
            enabled: true
            exclude:
              any: null
          add-default-securitycontext:
            enabled: true
            exclude:
              any:
              - resources:
                  namespaces:
                  - kube-system
              - resources:
                  names:
                  - alloy-alloy-logs*
                  namespaces:
                  - alloy
            parameters:
              excludeContainers:
              - istio-init
          disallow-auto-mount-service-account-token:
            enabled: true
            exclude:
              any:
              - resources:
                  kinds:
                  - Pod
                  - Deployment
                  names:
                  - kyverno-reporter*
                  namespaces:
                  - kyverno-reporter
              - resources:
                  kinds:
                  - Pod
                  - Deployment
                  - StatefulSet
                  names:
                  - notification-controller*
                  - helm-controller*
                  - source-controller*
                  - kustomize-controller*
                  namespaces:
                  - flux-system
            validationFailureAction: Audit
          disallow-image-tags:
            enabled: true
            exclude:
              any:
              - resources:
                  names:
                  - '*-ingressgateway'
                  - '*-egressgateway'
                  namespaces:
                  - istio-gateway
            validationFailureAction: Enforce
          disallow-istio-injection-bypass:
            enabled: true
            exclude:
              any:
              - resources:
                  namespaces:
                  - istio-system
                  - istio-gateway
          disallow-namespaces:
            enabled: true
            parameters:
              disallow:
              - bigbang
              - default
            validationFailureAction: Enforce
          disallow-nodeport-services:
            exclude:
              any:
              - resources:
                  kinds:
                  - Service
                  names: null
                  namespaces:
                  - istio-system
              - resources:
                  kinds:
                  - Service
                  names:
                  - passthrough-ingressgateway
                  - public-ingressgateway
                  namespaces:
                  - istio-gateway
            validationFailureAction: Enforce
          disallow-tolerations:
            exclude:
              any:
              - resources:
                  names:
                  - monitoring-monitoring-prometheus-node-exporter*
                  namespaces:
                  - monitoring
          require-drop-all-capabilities:
            exclude:
              any: null
            validationFailureAction: Enforce
          require-image-signature:
            enabled: false
            validationFailureAction: Audit
          require-istio-on-namespaces:
            enabled: true
            exclude:
              any:
              - resources:
                  namespaces:
                  - kube-node-lease
                  - kube-public
                  - kube-system
                  - bigbang
                  - default
                  - flux-system
                  - istio-system
                  - istio-gateway
          require-labels:
            enabled: true
            parameters:
              require:
              - app.kubernetes.io/name
              - app.kubernetes.io/version
            validationFailureAction: Audit
          require-non-root-group:
            exclude:
              any:
              - resources:
                  namespaces:
                  - kube-system
              - resources:
                  names:
                  - istiod*
                  namespaces:
                  - istio-system
              - resources:
                  names:
                  - alloy-alloy-logs*
                  namespaces:
                  - alloy
            parameters:
              excludeContainers:
              - istio-init
            validationFailureAction: Enforce
          require-non-root-user:
            exclude:
              any:
              - resources:
                  namespaces:
                  - kube-system
              - resources:
                  names:
                  - kiali-*
                  namespaces:
                  - kiali
              - resources:
                  names:
                  - alloy-alloy-logs*
                  namespaces:
                  - alloy
            parameters:
              excludeContainers:
              - istio-init
            validationFailureAction: Enforce
          restrict-capabilities:
            exclude:
              any:
              - resources:
                  names:
                  - alloy-alloy-metrics*
                  - alloy-alloy-receiver*
                  - alloy-alloy-logs*
                  - alloy-alloy-singleton*
                  namespaces:
                  - alloy
            parameters:
              allow:
              - NET_BIND_SERVICE
              - NET_ADMIN
              - NET_RAW
            validationFailureAction: Enforce
          restrict-host-path-mount:
            exclude:
              any:
              - resources:
                  names:
                  - monitoring-monitoring-prometheus-node-exporter*
                  namespaces:
                  - monitoring
              - resources:
                  names:
                  - alloy-alloy-logs*
                  namespaces:
                  - alloy
            validationFailureAction: Enforce
          restrict-host-path-mount-pv:
            validationFailureAction: Enforce
          restrict-host-path-write:
            validationFailureAction: Enforce
          restrict-image-registries:
            exclude:
              any:
              - resources:
                  names:
                  - '*-ingressgateway'
                  - '*-egressgateway'
                  namespaces:
                  - istio-gateway
            parameters:
              allow:
              - registry1.dso.mil
              - registry.dso.mil
            validationFailureAction: Enforce
          restrict-selinux-type:
            exclude:
              any:
              - resources:
                  names:
                  - alloy-alloy-logs-*
                  namespaces:
                  - alloy
          restrict-volume-types:
            exclude:
              any:
              - resources:
                  names:
                  - monitoring-monitoring-prometheus-node-exporter*
                  namespaces:
                  - monitoring
              - resources:
                  names:
                  - alloy-alloy-logs*
                  namespaces:
                  - alloy
          update-automountserviceaccounttokens:
            enabled: true
            namespaces:
            - namespace: istio-system
              pods:
                allow:
                - istiod-*
                - passthrough-ingressgateway-*
                - public-ingressgateway-*
            - namespace: twistlock
              pods:
                allow:
                - twistlock-init-*
                - twistlock-volume-upgrade-job
                - twistlock-defender-ds-*
                - bb-twistlock-twistlock-upgrade-job-*
            - namespace: logging
              pods:
                allow:
                - logging-loki-minio-*
                deny:
                - logging-ek-es-data*
                - logging-ek-es-master*
                - logging-ek-kb*
                - logging-ek-metrics*
            - namespace: minio-operator
              pods:
                allow:
                - console-*
                - minio-operator-*
                - bb-minio-operator-minio-operator-tenant-patch
            - namespace: minio
              pods:
                allow:
                - minio-minio-minio-instance-*
                - minio-instance-wait-job-*
            - namespace: kyverno
              pods:
                allow:
                - kyverno-reports-controller-*
                - kyverno-admission-controller-*
                - kyverno-cleanup-controller-*
                - kyverno-cleanup-admission-reports-*
                - kyverno-admission-controller-*
                - kyverno-background-controller-*
                - kyverno-admission-controller-*
                - kyverno-cleanup-cluster-admission-reports-*
                - kyverno-cleanup-cluster-ephemeral-reports-*
                - kyverno-cleanup-update-requests-*
                - kyverno-clean-reports-*
            - namespace: velero
              pods:
                allow:
                - velero-cleanup-crds-*
                - velero-velero-*
                - node-agent-*
                - velero-label-namespace-*
                - velero-script-test
                - velero-backup-restore-test
            - namespace: neuvector
              pods:
                allow:
                - neuvector-manager-pod-*
                - neuvector-scanner-pod-*
                - neuvector-cert-upgrader-job-*
                - neuvector-controller-pod-*
                - neuvector-enforcer-pod-*
                - neuvector-updater-pod-*
                - neuvector-prometheus-exporter-pod-*
                - neuvector-registry-adapter-pod-*
            - namespace: kiali
              pods:
                allow:
                - kiali-*
            - namespace: argocd
              pods:
                allow:
                - argocd-argocd-application-controller-*
                - argocd-argocd-dex-server-*
                - argocd-upgrade-job-*
                - argocd-argocd-server-*
                - argocd-argocd-repo-server-*
                - argocd-argocd-applicationset-controller-*
                - argocd-argocd-notifications-controller-*
            - namespace: harbor
            - namespace: authservice
              pods:
                allow:
                - authservice-authservice-redis-bb-*
                - authservice-haproxy-sso-*
            - namespace: monitoring
              pods:
                allow:
                - monitoring-grafana*
                - monitoring-admission-patch*
                - monitoring-admission-create*
                - monitoring-monitoring-kube-state-metrics*
                - monitoring-operator*
                - prometheus-monitoring-prometheus*
            - namespace: alloy
              pods:
                allow:
                - alloy-*
            - namespace: mimir
              pods:
                allow:
                - mimir-mimir-rollout-operator-*
                - mimir-mimir-minio*
            - namespace: anchore
              pods:
                allow:
                - anchore-ui-redis-*
            - namespace: fortify
            - namespace: vault
              pods:
                allow:
                - vault-vault-*
                - vault-vault-agent-injector-*
                - vault-vault-job-init-*
            - namespace: fluentbit
              pods:
                allow:
                - fluentbit-fluent-bit-*
            - namespace: eck-operator
              pods:
                allow:
                - elastic-operator-*
            - namespace: nexus-repository-manager
              pods:
                allow:
                - nexus-repository-manager-*
            - namespace: thanos
              pods:
                allow:
                - thanos-minio-*
                deny:
                - thanos-query-frontend-*
                - thanos-storegateway*
                - thanos-query*
            - namespace: mattermost
              pods:
                allow:
                - default-minio-bucket-creation-*
                - mattermost-minio-*
                - mattermost-wait-job-*
            - namespace: mattermost-operator
              pods:
                allow:
                - mattermost-operator-*
            - namespace: keycloak
              pods:
                allow:
                - keycloak-*
            - namespace: gitlab
              pods:
                allow:
                - gitlab-shared-secrets*
                - gitlab-script-test
            - namespace: gitlab-runner
              pods:
                allow:
                - gitlab-runner-*
            - namespace: headlamp
              pods:
                allow:
                - headlamp-*
          update-automountserviceaccounttokens-default:
            enabled: true
            namespaces:
            - istio-system
            - twistlock
            - argocd
            - logging
            - velero
            - minio
            - minio-operator
            - kyverno-reporter
            - kyverno
            - velero
            - neuvector
            - kiali
            - harbor
            - authservice
            - anchore
            - fortify
            - vault
            - fluentbit
            - eck-operator
            - nexus-repository-manager
            - thanos
            - mattermost
            - mattermost-operator
            - bigbang
            - flux-system
            - keycloak
            - monitoring
            - gitlab
            - gitlab-runner
            - headlamp
        waitforready:
          imagePullSecrets:
          - name: private-registry
      waitforready:
        imagePullSecrets:
        - name: private-registry
  overlays: |
    {}
---
# Source: bigbang/templates/kyverno-reporter/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-kyverno-reporter-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    |-
      domain: dev.bigbang.mil
      global:
        fullnameOverride: kyverno-reporter
      istio:
        enabled: true
        kyvernoReporter:
          gateways:
          - istio-gateway/public-ingressgateway
      networkPolicies:
        controlPlaneCidr: 0.0.0.0/0
        enabled: true
        istioNamespaceSelector:
          egress: istio-system
          ingress: istio-gateway
      openshift: false
      podAnnotations:
        bigbang.dev/istioVersion: 1.26.3
      upstream:
        domain: dev.bigbang.mil
        global:
          fullnameOverride: kyverno-reporter
        image:
          pullPolicy: IfNotPresent
        imagePullSecrets:
        - name: private-registry
        istio:
          enabled: true
          kyvernoReporter:
            gateways:
            - istio-gateway/public-ingressgateway
        monitoring:
          enabled: true
          grafana:
            dashboards:
              enabled: true
              namespace: monitoring
        networkPolicies:
          controlPlaneCidr: 0.0.0.0/0
          enabled: true
          istioNamespaceSelector:
            egress: istio-system
            ingress: istio-gateway
        openshift: false
        plugin:
          kyverno:
            enabled: true
            image:
              pullPolicy: IfNotPresent
            imagePullSecrets:
            - name: private-registry
            podAnnotations:
              bigbang.dev/istioVersion: 1.26.3
        podAnnotations:
          bigbang.dev/istioVersion: 1.26.3
        ui:
          enabled: true
          image:
            pullPolicy: IfNotPresent
          imagePullSecrets:
          - name: private-registry
          podAnnotations:
            bigbang.dev/istioVersion: 1.26.3
        upstream:
          image:
            pullPolicy: IfNotPresent
          imagePullSecrets:
          - name: private-registry
          monitoring:
            enabled: true
            grafana:
              dashboards:
                enabled: true
                namespace: monitoring
          plugin:
            kyverno:
              enabled: true
              image:
                pullPolicy: IfNotPresent
              imagePullSecrets:
              - name: private-registry
              podAnnotations:
                bigbang.dev/istioVersion: 1.26.3
          ui:
            enabled: true
            image:
              pullPolicy: IfNotPresent
            imagePullSecrets:
            - name: private-registry
            podAnnotations:
              bigbang.dev/istioVersion: 1.26.3
  overlays: |
    {}
---
# Source: bigbang/templates/kyverno/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-kyverno-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    |-
      istio:
        enabled: true
      networkPolicies:
        controlPlaneCidr: 0.0.0.0/0
        enabled: true
      openshift: false
      upstream:
        admissionController:
          serviceMonitor:
            enabled: true
        backgroundController:
          serviceMonitor:
            enabled: true
        cleanupController:
          serviceMonitor:
            enabled: true
        fullnameOverride: kyverno-kyverno
        grafana:
          enabled: true
          namespace: monitoring
        image:
          pullPolicy: IfNotPresent
          pullSecrets:
          - name: private-registry
        istio:
          enabled: true
        networkPolicies:
          controlPlaneCidr: 0.0.0.0/0
          enabled: true
        openshift: false
        replicaCount: 3
        reportsController:
          serviceMonitor:
            enabled: true
        upstream:
          admissionController:
            serviceMonitor:
              enabled: true
          backgroundController:
            serviceMonitor:
              enabled: true
          cleanupController:
            serviceMonitor:
              enabled: true
          fullnameOverride: kyverno-kyverno
          grafana:
            enabled: true
            namespace: monitoring
          image:
            pullPolicy: IfNotPresent
            pullSecrets:
            - name: private-registry
          replicaCount: 3
          reportsController:
            serviceMonitor:
              enabled: true
  overlays: |
    {}
---
# Source: bigbang/templates/loki/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-loki-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    |-
      clusterName: ""
      deploymentMode: SingleBinary
      domain: dev.bigbang.mil
      hostname: dev.bigbang.mil
      image:
        pullPolicy: IfNotPresent
      imagePullSecrets:
      - name: private-registry
      istio:
        enabled: true
        loki:
          enabled: true
          gateways:
          - istio-gateway/public-ingressgateway
      loki:
        extraMemberlistConfig:
          bind_addr:
          - ${MY_POD_IP}
        limits_config:
          max_line_size: 0
        podAnnotations:
          bigbang.dev/istioVersion: 1.26.3
        rulerConfig:
          storage:
            type: local
        storage:
          type: filesystem
        storage_config:
          boltdb_shipper:
            active_index_directory: /var/loki/boltdb-shipper-active
            cache_location: /var/loki/boltdb-shipper-cache
            cache_ttl: 24h
          filesystem:
            directory: /var/loki/chunks
      monitoring:
        enabled: true
        rules:
          alerting: true
          enabled: true
        serviceMonitor:
          enabled: true
          scheme: https
          tlsConfig:
            caFile: /etc/prom-certs/root-cert.pem
            certFile: /etc/prom-certs/cert-chain.pem
            insecureSkipVerify: true
            keyFile: /etc/prom-certs/key.pem
      networkPolicies:
        controlPlaneCidr: 0.0.0.0/0
        enabled: true
        istioNamespaceSelector:
          egress: istio-system
          ingress: istio-gateway
      openshift: false
      singleBinary:
        extraArgs:
        - -config.expand-env=true
        extraEnv:
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        replicas: 1
      upstream:
        clusterName: ""
        deploymentMode: SingleBinary
        domain: dev.bigbang.mil
        hostname: dev.bigbang.mil
        image:
          pullPolicy: IfNotPresent
        imagePullSecrets:
        - name: private-registry
        istio:
          enabled: true
          loki:
            enabled: true
            gateways:
            - istio-gateway/public-ingressgateway
        loki:
          extraMemberlistConfig:
            bind_addr:
            - ${MY_POD_IP}
          limits_config:
            max_line_size: 0
          podAnnotations:
            bigbang.dev/istioVersion: 1.26.3
          rulerConfig:
            storage:
              type: local
          storage:
            type: filesystem
          storage_config:
            boltdb_shipper:
              active_index_directory: /var/loki/boltdb-shipper-active
              cache_location: /var/loki/boltdb-shipper-cache
              cache_ttl: 24h
            filesystem:
              directory: /var/loki/chunks
        monitoring:
          enabled: true
          rules:
            alerting: true
            enabled: true
          serviceMonitor:
            enabled: true
            scheme: https
            tlsConfig:
              caFile: /etc/prom-certs/root-cert.pem
              certFile: /etc/prom-certs/cert-chain.pem
              insecureSkipVerify: true
              keyFile: /etc/prom-certs/key.pem
        networkPolicies:
          controlPlaneCidr: 0.0.0.0/0
          enabled: true
          istioNamespaceSelector:
            egress: istio-system
            ingress: istio-gateway
        openshift: false
        singleBinary:
          extraArgs:
          - -config.expand-env=true
          extraEnv:
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          replicas: 1
  overlays: |
    {}
---
# Source: bigbang/templates/metrics-server/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-metrics-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    |-
      istio:
        enabled: true
        hardened:
          enabled: false
        injection: enabled
      networkPolicies:
        controlPlaneCidr: 0.0.0.0/0
        enabled: true
        istioNamespaceSelector:
          egress: istio-system
          ingress: istio-gateway
      upstream:
        domain: dev.bigbang.mil
        fullnameOverride: metrics-server
        istio:
          enabled: true
          hardened:
            enabled: false
          injection: enabled
        metrics:
          enabled: true
        nameOverride: metrics-server
        networkPolicies:
          controlPlaneCidr: 0.0.0.0/0
          enabled: true
          istioNamespaceSelector:
            egress: istio-system
            ingress: istio-gateway
        podAnnotations:
          bigbang.dev/istioVersion: 1.26.3
        serviceMonitor:
          dashboards:
            namespace: monitoring
          enabled: true
        upstream:
          domain: dev.bigbang.mil
          fullnameOverride: metrics-server
          metrics:
            enabled: true
          nameOverride: metrics-server
          podAnnotations:
            bigbang.dev/istioVersion: 1.26.3
          serviceMonitor:
            dashboards:
              namespace: monitoring
            enabled: true
  overlays: |
    {}
---
# Source: bigbang/templates/monitoring/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-monitoring-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    |-
      anchoreEnterprise:
        enabled: false
      domain: dev.bigbang.mil
      flux:
        enabled: true
      gitlabRunner:
        enabled: false
      global:
        imagePullSecrets:
        - name: private-registry
      hostname: dev.bigbang.mil
      istio:
        alertmanager:
          enabled: true
          gateways:
          - istio-gateway/public-ingressgateway
        clusterWideHardenedEnabled: false
        enabled: true
        hardened:
          alloy:
            enabled: false
          enabled: false
          loki:
            enabled: false
        injection: enabled
        prometheus:
          enabled: true
          gateways:
          - istio-gateway/public-ingressgateway
      kiali:
        enabled: true
      loki:
        enabled: true
      minioOperator:
        enabled: false
      networkPolicies:
        controlPlaneCidr: 0.0.0.0/0
        enabled: true
        ingressLabels:
          app: public-ingressgateway
          istio: ingressgateway
        istioNamespaceSelector:
          egress: istio-system
          ingress: istio-gateway
      openshift: false
      sso:
        enabled: true
      tempo:
        enabled: true
      upstream:
        alertmanager:
          alertmanagerSpec:
            containers:
            - imagePullPolicy: IfNotPresent
              name: alertmanager
            - imagePullPolicy: IfNotPresent
              name: config-reloader
            podMetadata:
              annotations:
                bigbang.dev/istioVersion: 1.26.3
              labels:
                protect: keycloak
          serviceMonitor:
            scheme: https
            tlsConfig:
              caFile: /etc/prom-certs/root-cert.pem
              certFile: /etc/prom-certs/cert-chain.pem
              insecureSkipVerify: true
              keyFile: /etc/prom-certs/key.pem
        anchoreEnterprise:
          enabled: false
        defaultRules:
          additionalRuleLabels:
            cluster: logging-loki
        domain: dev.bigbang.mil
        flux:
          enabled: true
        gitlabRunner:
          enabled: false
        global:
          imagePullSecrets:
          - name: private-registry
        hostname: dev.bigbang.mil
        istio:
          alertmanager:
            enabled: true
            gateways:
            - istio-gateway/public-ingressgateway
          clusterWideHardenedEnabled: false
          enabled: true
          hardened:
            alloy:
              enabled: false
            enabled: false
            loki:
              enabled: false
          injection: enabled
          prometheus:
            enabled: true
            gateways:
            - istio-gateway/public-ingressgateway
        kiali:
          enabled: true
        kube-state-metrics:
          customResourceState:
            config:
              spec:
                resources:
                - groupVersionKind:
                    group: kustomize.toolkit.fluxcd.io
                    kind: Kustomization
                    version: v1
                  metricNamePrefix: gotk
                  metrics:
                  - each:
                      info:
                        labelsFromPath:
                          name:
                          - metadata
                          - name
                      type: Info
                    help: The current state of a Flux Kustomization resource.
                    labelsFromPath:
                      exported_namespace:
                      - metadata
                      - namespace
                      ready:
                      - status
                      - conditions
                      - '[type=Ready]'
                      - status
                      revision:
                      - status
                      - lastAppliedRevision
                      source_name:
                      - spec
                      - sourceRef
                      - name
                      suspended:
                      - spec
                      - suspend
                    name: resource_info
                - groupVersionKind:
                    group: helm.toolkit.fluxcd.io
                    kind: HelmRelease
                    version: v2
                  metricNamePrefix: gotk
                  metrics:
                  - each:
                      info:
                        labelsFromPath:
                          name:
                          - metadata
                          - name
                      type: Info
                    help: The current state of a Flux HelmRelease resource.
                    labelsFromPath:
                      chart_app_version:
                      - status
                      - history
                      - "0"
                      - appVersion
                      chart_name:
                      - status
                      - history
                      - "0"
                      - chartName
                      chart_ref_name:
                      - spec
                      - chartRef
                      - name
                      chart_source_name:
                      - spec
                      - chart
                      - spec
                      - sourceRef
                      - name
                      exported_namespace:
                      - metadata
                      - namespace
                      ready:
                      - status
                      - conditions
                      - '[type=Ready]'
                      - status
                      revision:
                      - status
                      - history
                      - "0"
                      - chartVersion
                      suspended:
                      - spec
                      - suspend
                    name: resource_info
                - groupVersionKind:
                    group: source.toolkit.fluxcd.io
                    kind: GitRepository
                    version: v1
                  metricNamePrefix: gotk
                  metrics:
                  - each:
                      info:
                        labelsFromPath:
                          name:
                          - metadata
                          - name
                      type: Info
                    help: The current state of a Flux GitRepository resource.
                    labelsFromPath:
                      exported_namespace:
                      - metadata
                      - namespace
                      ready:
                      - status
                      - conditions
                      - '[type=Ready]'
                      - status
                      revision:
                      - status
                      - artifact
                      - revision
                      suspended:
                      - spec
                      - suspend
                      url:
                      - spec
                      - url
                    name: resource_info
                - groupVersionKind:
                    group: source.toolkit.fluxcd.io
                    kind: Bucket
                    version: v1
                  metricNamePrefix: gotk
                  metrics:
                  - each:
                      info:
                        labelsFromPath:
                          name:
                          - metadata
                          - name
                      type: Info
                    help: The current state of a Flux Bucket resource.
                    labelsFromPath:
                      bucket_name:
                      - spec
                      - bucketName
                      endpoint:
                      - spec
                      - endpoint
                      exported_namespace:
                      - metadata
                      - namespace
                      ready:
                      - status
                      - conditions
                      - '[type=Ready]'
                      - status
                      revision:
                      - status
                      - artifact
                      - revision
                      suspended:
                      - spec
                      - suspend
                    name: resource_info
                - groupVersionKind:
                    group: source.toolkit.fluxcd.io
                    kind: HelmRepository
                    version: v1
                  metricNamePrefix: gotk
                  metrics:
                  - each:
                      info:
                        labelsFromPath:
                          name:
                          - metadata
                          - name
                      type: Info
                    help: The current state of a Flux HelmRepository resource.
                    labelsFromPath:
                      exported_namespace:
                      - metadata
                      - namespace
                      ready:
                      - status
                      - conditions
                      - '[type=Ready]'
                      - status
                      revision:
                      - status
                      - artifact
                      - revision
                      suspended:
                      - spec
                      - suspend
                      url:
                      - spec
                      - url
                    name: resource_info
                - groupVersionKind:
                    group: source.toolkit.fluxcd.io
                    kind: HelmChart
                    version: v1
                  metricNamePrefix: gotk
                  metrics:
                  - each:
                      info:
                        labelsFromPath:
                          name:
                          - metadata
                          - name
                      type: Info
                    help: The current state of a Flux HelmChart resource.
                    labelsFromPath:
                      chart_name:
                      - spec
                      - chart
                      chart_version:
                      - spec
                      - version
                      exported_namespace:
                      - metadata
                      - namespace
                      ready:
                      - status
                      - conditions
                      - '[type=Ready]'
                      - status
                      revision:
                      - status
                      - artifact
                      - revision
                      suspended:
                      - spec
                      - suspend
                    name: resource_info
                - groupVersionKind:
                    group: source.toolkit.fluxcd.io
                    kind: OCIRepository
                    version: v1beta2
                  metricNamePrefix: gotk
                  metrics:
                  - each:
                      info:
                        labelsFromPath:
                          name:
                          - metadata
                          - name
                      type: Info
                    help: The current state of a Flux OCIRepository resource.
                    labelsFromPath:
                      exported_namespace:
                      - metadata
                      - namespace
                      ready:
                      - status
                      - conditions
                      - '[type=Ready]'
                      - status
                      revision:
                      - status
                      - artifact
                      - revision
                      suspended:
                      - spec
                      - suspend
                      url:
                      - spec
                      - url
                    name: resource_info
                - groupVersionKind:
                    group: notification.toolkit.fluxcd.io
                    kind: Alert
                    version: v1beta3
                  metricNamePrefix: gotk
                  metrics:
                  - each:
                      info:
                        labelsFromPath:
                          name:
                          - metadata
                          - name
                      type: Info
                    help: The current state of a Flux Alert resource.
                    labelsFromPath:
                      exported_namespace:
                      - metadata
                      - namespace
                      suspended:
                      - spec
                      - suspend
                    name: resource_info
                - groupVersionKind:
                    group: notification.toolkit.fluxcd.io
                    kind: Provider
                    version: v1beta3
                  metricNamePrefix: gotk
                  metrics:
                  - each:
                      info:
                        labelsFromPath:
                          name:
                          - metadata
                          - name
                      type: Info
                    help: The current state of a Flux Provider resource.
                    labelsFromPath:
                      exported_namespace:
                      - metadata
                      - namespace
                      suspended:
                      - spec
                      - suspend
                    name: resource_info
                - groupVersionKind:
                    group: notification.toolkit.fluxcd.io
                    kind: Receiver
                    version: v1
                  metricNamePrefix: gotk
                  metrics:
                  - each:
                      info:
                        labelsFromPath:
                          name:
                          - metadata
                          - name
                      type: Info
                    help: The current state of a Flux Receiver resource.
                    labelsFromPath:
                      exported_namespace:
                      - metadata
                      - namespace
                      ready:
                      - status
                      - conditions
                      - '[type=Ready]'
                      - status
                      suspended:
                      - spec
                      - suspend
                      webhook_path:
                      - status
                      - webhookPath
                    name: resource_info
                - groupVersionKind:
                    group: image.toolkit.fluxcd.io
                    kind: ImageRepository
                    version: v1beta2
                  metricNamePrefix: gotk
                  metrics:
                  - each:
                      info:
                        labelsFromPath:
                          name:
                          - metadata
                          - name
                      type: Info
                    help: The current state of a Flux ImageRepository resource.
                    labelsFromPath:
                      exported_namespace:
                      - metadata
                      - namespace
                      image:
                      - spec
                      - image
                      ready:
                      - status
                      - conditions
                      - '[type=Ready]'
                      - status
                      suspended:
                      - spec
                      - suspend
                    name: resource_info
                - groupVersionKind:
                    group: image.toolkit.fluxcd.io
                    kind: ImagePolicy
                    version: v1beta2
                  metricNamePrefix: gotk
                  metrics:
                  - each:
                      info:
                        labelsFromPath:
                          name:
                          - metadata
                          - name
                      type: Info
                    help: The current state of a Flux ImagePolicy resource.
                    labelsFromPath:
                      exported_namespace:
                      - metadata
                      - namespace
                      ready:
                      - status
                      - conditions
                      - '[type=Ready]'
                      - status
                      source_name:
                      - spec
                      - imageRepositoryRef
                      - name
                      suspended:
                      - spec
                      - suspend
                    name: resource_info
                - groupVersionKind:
                    group: image.toolkit.fluxcd.io
                    kind: ImageUpdateAutomation
                    version: v1beta2
                  metricNamePrefix: gotk
                  metrics:
                  - each:
                      info:
                        labelsFromPath:
                          name:
                          - metadata
                          - name
                      type: Info
                    help: The current state of a Flux ImageUpdateAutomation resource.
                    labelsFromPath:
                      exported_namespace:
                      - metadata
                      - namespace
                      ready:
                      - status
                      - conditions
                      - '[type=Ready]'
                      - status
                      source_name:
                      - spec
                      - sourceRef
                      - name
                      suspended:
                      - spec
                      - suspend
                    name: resource_info
            enabled: true
          image:
            pullPolicy: IfNotPresent
          podAnnotations:
            bigbang.dev/istioVersion: 1.26.3
          prometheus:
            monitor:
              relabelings:
              - action: replace
                replacement: logging-loki
                targetLabel: cluster
              - sourceLabels:
                - __meta_kubernetes_pod_node_name
                targetLabel: instance
              scheme: https
              tlsConfig:
                caFile: /etc/prom-certs/root-cert.pem
                certFile: /etc/prom-certs/cert-chain.pem
                insecureSkipVerify: true
                keyFile: /etc/prom-certs/key.pem
          rbac:
            extraRules:
            - apiGroups:
              - source.toolkit.fluxcd.io
              - kustomize.toolkit.fluxcd.io
              - helm.toolkit.fluxcd.io
              - notification.toolkit.fluxcd.io
              - image.toolkit.fluxcd.io
              resources:
              - gitrepositories
              - buckets
              - helmrepositories
              - helmcharts
              - ocirepositories
              - kustomizations
              - helmreleases
              - alerts
              - providers
              - receivers
              - imagerepositories
              - imagepolicies
              - imageupdateautomations
              verbs:
              - list
              - watch
        kubelet:
          serviceMonitor:
            cAdvisorRelabelings:
            - action: replace
              replacement: logging-loki
              targetLabel: cluster
            - sourceLabels:
              - __metrics_path__
              targetLabel: metrics_path
            - sourceLabels:
              - node
              targetLabel: instance
        loki:
          enabled: true
        minioOperator:
          enabled: false
        networkPolicies:
          controlPlaneCidr: 0.0.0.0/0
          enabled: true
          ingressLabels:
            app: public-ingressgateway
            istio: ingressgateway
          istioNamespaceSelector:
            egress: istio-system
            ingress: istio-gateway
        openshift: false
        prometheus:
          monitor:
            relabelings:
            - action: replace
              replacement: logging-loki
              targetLabel: cluster
          prometheusSpec:
            alertingEndpoints:
            - apiVersion: v2
              name: monitoring-monitoring-kube-alertmanager
              namespace: monitoring
              pathPrefix: /
              port: http-web
              scheme: https
              tlsConfig:
                caFile: /etc/prom-certs/root-cert.pem
                certFile: /etc/prom-certs/cert-chain.pem
                insecureSkipVerify: true
                keyFile: /etc/prom-certs/key.pem
            containers:
            - imagePullPolicy: IfNotPresent
              name: prometheus
            - imagePullPolicy: IfNotPresent
              name: config-reloader
            enableRemoteWriteReceiver: true
            podMetadata:
              annotations:
                bigbang.dev/istioVersion: 1.26.3
                proxy.istio.io/config: |
                  proxyMetadata:
                    OUTPUT_CERTS: /etc/istio-output-certs
                sidecar.istio.io/userVolumeMount: '[{"name": "istio-certs", "mountPath":
                  "/etc/istio-output-certs"}]'
                traffic.sidecar.istio.io/includeOutboundIPRanges: ""
              labels:
                app: prometheus
                protect: keycloak
            volumeMounts:
            - mountPath: /etc/prom-certs/
              name: istio-certs
            volumes:
            - emptyDir:
                medium: Memory
              name: istio-certs
        prometheus-node-exporter:
          image:
            pullPolicy: IfNotPresent
          podAnnotations:
            bigbang.dev/istioVersion: 1.26.3
          prometheus:
            monitor:
              relabelings:
              - action: replace
                replacement: logging-loki
                targetLabel: cluster
              - sourceLabels:
                - __meta_kubernetes_pod_node_name
                targetLabel: instance
              scheme: https
              tlsConfig:
                caFile: /etc/prom-certs/root-cert.pem
                certFile: /etc/prom-certs/cert-chain.pem
                insecureSkipVerify: true
                keyFile: /etc/prom-certs/key.pem
        prometheusOperator:
          admissionWebhooks:
            cleanupProxy:
              image:
                pullPolicy: IfNotPresent
            patch:
              image:
                pullPolicy: IfNotPresent
          image:
            pullPolicy: IfNotPresent
          podAnnotations:
            bigbang.dev/istioVersion: 1.26.3
        sso:
          enabled: true
        tempo:
          enabled: true
        upstream:
          alertmanager:
            alertmanagerSpec:
              containers:
              - imagePullPolicy: IfNotPresent
                name: alertmanager
              - imagePullPolicy: IfNotPresent
                name: config-reloader
              podMetadata:
                annotations:
                  bigbang.dev/istioVersion: 1.26.3
                labels:
                  protect: keycloak
            serviceMonitor:
              scheme: https
              tlsConfig:
                caFile: /etc/prom-certs/root-cert.pem
                certFile: /etc/prom-certs/cert-chain.pem
                insecureSkipVerify: true
                keyFile: /etc/prom-certs/key.pem
          defaultRules:
            additionalRuleLabels:
              cluster: logging-loki
          kube-state-metrics:
            customResourceState:
              config:
                spec:
                  resources:
                  - groupVersionKind:
                      group: kustomize.toolkit.fluxcd.io
                      kind: Kustomization
                      version: v1
                    metricNamePrefix: gotk
                    metrics:
                    - each:
                        info:
                          labelsFromPath:
                            name:
                            - metadata
                            - name
                        type: Info
                      help: The current state of a Flux Kustomization resource.
                      labelsFromPath:
                        exported_namespace:
                        - metadata
                        - namespace
                        ready:
                        - status
                        - conditions
                        - '[type=Ready]'
                        - status
                        revision:
                        - status
                        - lastAppliedRevision
                        source_name:
                        - spec
                        - sourceRef
                        - name
                        suspended:
                        - spec
                        - suspend
                      name: resource_info
                  - groupVersionKind:
                      group: helm.toolkit.fluxcd.io
                      kind: HelmRelease
                      version: v2
                    metricNamePrefix: gotk
                    metrics:
                    - each:
                        info:
                          labelsFromPath:
                            name:
                            - metadata
                            - name
                        type: Info
                      help: The current state of a Flux HelmRelease resource.
                      labelsFromPath:
                        chart_app_version:
                        - status
                        - history
                        - "0"
                        - appVersion
                        chart_name:
                        - status
                        - history
                        - "0"
                        - chartName
                        chart_ref_name:
                        - spec
                        - chartRef
                        - name
                        chart_source_name:
                        - spec
                        - chart
                        - spec
                        - sourceRef
                        - name
                        exported_namespace:
                        - metadata
                        - namespace
                        ready:
                        - status
                        - conditions
                        - '[type=Ready]'
                        - status
                        revision:
                        - status
                        - history
                        - "0"
                        - chartVersion
                        suspended:
                        - spec
                        - suspend
                      name: resource_info
                  - groupVersionKind:
                      group: source.toolkit.fluxcd.io
                      kind: GitRepository
                      version: v1
                    metricNamePrefix: gotk
                    metrics:
                    - each:
                        info:
                          labelsFromPath:
                            name:
                            - metadata
                            - name
                        type: Info
                      help: The current state of a Flux GitRepository resource.
                      labelsFromPath:
                        exported_namespace:
                        - metadata
                        - namespace
                        ready:
                        - status
                        - conditions
                        - '[type=Ready]'
                        - status
                        revision:
                        - status
                        - artifact
                        - revision
                        suspended:
                        - spec
                        - suspend
                        url:
                        - spec
                        - url
                      name: resource_info
                  - groupVersionKind:
                      group: source.toolkit.fluxcd.io
                      kind: Bucket
                      version: v1
                    metricNamePrefix: gotk
                    metrics:
                    - each:
                        info:
                          labelsFromPath:
                            name:
                            - metadata
                            - name
                        type: Info
                      help: The current state of a Flux Bucket resource.
                      labelsFromPath:
                        bucket_name:
                        - spec
                        - bucketName
                        endpoint:
                        - spec
                        - endpoint
                        exported_namespace:
                        - metadata
                        - namespace
                        ready:
                        - status
                        - conditions
                        - '[type=Ready]'
                        - status
                        revision:
                        - status
                        - artifact
                        - revision
                        suspended:
                        - spec
                        - suspend
                      name: resource_info
                  - groupVersionKind:
                      group: source.toolkit.fluxcd.io
                      kind: HelmRepository
                      version: v1
                    metricNamePrefix: gotk
                    metrics:
                    - each:
                        info:
                          labelsFromPath:
                            name:
                            - metadata
                            - name
                        type: Info
                      help: The current state of a Flux HelmRepository resource.
                      labelsFromPath:
                        exported_namespace:
                        - metadata
                        - namespace
                        ready:
                        - status
                        - conditions
                        - '[type=Ready]'
                        - status
                        revision:
                        - status
                        - artifact
                        - revision
                        suspended:
                        - spec
                        - suspend
                        url:
                        - spec
                        - url
                      name: resource_info
                  - groupVersionKind:
                      group: source.toolkit.fluxcd.io
                      kind: HelmChart
                      version: v1
                    metricNamePrefix: gotk
                    metrics:
                    - each:
                        info:
                          labelsFromPath:
                            name:
                            - metadata
                            - name
                        type: Info
                      help: The current state of a Flux HelmChart resource.
                      labelsFromPath:
                        chart_name:
                        - spec
                        - chart
                        chart_version:
                        - spec
                        - version
                        exported_namespace:
                        - metadata
                        - namespace
                        ready:
                        - status
                        - conditions
                        - '[type=Ready]'
                        - status
                        revision:
                        - status
                        - artifact
                        - revision
                        suspended:
                        - spec
                        - suspend
                      name: resource_info
                  - groupVersionKind:
                      group: source.toolkit.fluxcd.io
                      kind: OCIRepository
                      version: v1beta2
                    metricNamePrefix: gotk
                    metrics:
                    - each:
                        info:
                          labelsFromPath:
                            name:
                            - metadata
                            - name
                        type: Info
                      help: The current state of a Flux OCIRepository resource.
                      labelsFromPath:
                        exported_namespace:
                        - metadata
                        - namespace
                        ready:
                        - status
                        - conditions
                        - '[type=Ready]'
                        - status
                        revision:
                        - status
                        - artifact
                        - revision
                        suspended:
                        - spec
                        - suspend
                        url:
                        - spec
                        - url
                      name: resource_info
                  - groupVersionKind:
                      group: notification.toolkit.fluxcd.io
                      kind: Alert
                      version: v1beta3
                    metricNamePrefix: gotk
                    metrics:
                    - each:
                        info:
                          labelsFromPath:
                            name:
                            - metadata
                            - name
                        type: Info
                      help: The current state of a Flux Alert resource.
                      labelsFromPath:
                        exported_namespace:
                        - metadata
                        - namespace
                        suspended:
                        - spec
                        - suspend
                      name: resource_info
                  - groupVersionKind:
                      group: notification.toolkit.fluxcd.io
                      kind: Provider
                      version: v1beta3
                    metricNamePrefix: gotk
                    metrics:
                    - each:
                        info:
                          labelsFromPath:
                            name:
                            - metadata
                            - name
                        type: Info
                      help: The current state of a Flux Provider resource.
                      labelsFromPath:
                        exported_namespace:
                        - metadata
                        - namespace
                        suspended:
                        - spec
                        - suspend
                      name: resource_info
                  - groupVersionKind:
                      group: notification.toolkit.fluxcd.io
                      kind: Receiver
                      version: v1
                    metricNamePrefix: gotk
                    metrics:
                    - each:
                        info:
                          labelsFromPath:
                            name:
                            - metadata
                            - name
                        type: Info
                      help: The current state of a Flux Receiver resource.
                      labelsFromPath:
                        exported_namespace:
                        - metadata
                        - namespace
                        ready:
                        - status
                        - conditions
                        - '[type=Ready]'
                        - status
                        suspended:
                        - spec
                        - suspend
                        webhook_path:
                        - status
                        - webhookPath
                      name: resource_info
                  - groupVersionKind:
                      group: image.toolkit.fluxcd.io
                      kind: ImageRepository
                      version: v1beta2
                    metricNamePrefix: gotk
                    metrics:
                    - each:
                        info:
                          labelsFromPath:
                            name:
                            - metadata
                            - name
                        type: Info
                      help: The current state of a Flux ImageRepository resource.
                      labelsFromPath:
                        exported_namespace:
                        - metadata
                        - namespace
                        image:
                        - spec
                        - image
                        ready:
                        - status
                        - conditions
                        - '[type=Ready]'
                        - status
                        suspended:
                        - spec
                        - suspend
                      name: resource_info
                  - groupVersionKind:
                      group: image.toolkit.fluxcd.io
                      kind: ImagePolicy
                      version: v1beta2
                    metricNamePrefix: gotk
                    metrics:
                    - each:
                        info:
                          labelsFromPath:
                            name:
                            - metadata
                            - name
                        type: Info
                      help: The current state of a Flux ImagePolicy resource.
                      labelsFromPath:
                        exported_namespace:
                        - metadata
                        - namespace
                        ready:
                        - status
                        - conditions
                        - '[type=Ready]'
                        - status
                        source_name:
                        - spec
                        - imageRepositoryRef
                        - name
                        suspended:
                        - spec
                        - suspend
                      name: resource_info
                  - groupVersionKind:
                      group: image.toolkit.fluxcd.io
                      kind: ImageUpdateAutomation
                      version: v1beta2
                    metricNamePrefix: gotk
                    metrics:
                    - each:
                        info:
                          labelsFromPath:
                            name:
                            - metadata
                            - name
                        type: Info
                      help: The current state of a Flux ImageUpdateAutomation resource.
                      labelsFromPath:
                        exported_namespace:
                        - metadata
                        - namespace
                        ready:
                        - status
                        - conditions
                        - '[type=Ready]'
                        - status
                        source_name:
                        - spec
                        - sourceRef
                        - name
                        suspended:
                        - spec
                        - suspend
                      name: resource_info
              enabled: true
            image:
              pullPolicy: IfNotPresent
            podAnnotations:
              bigbang.dev/istioVersion: 1.26.3
            prometheus:
              monitor:
                relabelings:
                - action: replace
                  replacement: logging-loki
                  targetLabel: cluster
                - sourceLabels:
                  - __meta_kubernetes_pod_node_name
                  targetLabel: instance
                scheme: https
                tlsConfig:
                  caFile: /etc/prom-certs/root-cert.pem
                  certFile: /etc/prom-certs/cert-chain.pem
                  insecureSkipVerify: true
                  keyFile: /etc/prom-certs/key.pem
            rbac:
              extraRules:
              - apiGroups:
                - source.toolkit.fluxcd.io
                - kustomize.toolkit.fluxcd.io
                - helm.toolkit.fluxcd.io
                - notification.toolkit.fluxcd.io
                - image.toolkit.fluxcd.io
                resources:
                - gitrepositories
                - buckets
                - helmrepositories
                - helmcharts
                - ocirepositories
                - kustomizations
                - helmreleases
                - alerts
                - providers
                - receivers
                - imagerepositories
                - imagepolicies
                - imageupdateautomations
                verbs:
                - list
                - watch
          kubelet:
            serviceMonitor:
              cAdvisorRelabelings:
              - action: replace
                replacement: logging-loki
                targetLabel: cluster
              - sourceLabels:
                - __metrics_path__
                targetLabel: metrics_path
              - sourceLabels:
                - node
                targetLabel: instance
          prometheus:
            monitor:
              relabelings:
              - action: replace
                replacement: logging-loki
                targetLabel: cluster
            prometheusSpec:
              alertingEndpoints:
              - apiVersion: v2
                name: monitoring-monitoring-kube-alertmanager
                namespace: monitoring
                pathPrefix: /
                port: http-web
                scheme: https
                tlsConfig:
                  caFile: /etc/prom-certs/root-cert.pem
                  certFile: /etc/prom-certs/cert-chain.pem
                  insecureSkipVerify: true
                  keyFile: /etc/prom-certs/key.pem
              containers:
              - imagePullPolicy: IfNotPresent
                name: prometheus
              - imagePullPolicy: IfNotPresent
                name: config-reloader
              enableRemoteWriteReceiver: true
              podMetadata:
                annotations:
                  bigbang.dev/istioVersion: 1.26.3
                  proxy.istio.io/config: |
                    proxyMetadata:
                      OUTPUT_CERTS: /etc/istio-output-certs
                  sidecar.istio.io/userVolumeMount: '[{"name": "istio-certs", "mountPath":
                    "/etc/istio-output-certs"}]'
                  traffic.sidecar.istio.io/includeOutboundIPRanges: ""
                labels:
                  app: prometheus
                  protect: keycloak
              volumeMounts:
              - mountPath: /etc/prom-certs/
                name: istio-certs
              volumes:
              - emptyDir:
                  medium: Memory
                name: istio-certs
          prometheus-node-exporter:
            image:
              pullPolicy: IfNotPresent
            podAnnotations:
              bigbang.dev/istioVersion: 1.26.3
            prometheus:
              monitor:
                relabelings:
                - action: replace
                  replacement: logging-loki
                  targetLabel: cluster
                - sourceLabels:
                  - __meta_kubernetes_pod_node_name
                  targetLabel: instance
                scheme: https
                tlsConfig:
                  caFile: /etc/prom-certs/root-cert.pem
                  certFile: /etc/prom-certs/cert-chain.pem
                  insecureSkipVerify: true
                  keyFile: /etc/prom-certs/key.pem
          prometheusOperator:
            admissionWebhooks:
              cleanupProxy:
                image:
                  pullPolicy: IfNotPresent
              patch:
                image:
                  pullPolicy: IfNotPresent
            image:
              pullPolicy: IfNotPresent
            podAnnotations:
              bigbang.dev/istioVersion: 1.26.3
        vault:
          enabled: false
          tlsDisable: true
      vault:
        enabled: false
        tlsDisable: true
  overlays: |
    istio:
      enabled: true
---
# Source: bigbang/templates/prometheus-operator-crds/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-prometheus-operator-crds-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    'upstream: {}'
  overlays: |
    {}
---
# Source: bigbang/templates/tempo/values.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-tempo-values
  namespace: default
type: generic
stringData:
  common: ""
  defaults:
    |-
      domain: dev.bigbang.mil
      hostname: dev.bigbang.mil
      istio:
        enabled: true
        hardened:
          enabled: false
        tempoQuery:
          gateways:
          - istio-gateway/public-ingressgateway
      monitoring:
        enabled: true
      networkPolicies:
        controlPlaneCidr: 0.0.0.0/0
        enabled: true
        ingressLabels:
          app: public-ingressgateway
          istio: ingressgateway
        istioNamespaceSelector:
          egress: istio-system
          ingress: istio-gateway
      objectStorage:
        access_key_id: null
        secret_access_key: null
      podAnnotations:
        bigbang.dev/istioVersion: 1.26.3
      podLabels: null
      serviceAccount:
        imagePullSecrets:
        - name: private-registry
      serviceMonitor:
        enabled: true
        scheme: https
        tlsConfig:
          caFile: /etc/prom-certs/root-cert.pem
          certFile: /etc/prom-certs/cert-chain.pem
          insecureSkipVerify: true
          keyFile: /etc/prom-certs/key.pem
      sso:
        enabled: false
      tempo:
        global_overrides:
          ingestion_rate_limit_bytes: 30000000
        pullPolicy: IfNotPresent
      tempoQuery:
        pullPolicy: IfNotPresent
      upstream:
        domain: dev.bigbang.mil
        hostname: dev.bigbang.mil
        istio:
          enabled: true
          hardened:
            enabled: false
          tempoQuery:
            gateways:
            - istio-gateway/public-ingressgateway
        monitoring:
          enabled: true
        networkPolicies:
          controlPlaneCidr: 0.0.0.0/0
          enabled: true
          ingressLabels:
            app: public-ingressgateway
            istio: ingressgateway
          istioNamespaceSelector:
            egress: istio-system
            ingress: istio-gateway
        objectStorage:
          access_key_id: null
          secret_access_key: null
        podAnnotations:
          bigbang.dev/istioVersion: 1.26.3
        podLabels: null
        serviceAccount:
          imagePullSecrets:
          - name: private-registry
        serviceMonitor:
          enabled: true
          scheme: https
          tlsConfig:
            caFile: /etc/prom-certs/root-cert.pem
            certFile: /etc/prom-certs/cert-chain.pem
            insecureSkipVerify: true
            keyFile: /etc/prom-certs/key.pem
        sso:
          enabled: false
        tempo:
          global_overrides:
            ingestion_rate_limit_bytes: 30000000
          pullPolicy: IfNotPresent
        tempoQuery:
          pullPolicy: IfNotPresent
  overlays: |
    {}
---
# Source: bigbang/templates/grafana/flux-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: flux-grafana-dashboards 
  namespace: monitoring
  labels:
    grafana_dashboard: "1"
data:
  flux-cluster-dashboard.json: |
    
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          },
          {
            "datasource": {
              "type": "datasource",
              "uid": "grafana"
            },
            "enable": true,
            "iconColor": "red",
            "name": "flux events",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [
                "flux"
              ],
              "type": "tags"
            }
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "id": 1,
      "links": [],
      "liveNow": false,
      "panels": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "decimals": 0,
              "mappings": [],
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "blue",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 100
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 6,
            "x": 0,
            "y": 0
          },
          "id": 24,
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "value"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "prometheus"
              },
              "editorMode": "code",
              "exemplar": false,
              "expr": "count(gotk_resource_info{exported_namespace=~\"$namespace\", customresource_kind=~\"Kustomization|HelmRelease\"})",
              "instant": true,
              "interval": "",
              "legendFormat": "",
              "range": false,
              "refId": "A"
            }
          ],
          "title": "Cluster Reconcilers",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "decimals": 0,
              "mappings": [],
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 6,
            "x": 6,
            "y": 0
          },
          "id": 28,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "value"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "prometheus"
              },
              "editorMode": "code",
              "exemplar": false,
              "expr": "count(gotk_resource_info{exported_namespace=~\"$namespace\", customresource_kind=~\"Kustomization|HelmRelease\", ready=\"False\"})",
              "instant": true,
              "interval": "",
              "legendFormat": "",
              "range": false,
              "refId": "A"
            }
          ],
          "title": "Failing Reconcilers",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "decimals": 0,
              "mappings": [],
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "blue",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 100
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 6,
            "x": 12,
            "y": 0
          },
          "id": 29,
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "value"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "prometheus"
              },
              "editorMode": "code",
              "exemplar": false,
              "expr": "count(gotk_resource_info{exported_namespace=~\"$namespace\", customresource_kind=~\"GitRepository|HelmRepository|Bucket|OCIRepository\"})",
              "instant": true,
              "interval": "",
              "legendFormat": "",
              "range": false,
              "refId": "A"
            }
          ],
          "title": "Kubernetes Manifests Sources",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "decimals": 0,
              "mappings": [],
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 6,
            "x": 18,
            "y": 0
          },
          "id": 30,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "value"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "prometheus"
              },
              "editorMode": "code",
              "exemplar": false,
              "expr": "count(gotk_resource_info{exported_namespace=~\"$namespace\", customresource_kind=~\"GitRepository|HelmRepository|Bucket|OCIRepository\", ready=\"False\"})",
              "instant": true,
              "interval": "",
              "legendFormat": "",
              "range": false,
              "refId": "A"
            }
          ],
          "title": "Failing Sources",
          "type": "stat"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "#EAB839",
                    "value": 1
                  },
                  {
                    "color": "red",
                    "value": 61
                  }
                ]
              },
              "unit": "s"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 12,
            "x": 0,
            "y": 5
          },
          "id": 8,
          "options": {
            "displayMode": "gradient",
            "minVizHeight": 10,
            "minVizWidth": 0,
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "mean"
              ],
              "fields": "",
              "values": false
            },
            "showUnfilled": true,
            "text": {},
            "valueMode": "color"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "exemplar": true,
              "expr": "sum(rate(gotk_reconcile_duration_seconds_sum{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",kind=~\"Kustomization|HelmRelease\"}[5m])) by (kind)\n/\n  sum(rate(gotk_reconcile_duration_seconds_count{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",kind=~\"Kustomization|HelmRelease\"}[5m])) by (kind)",
              "interval": "",
              "legendFormat": "{{kind}}",
              "refId": "A"
            }
          ],
          "title": "Reconciler ops avg. duration",
          "type": "bargauge"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "#EAB839",
                    "value": 1
                  },
                  {
                    "color": "red",
                    "value": 61
                  }
                ]
              },
              "unit": "s"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 12,
            "x": 12,
            "y": 5
          },
          "id": 31,
          "options": {
            "displayMode": "gradient",
            "minVizHeight": 10,
            "minVizWidth": 0,
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "mean"
              ],
              "fields": "",
              "values": false
            },
            "showUnfilled": true,
            "text": {},
            "valueMode": "color"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "exemplar": true,
              "expr": "sum(rate(gotk_reconcile_duration_seconds_sum{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",kind=~\"GitRepository|HelmRepository|Bucket|OCIRepository\"}[5m])) by (kind)\n/\n  sum(rate(gotk_reconcile_duration_seconds_count{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",kind=~\"GitRepository|HelmRepository|Bucket|OCIRepository\"}[5m])) by (kind)",
              "interval": "",
              "legendFormat": "{{kind}}",
              "refId": "A"
            }
          ],
          "title": "Source ops avg. duration",
          "type": "bargauge"
        },
        {
          "collapsed": false,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 9
          },
          "id": 15,
          "panels": [],
          "title": "Status",
          "type": "row"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "filterable": true,
                "inspect": false
              },
              "mappings": [
                {
                  "options": {
                    "False": {
                      "color": "red",
                      "index": 1,
                      "text": "Not Ready"
                    },
                    "True": {
                      "color": "blue",
                      "index": 0,
                      "text": "Ready"
                    }
                  },
                  "type": "value"
                }
              ],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "transparent",
                    "value": null
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byType",
                  "options": "string"
                },
                "properties": [
                  {
                    "id": "custom.cellOptions",
                    "value": {
                      "mode": "basic",
                      "type": "color-background"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 22,
            "w": 12,
            "x": 0,
            "y": 10
          },
          "id": 33,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": true,
                "displayName": "Status"
              }
            ]
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "prometheus"
              },
              "editorMode": "code",
              "exemplar": true,
              "expr": "gotk_resource_info{exported_namespace=~\"$namespace\", customresource_kind=~\"Kustomization|HelmRelease\"}",
              "format": "table",
              "instant": true,
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "title": "Cluster reconciliation readiness ",
          "transformations": [
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "Time": false,
                  "Value": false,
                  "__name__": false,
                  "app": false,
                  "chart_name": false,
                  "chart_source_name": false,
                  "container": false,
                  "customresource_group": false,
                  "customresource_kind": false,
                  "customresource_version": false,
                  "endpoint": false,
                  "exported_namespace": false,
                  "gotk_type": false,
                  "instance": false,
                  "job": false,
                  "kubernetes_namespace": false,
                  "kubernetes_pod_name": false,
                  "namespace": false,
                  "pod": false,
                  "pod_template_hash": false,
                  "revision": false,
                  "service": false,
                  "source_name": false,
                  "status": false,
                  "suspended": false,
                  "type": false
                },
                "indexByName": {
                  "Time": 0,
                  "Value": 15,
                  "__name__": 1,
                  "container": 2,
                  "customresource_group": 4,
                  "customresource_kind": 5,
                  "customresource_version": 6,
                  "endpoint": 7,
                  "exported_namespace": 3,
                  "instance": 8,
                  "job": 9,
                  "name": 10,
                  "namespace": 11,
                  "pod": 12,
                  "ready": 13,
                  "service": 14
                },
                "renameByName": {
                  "Value": "",
                  "customresource_kind": "Kind",
                  "exported_namespace": "Namespace",
                  "kind": "Kind",
                  "name": "Name",
                  "namespace": "Operator Namespace",
                  "ready": "Status"
                }
              }
            },
            {
              "id": "filterFieldsByName",
              "options": {
                "include": {
                  "pattern": "(Namespace|Kind|Name|Status)"
                }
              }
            }
          ],
          "type": "table"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "filterable": true,
                "inspect": false
              },
              "mappings": [
                {
                  "options": {
                    "False": {
                      "color": "red",
                      "index": 1,
                      "text": "Not Ready"
                    },
                    "True": {
                      "color": "blue",
                      "index": 0,
                      "text": "Ready"
                    }
                  },
                  "type": "value"
                }
              ],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "transparent",
                    "value": null
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byType",
                  "options": "string"
                },
                "properties": [
                  {
                    "id": "custom.cellOptions",
                    "value": {
                      "mode": "basic",
                      "type": "color-background"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Status"
                },
                "properties": [
                  {
                    "id": "noValue",
                    "value": "Ready"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 11,
            "w": 12,
            "x": 12,
            "y": 10
          },
          "id": 34,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": true,
                "displayName": "Status"
              }
            ]
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "prometheus"
              },
              "editorMode": "code",
              "exemplar": true,
              "expr": "gotk_resource_info{exported_namespace=~\"$namespace\", customresource_kind=~\"GitRepository|HelmRepository|Bucket|OCIRepository\"}",
              "format": "table",
              "instant": true,
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "title": "Source acquisition readiness ",
          "transformations": [
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "Time": false,
                  "Value": false,
                  "__name__": false,
                  "app": false,
                  "bucket_name": false,
                  "container": false,
                  "customresource_group": false,
                  "customresource_kind": false,
                  "customresource_version": false,
                  "endpoint": false,
                  "exported_namespace": false,
                  "gotk_type": false,
                  "instance": false,
                  "job": false,
                  "kubernetes_namespace": false,
                  "kubernetes_pod_name": false,
                  "namespace": false,
                  "pod": false,
                  "pod_template_hash": false,
                  "ready": false,
                  "revision": false,
                  "service": false,
                  "status": false,
                  "suspended": false,
                  "type": false,
                  "url": false
                },
                "indexByName": {
                  "Time": 0,
                  "Value": 15,
                  "__name__": 1,
                  "container": 2,
                  "customresource_group": 5,
                  "customresource_kind": 6,
                  "customresource_version": 7,
                  "endpoint": 8,
                  "exported_namespace": 4,
                  "instance": 9,
                  "job": 10,
                  "name": 11,
                  "namespace": 3,
                  "pod": 12,
                  "ready": 13,
                  "service": 14
                },
                "renameByName": {
                  "Value": "",
                  "customresource_kind": "Kind",
                  "exported_namespace": "Namespace",
                  "kind": "Kind",
                  "name": "Name",
                  "namespace": "Operator Namespace",
                  "ready": "Status"
                }
              }
            },
            {
              "id": "filterFieldsByName",
              "options": {
                "include": {
                  "pattern": "(Namespace|Kind|Name|Status)"
                }
              }
            }
          ],
          "type": "table"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "filterable": true,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "transparent",
                    "value": null
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byType",
                  "options": "string"
                },
                "properties": [
                  {
                    "id": "custom.cellOptions",
                    "value": {
                      "mode": "basic",
                      "type": "color-background"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 11,
            "w": 12,
            "x": 12,
            "y": 21
          },
          "id": 36,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": true,
                "displayName": "Namespace"
              }
            ]
          },
          "pluginVersion": "10.1.0",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "prometheus"
              },
              "editorMode": "code",
              "exemplar": true,
              "expr": "gotk_resource_info{exported_namespace=~\"$namespace\", suspended=\"true\"}",
              "format": "table",
              "instant": true,
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "title": "Suspended Objects",
          "transformations": [
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "Time": false,
                  "Value": false,
                  "__name__": false,
                  "app": false,
                  "bucket_name": false,
                  "container": false,
                  "customresource_group": false,
                  "customresource_kind": false,
                  "customresource_version": false,
                  "endpoint": false,
                  "exported_namespace": false,
                  "gotk_type": false,
                  "instance": false,
                  "job": false,
                  "kubernetes_namespace": false,
                  "kubernetes_pod_name": false,
                  "namespace": false,
                  "pod": false,
                  "pod_template_hash": false,
                  "ready": false,
                  "revision": false,
                  "service": false,
                  "source_name": false,
                  "status": false,
                  "suspended": false,
                  "type": false,
                  "url": false
                },
                "indexByName": {
                  "Time": 0,
                  "Value": 15,
                  "__name__": 1,
                  "container": 2,
                  "customresource_group": 5,
                  "customresource_kind": 6,
                  "customresource_version": 7,
                  "endpoint": 8,
                  "exported_namespace": 4,
                  "instance": 9,
                  "job": 10,
                  "name": 11,
                  "namespace": 3,
                  "pod": 12,
                  "ready": 13,
                  "service": 14
                },
                "renameByName": {
                  "customresource_kind": "Kind",
                  "exported_namespace": "Namespace",
                  "name": "Name"
                }
              }
            },
            {
              "id": "filterFieldsByName",
              "options": {
                "include": {
                  "pattern": "(Namespace|Name|Kind)"
                }
              }
            }
          ],
          "type": "table"
        },
        {
          "collapsed": false,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 32
          },
          "id": 17,
          "panels": [],
          "title": "Timing",
          "type": "row"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "s"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byValue",
                  "options": {
                    "op": "gte",
                    "reducer": "allIsZero",
                    "value": 0
                  }
                },
                "properties": [
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": true,
                      "tooltip": true,
                      "viz": false
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byValue",
                  "options": {
                    "op": "gte",
                    "reducer": "allIsNull",
                    "value": 0
                  }
                },
                "properties": [
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": true,
                      "tooltip": true,
                      "viz": false
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 33
          },
          "id": 27,
          "options": {
            "legend": {
              "calcs": [
                "mean"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "desc"
            }
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "exemplar": true,
              "expr": "sum(rate(gotk_reconcile_duration_seconds_sum{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",kind=~\"Kustomization|HelmRelease\"}[5m])) by (kind, name)\n/\n  sum(rate(gotk_reconcile_duration_seconds_count{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",kind=~\"Kustomization|HelmRelease\"}[5m])) by (kind, name)",
              "hide": false,
              "interval": "",
              "legendFormat": "{{kind}}/{{name}}",
              "refId": "B"
            }
          ],
          "title": "Cluster reconciliation duration",
          "type": "timeseries"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "s"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byValue",
                  "options": {
                    "op": "gte",
                    "reducer": "allIsZero",
                    "value": 0
                  }
                },
                "properties": [
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": true,
                      "tooltip": true,
                      "viz": false
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byValue",
                  "options": {
                    "op": "gte",
                    "reducer": "allIsNull",
                    "value": 0
                  }
                },
                "properties": [
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": true,
                      "tooltip": true,
                      "viz": false
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 41
          },
          "id": 35,
          "options": {
            "legend": {
              "calcs": [
                "mean"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "desc"
            }
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "exemplar": true,
              "expr": "sum(rate(gotk_reconcile_duration_seconds_sum{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",kind=~\"GitRepository|HelmRepository|Bucket|OCIRepository\"}[5m])) by (kind, name)\n/\n  sum(rate(gotk_reconcile_duration_seconds_count{namespace=~\"$operator_namespace\",exported_namespace=~\"$namespace\",kind=~\"GitRepository|HelmRepository|Bucket|OCIRepository\"}[5m])) by (kind, name)",
              "hide": false,
              "interval": "",
              "legendFormat": "{{kind}}/{{name}}",
              "refId": "B"
            }
          ],
          "title": "Source acquisition duration",
          "type": "timeseries"
        }
      ],
      "refresh": "30s",
      "schemaVersion": 38,
      "style": "light",
      "tags": [
        "flux"
      ],
      "templating": {
        "list": [
          {
            "allValue": "",
            "current": {
              "selected": true,
              "text": [
                "All"
              ],
              "value": [
                "$__all"
              ]
            },
            "datasource": {
              "type": "prometheus",
              "uid": "$DS_PROMETHEUS"
            },
            "definition": "label_values(gotk_resource_info, exported_namespace)",
            "hide": 0,
            "includeAll": true,
            "multi": true,
            "name": "operator_namespace",
            "options": [],
            "query": {
              "query": "label_values(gotk_reconcile_duration_seconds_sum, namespace)",
              "refId": "StandardVariableQuery"
            },
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 5,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "current": {
              "selected": true,
              "text": [
                "All"
              ],
              "value": [
                "$__all"
              ]
            },
            "datasource": {
              "type": "prometheus",
              "uid": "$DS_PROMETHEUS"
            },
            "definition": "label_values(gotk_resource_info,exported_namespace)",
            "hide": 0,
            "includeAll": true,
            "multi": true,
            "name": "namespace",
            "options": [],
            "query": {
              "query": "label_values(gotk_resource_info,exported_namespace)",
              "refId": "PrometheusVariableQueryEditor-VariableQuery"
            },
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "current": {
              "selected": false,
              "text": "Prometheus",
              "value": "Prometheus"
            },
            "hide": 0,
            "includeAll": false,
            "label": "Datasource",
            "multi": false,
            "name": "DS_PROMETHEUS",
            "options": [],
            "query": "prometheus",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "type": "datasource"
          }
        ]
      },
      "time": {
        "from": "now-15m",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "10s",
          "30s",
          "1m",
          "5m",
          "15m",
          "30m",
          "1h",
          "2h",
          "1d"
        ]
      },
      "timezone": "",
      "title": "Flux Cluster Stats",
      "uid": "flux-cluster",
      "version": 4,
      "weekStart": ""
    }
    
  flux-control-plane-dashboard.json: |
    
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": {
              "type": "datasource",
              "uid": "grafana"
            },
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [],
              "type": "dashboard"
            },
            "type": "dashboard"
          },
          {
            "datasource": {
              "type": "datasource",
              "uid": "grafana"
            },
            "enable": true,
            "iconColor": "red",
            "name": "flux events",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [
                "flux"
              ],
              "type": "tags"
            }
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "id": 1,
      "links": [],
      "liveNow": false,
      "panels": [
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "blue",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 100
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 6,
            "x": 0,
            "y": 0
          },
          "id": 24,
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "value"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(go_info{namespace=\"$namespace\",pod=~\".*-controller-.*\"})",
              "interval": "",
              "legendFormat": "pods",
              "refId": "A"
            }
          ],
          "title": "Controllers",
          "type": "stat"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "blue",
                    "value": null
                  },
                  {
                    "color": "#EAB839",
                    "value": 50
                  },
                  {
                    "color": "red",
                    "value": 100
                  }
                ]
              },
              "unit": "s"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 6,
            "x": 6,
            "y": 0
          },
          "id": 23,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "max(workqueue_longest_running_processor_seconds{namespace=\"$namespace\",pod=~\".*-controller-.*\"})",
              "hide": false,
              "interval": "",
              "legendFormat": "seconds",
              "refId": "B"
            }
          ],
          "title": "Max Work Queue",
          "type": "stat"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "blue",
                    "value": null
                  },
                  {
                    "color": "#EAB839",
                    "value": 500000000
                  },
                  {
                    "color": "red",
                    "value": 900000000
                  }
                ]
              },
              "unit": "decbits"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 6,
            "x": 12,
            "y": 0
          },
          "id": 25,
          "options": {
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showThresholdLabels": false,
            "showThresholdMarkers": true,
            "text": {}
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(go_memstats_alloc_bytes{namespace=\"$namespace\",pod=~\".*-controller-.*\"})",
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "title": "Memory",
          "type": "gauge"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "blue",
                    "value": null
                  },
                  {
                    "color": "#EAB839",
                    "value": 50
                  },
                  {
                    "color": "red",
                    "value": 100
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 6,
            "x": 18,
            "y": 0
          },
          "id": 26,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "mean"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(rate(rest_client_requests_total{namespace=\"$namespace\",pod=~\".*-controller-.*\"}[1m]))",
              "interval": "",
              "legendFormat": "requests",
              "refId": "A"
            }
          ],
          "title": "API Requests",
          "type": "stat"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 5
          },
          "id": 21,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(rate(rest_client_requests_total{namespace=\"$namespace\"}[1m]))",
              "hide": false,
              "interval": "",
              "legendFormat": "total",
              "refId": "A"
            },
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(rate(rest_client_requests_total{namespace=\"$namespace\",code!~\"2..\"}[1m]))",
              "hide": false,
              "interval": "",
              "legendFormat": "errors",
              "refId": "B"
            }
          ],
          "title": "Kubernetes API Requests",
          "type": "timeseries"
        },
        {
          "collapsed": false,
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 13
          },
          "id": 15,
          "panels": [],
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "refId": "A"
            }
          ],
          "title": "Resource Usage",
          "type": "row"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "s"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 11,
            "w": 12,
            "x": 0,
            "y": 14
          },
          "id": 11,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "rate(process_cpu_seconds_total{namespace=\"$namespace\",pod=~\".*-controller-.*\"}[1m])",
              "interval": "",
              "legendFormat": "{{pod}}",
              "refId": "A"
            }
          ],
          "title": "CPU Usage",
          "type": "timeseries"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "bytes"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 11,
            "w": 12,
            "x": 12,
            "y": 14
          },
          "id": 13,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(container_memory_working_set_bytes{namespace=\"$namespace\",pod=~\".*-controller-.*\"}) by (pod)",
              "hide": false,
              "interval": "",
              "legendFormat": "{{pod}}",
              "refId": "A"
            }
          ],
          "title": "Memory Usage",
          "type": "timeseries"
        },
        {
          "collapsed": false,
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 25
          },
          "id": 17,
          "panels": [],
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "refId": "A"
            }
          ],
          "title": "Reconciliation Stats",
          "type": "row"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "s"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 26
          },
          "id": 27,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "workqueue_longest_running_processor_seconds{name=\"kustomization\"}",
              "hide": false,
              "interval": "",
              "legendFormat": "kustomizations",
              "refId": "B"
            }
          ],
          "title": "Cluster Reconciliation Duration",
          "type": "timeseries"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "bars",
                "fillOpacity": 100,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "stepAfter",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "opm"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 34
          },
          "id": 2,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"kustomization\",result!=\"error\"}[1m])) by (controller)",
              "format": "time_series",
              "interval": "",
              "legendFormat": "successful reconciliations ",
              "refId": "A"
            },
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"kustomization\",result=\"error\"}[1m])) by (controller)",
              "format": "time_series",
              "interval": "",
              "legendFormat": "failed reconciliations ",
              "refId": "B"
            }
          ],
          "title": "Cluster Reconciliations ops/min",
          "type": "timeseries"
        },
        {
          "collapsed": false,
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 42
          },
          "id": 29,
          "panels": [],
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "refId": "A"
            }
          ],
          "title": "Sources Stats",
          "type": "row"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "bars",
                "fillOpacity": 100,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "stepAfter",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "opm"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 43
          },
          "id": 4,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"gitrepository\",result!=\"error\"}[1m]))",
              "format": "time_series",
              "interval": "",
              "legendFormat": "successful git pulls",
              "refId": "A"
            },
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"gitrepository\",result=\"error\"}[1m]))",
              "format": "time_series",
              "interval": "",
              "legendFormat": "failed git pulls",
              "refId": "B"
            }
          ],
          "title": "Git Repos ops/min",
          "type": "timeseries"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "bars",
                "fillOpacity": 100,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "stepAfter",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "opm"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 43
          },
          "id": 30,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"ocirepository\",result!=\"error\"}[1m]))",
              "format": "time_series",
              "interval": "",
              "legendFormat": "successful oci pulls",
              "refId": "A"
            },
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"ocirepository\",result=\"error\"}[1m]))",
              "format": "time_series",
              "interval": "",
              "legendFormat": "failed oci pulls",
              "refId": "B"
            }
          ],
          "title": "OCI Repos ops/min",
          "type": "timeseries"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "bars",
                "fillOpacity": 100,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "stepAfter",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "opm"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 52
          },
          "id": 31,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"helmrepository\",result!=\"error\"}[1m]))",
              "format": "time_series",
              "interval": "",
              "legendFormat": "successful helm pulls",
              "refId": "A"
            },
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"helmrepository\",result=\"error\"}[1m]))",
              "format": "time_series",
              "interval": "",
              "legendFormat": "failed helm pulls",
              "refId": "B"
            }
          ],
          "title": "Helm Repos ops/min",
          "type": "timeseries"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "bars",
                "fillOpacity": 100,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "stepAfter",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "opm"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 52
          },
          "id": 32,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"bucket\",result!=\"error\"}[1m]))",
              "format": "time_series",
              "interval": "",
              "legendFormat": "successful bucket pulls",
              "refId": "A"
            },
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"bucket\",result=\"error\"}[1m]))",
              "format": "time_series",
              "interval": "",
              "legendFormat": "failed bucket pulls",
              "refId": "B"
            }
          ],
          "title": "Buckets ops/min",
          "type": "timeseries"
        },
        {
          "collapsed": false,
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 61
          },
          "id": 19,
          "panels": [],
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "refId": "A"
            }
          ],
          "title": "Helm Stats",
          "type": "row"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "s"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 62
          },
          "id": 9,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "lastNotNull"
              ],
              "displayMode": "list",
              "placement": "right",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "histogram_quantile(0.50, sum(rate(controller_runtime_reconcile_time_seconds_bucket{controller=\"helmrelease\"}[5m])) by (le))",
              "hide": true,
              "interval": "",
              "legendFormat": "P50",
              "refId": "A"
            },
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "histogram_quantile(0.90, sum(rate(controller_runtime_reconcile_time_seconds_bucket{controller=\"helmrelease\"}[5m])) by (le))",
              "hide": true,
              "interval": "",
              "legendFormat": "P90",
              "refId": "B"
            },
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "histogram_quantile(0.99, sum(rate(controller_runtime_reconcile_time_seconds_bucket{controller=\"helmrelease\"}[5m])) by (le))",
              "hide": false,
              "interval": "",
              "legendFormat": "P99",
              "refId": "C"
            }
          ],
          "title": "Helm Release Duration",
          "type": "timeseries"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "bars",
                "fillOpacity": 100,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "stepAfter",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "opm"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 70
          },
          "id": 5,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"helmrelease\",result!=\"error\"}[1m])) by (controller)",
              "format": "time_series",
              "interval": "",
              "legendFormat": "successful reconciliations ",
              "refId": "A"
            },
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"helmrelease\",result=\"error\"}[1m])) by (controller)",
              "format": "time_series",
              "interval": "",
              "legendFormat": "failed reconciliations ",
              "refId": "B"
            }
          ],
          "title": "Helm Releases ops/min",
          "type": "timeseries"
        },
        {
          "datasource": {
            "uid": "${DS_PROMETHEUS}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "bars",
                "fillOpacity": 100,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "stepAfter",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "opm"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 70
          },
          "id": 6,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "lastNotNull"
              ],
              "displayMode": "table",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "10.0.3",
          "targets": [
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"helmchart\",result!=\"error\"}[1m])) by (controller)",
              "format": "time_series",
              "interval": "",
              "legendFormat": "successful chart pulls",
              "refId": "A"
            },
            {
              "datasource": {
                "uid": "${DS_PROMETHEUS}"
              },
              "expr": "sum(increase(controller_runtime_reconcile_total{controller=\"helmchart\",result=\"error\"}[1m])) by (controller)",
              "format": "time_series",
              "interval": "",
              "legendFormat": "failed chart pulls",
              "refId": "B"
            }
          ],
          "title": "Helm Charts ops/min",
          "type": "timeseries"
        }
      ],
      "refresh": "10s",
      "schemaVersion": 38,
      "style": "light",
      "tags": [
        "flux"
      ],
      "templating": {
        "list": [
          {
            "current": {
              "selected": false,
              "text": "Prometheus",
              "value": "Prometheus"
            },
            "hide": 2,
            "includeAll": false,
            "multi": false,
            "name": "DS_PROMETHEUS",
            "options": [],
            "query": "prometheus",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "type": "datasource"
          },
          {
            "current": {
              "selected": false,
              "text": "flux-system",
              "value": "flux-system"
            },
            "datasource": {
              "type": "prometheus",
              "uid": "${DS_PROMETHEUS}"
            },
            "definition": "workqueue_work_duration_seconds_count",
            "hide": 0,
            "includeAll": false,
            "multi": false,
            "name": "namespace",
            "options": [],
            "query": {
              "query": "workqueue_work_duration_seconds_count",
              "refId": "Prometheus-namespace-Variable-Query"
            },
            "refresh": 2,
            "regex": "/.*namespace=\"([^\"]*).*/",
            "skipUrlSync": false,
            "sort": 0,
            "tagValuesQuery": "",
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          }
        ]
      },
      "time": {
        "from": "now-15m",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "10s",
          "30s",
          "1m",
          "5m",
          "15m",
          "30m",
          "1h",
          "2h",
          "1d"
        ]
      },
      "timezone": "",
      "title": "Flux Control Plane",
      "uid": "flux-control-plane",
      "version": 2,
      "weekStart": ""
    }
    
  flux-logs-dashboard.json: |
    
    {
      "__inputs": [
        {
          "name": "DS_LOKI",
          "label": "Loki",
          "description": "",
          "type": "datasource",
          "pluginId": "loki",
          "pluginName": "Loki"
        }
      ],
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [],
              "type": "dashboard"
            },
            "type": "dashboard"
          },
          {
            "datasource": {
              "type": "datasource",
              "uid": "grafana"
            },
            "enable": true,
            "iconColor": "red",
            "name": "flux events",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [
                "flux"
              ],
              "type": "tags"
            }
          }
        ]
      },
      "description": "Flux logs collected from Kubernetes, stored in Loki",
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "id": 29,
      "iteration": 1653748775696,
      "links": [],
      "liveNow": false,
      "panels": [
        {
          "datasource": "${DS_LOKI}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "bars",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 4,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "hidden",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": "${DS_LOKI}",
              "expr": "sum(count_over_time({namespace=~\"$namespace\", stream=~\"$stream\", app =~\"$controller\"} | json | __error__!=\"JSONParserErr\" | level=~\"$level\" |= \"$query\" [$__interval]))",
              "instant": false,
              "legendFormat": "Log count",
              "range": true,
              "refId": "A"
            }
          ],
          "type": "timeseries"
        },
        {
          "datasource": "${DS_LOKI}",
          "description": "Logs from services running in Kubernetes",
          "gridPos": {
            "h": 25,
            "w": 24,
            "x": 0,
            "y": 4
          },
          "id": 2,
          "options": {
            "dedupStrategy": "numbers",
            "enableLogDetails": false,
            "prettifyLogMessage": true,
            "showCommonLabels": false,
            "showLabels": false,
            "showTime": false,
            "sortOrder": "Descending",
            "wrapLogMessage": false
          },
          "targets": [
            {
              "datasource": "${DS_LOKI}",
              "expr": "{namespace=~\"$namespace\", stream=~\"$stream\", app =~\"$controller\"} | json | __error__!=\"JSONParserErr\" | level=~\"$level\" |= \"$query\"",
              "refId": "A"
            }
          ],
          "type": "logs"
        }
      ],
      "refresh": "10s",
      "schemaVersion": 36,
      "style": "light",
      "tags": [
        "flux"
      ],
      "templating": {
        "list": [
          {
            "current": {
              "selected": false,
              "text": "",
              "value": ""
            },
            "description": "String to search for",
            "hide": 0,
            "label": "Search Query",
            "name": "query",
            "options": [
              {
                "selected": true,
                "text": "",
                "value": ""
              }
            ],
            "query": "",
            "skipUrlSync": false,
            "type": "textbox"
          },
          {
            "allValue": "info|error",
            "current": {
              "selected": false,
              "text": "All",
              "value": "$__all"
            },
            "hide": 0,
            "includeAll": true,
            "multi": false,
            "name": "level",
            "options": [
              {
                "selected": true,
                "text": "All",
                "value": "$__all"
              },
              {
                "selected": false,
                "text": "info",
                "value": "info"
              },
              {
                "selected": false,
                "text": "error",
                "value": "error"
              }
            ],
            "query": "info,error",
            "queryValue": "",
            "skipUrlSync": false,
            "type": "custom"
          },
          {
            "allValue": ".+",
            "current": {
              "selected": true,
              "text": [
                "All"
              ],
              "value": [
                "$__all"
              ]
            },
            "datasource": "${DS_LOKI}",
            "definition": "label_values(app)",
            "hide": 0,
            "includeAll": true,
            "multi": true,
            "name": "controller",
            "options": [],
            "query": "label_values(app)",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "type": "query"
          },
          {
            "allValue": ".+",
            "current": {
              "selected": true,
              "text": [
                "flux-system"
              ],
              "value": [
                "flux-system"
              ]
            },
            "datasource": "${DS_LOKI}",
            "definition": "label_values(namespace)",
            "hide": 0,
            "includeAll": true,
            "multi": true,
            "name": "namespace",
            "options": [],
            "query": "label_values(namespace)",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "type": "query"
          },
          {
            "allValue": ".+",
            "current": {
              "selected": false,
              "text": "All",
              "value": "$__all"
            },
            "datasource": "${DS_LOKI}",
            "definition": "label_values(stream)",
            "hide": 0,
            "includeAll": true,
            "multi": true,
            "name": "stream",
            "options": [],
            "query": "label_values(stream)",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "type": "query"
          },
          {
            "current": {
              "selected": false,
              "text": "Loki",
              "value": "Loki"
            },
            "hide": 0,
            "includeAll": false,
            "label": "Datasource",
            "multi": false,
            "name": "DS_LOKI",
            "options": [],
            "query": "loki",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "type": "datasource"
          }
        ]
      },
      "time": {
        "from": "now-6h",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "Flux Logs",
      "uid": "flux-logs",
      "version": 2
    }
---
# Source: bigbang/templates/grafana/flux/alert.yaml
apiVersion: notification.toolkit.fluxcd.io/v1beta3
kind: Alert
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
spec:
  providerRef:
    name: grafana
  eventSeverity: info
  eventSources:
    - kind: GitRepository
      name: '*'
      namespace: bigbang
---
# Source: bigbang/templates/alloy/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: alloy
  namespace: default
  labels:
    app.kubernetes.io/name: alloy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
spec:
  interval: 2m
  url: https://repo1.dso.mil/big-bang/product/packages/alloy.git
  ref:
    tag: 3.2.1-bb.1
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/authservice/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: authservice
  namespace: default
  labels:
    app.kubernetes.io/name: authservice
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
spec:
  interval: 2m
  url: https://repo1.dso.mil/big-bang/product/packages/authservice.git
  ref:
    tag: 1.0.4-bb.3
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/bbctl/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: bbctl
  namespace: default
  labels:
    app.kubernetes.io/name: bbctl
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
spec:
  interval: 2m
  url: https://repo1.dso.mil/big-bang/product/packages/bbctl.git
  ref:
    tag: 2.1.0-bb.1
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/grafana/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: grafana
  namespace: default
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
spec:
  interval: 2m
  url: https://repo1.dso.mil/big-bang/product/packages/grafana.git
  ref:
    tag: 9.3.1-bb.0
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/istio-crds/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: istio-crds
  namespace: default
  labels:
    app.kubernetes.io/name: istio-crds
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
spec:
  interval: 2m
  url: https://repo1.dso.mil/big-bang/product/packages/istio-crds.git
  ref:
    tag: 1.26.3-bb.0
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/istio-gateway/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: istio-gateway
  namespace: default
  labels:
    app.kubernetes.io/name: istio-gateway
    app.kubernetes.io/component: core
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
spec:
  interval: 2m
  url: https://repo1.dso.mil/big-bang/product/packages/istio-gateway.git
  ref:
    tag: 1.26.3-bb.0
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/istiod/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: istiod
  namespace: default
  labels:
    app.kubernetes.io/name: istiod
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
spec:
  interval: 2m
  url: https://repo1.dso.mil/big-bang/product/packages/istiod.git
  ref:
    tag: 1.26.3-bb.1
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/kiali/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: kiali
  namespace: default
  labels:
    app.kubernetes.io/name: kiali
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
spec:
  interval: 2m
  url: https://repo1.dso.mil/big-bang/product/packages/kiali.git
  ref:
    tag: 2.13.0-bb.1
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/kyverno-policies/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: kyverno-policies
  namespace: default
  labels:
    app.kubernetes.io/name: kyverno-policies
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
spec:
  interval: 2m
  url: https://repo1.dso.mil/big-bang/product/packages/kyverno-policies.git
  ref:
    tag: 3.3.4-bb.10
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/kyverno-reporter/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: kyverno-reporter
  namespace: default
  labels:
    app.kubernetes.io/name: kyverno-reporter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
spec:
  interval: 2m
  url: https://repo1.dso.mil/big-bang/product/packages/kyverno-reporter.git
  ref:
    tag: 3.3.2-bb.1
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/kyverno/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: kyverno
  namespace: default
  labels:
    app.kubernetes.io/name: kyverno
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
spec:
  interval: 2m
  url: https://repo1.dso.mil/big-bang/product/packages/kyverno.git
  ref:
    tag: 3.4.4-bb.2
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/loki/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: loki
  namespace: default
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
spec:
  interval: 2m
  url: https://repo1.dso.mil/big-bang/product/packages/loki.git
  ref:
    tag: 6.30.1-bb.4
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/metrics-server/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: metrics-server
  namespace: default
  labels:
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/component: "cluster-utilities"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
spec:
  interval: 2m
  url: https://repo1.dso.mil/big-bang/product/packages/metrics-server.git
  ref:
    tag: 3.12.2-bb.5
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/monitoring/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: monitoring
  namespace: default
  labels:
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
spec:
  interval: 2m
  url: https://repo1.dso.mil/big-bang/product/packages/monitoring.git
  ref:
    branch: "monitoring-301/passthrough-conversion"
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/prometheus-operator-crds/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: prometheus-operator-crds
  namespace: default
  labels:
    app.kubernetes.io/name: prometheus-operator-crds
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
spec:
  interval: 2m
  url: https://repo1.dso.mil/big-bang/product/packages/prometheus-operator-crds.git
  ref:
    tag: 22.0.1-bb.0
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/tempo/gitrepository.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: tempo
  namespace: default
  labels:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
spec:
  interval: 2m
  url: https://repo1.dso.mil/big-bang/product/packages/tempo.git
  ref:
    tag: 1.21.1-bb.2
  ignore: |
    # exclude file extensions
    /**/*.md
    /**/*.txt
    /**/*.sh
    !/chart/tests/scripts/*.sh
    !/chart/wait/*.sh
---
# Source: bigbang/templates/alloy/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: alloy
  namespace: default
  labels:
    app.kubernetes.io/name: alloy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
  annotations:
    checksum/bigbang-values: eaf47d477473dc7900d781f159a6e1893bc15a771aab9bd5ee6d8b4821fe26f3
spec:
  targetNamespace: alloy
  releaseName: alloy
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: alloy
        namespace: default
      interval: 5m
  driftDetection:
    ignore:
    - paths:
      - ""
      target:
        kind: Job
    - paths:
      - ""
      target:
        kind: StatefulSet
    mode: disabled
  install:
    remediation:
      retries: -1
  interval: 2m
  rollback:
    cleanupOnFail: true
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: true
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: release-name-alloy-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-alloy-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-alloy-values
      kind: Secret
      valuesKey: "overlays"
  dependsOn:
    - name: istiod
      namespace: default
    - name: kyverno-policies
      namespace: default
    - name: monitoring
      namespace: default
    - name: loki
      namespace: default
---
# Source: bigbang/templates/authservice/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authservice
  namespace: default
  labels:
    app.kubernetes.io/name: authservice
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
  annotations:
    checksum/bigbang-values: d65f38c97523fabcad658eba23445778ef58c38b9e8a0432c2d1f3a3f8a1763a
spec:
  targetNamespace: authservice
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: authservice
        namespace: default
      interval: 5m
  driftDetection:
    ignore:
    - paths:
      - ""
      target:
        kind: Job
    - paths:
      - ""
      target:
        kind: StatefulSet
    mode: disabled
  install:
    remediation:
      retries: -1
  interval: 2m
  rollback:
    cleanupOnFail: true
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: true
    remediation:
      remediateLastFailure: true
      retries: 3

  valuesFrom:
    - name: release-name-authservice-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-authservice-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-authservice-values
      kind: Secret
      valuesKey: "overlays"

  dependsOn:
  - name: istiod
    namespace: default
  - name: monitoring
    namespace: default
---
# Source: bigbang/templates/bbctl/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: bbctl
  namespace: default
  labels:
    app.kubernetes.io/name: bbctl
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
  annotations:
    checksum/bigbang-values: d55a2fc39b1308365724c51c0197086cb6be14ee3db17629271b65099a5122a0
spec:
  targetNamespace: bbctl
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: bbctl
        namespace: default
      interval: 5m
  driftDetection:
    ignore:
    - paths:
      - ""
      target:
        kind: Job
    - paths:
      - ""
      target:
        kind: StatefulSet
    mode: disabled
  install:
    remediation:
      retries: -1
  interval: 2m
  rollback:
    cleanupOnFail: true
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: true
    remediation:
      remediateLastFailure: true
      retries: 3

  valuesFrom:
    - name: release-name-bbctl-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-bbctl-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-bbctl-values
      kind: Secret
      valuesKey: "overlays"
  dependsOn:
    - name: loki
      namespace: default
    - name: alloy
      namespace: default
    - name: monitoring
      namespace: default
    - name: grafana
      namespace: default
---
# Source: bigbang/templates/grafana/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
  namespace: default
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
  annotations:
    checksum/bigbang-values: 54d77710ad71174917a524c819bd9a4960eeecf3bba854ec32bf8b7a23a60647
spec:
  targetNamespace: monitoring
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: grafana
        namespace: default
      interval: 5m
  driftDetection:
    ignore:
    - paths:
      - ""
      target:
        kind: Job
    - paths:
      - ""
      target:
        kind: StatefulSet
    mode: disabled
  install:
    remediation:
      retries: -1
  interval: 2m
  rollback:
    cleanupOnFail: true
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: true
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: release-name-grafana-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-grafana-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-grafana-values
      kind: Secret
      valuesKey: "overlays"
  dependsOn:
    - name: istiod
      namespace: default
    - name: kyverno-policies
      namespace: default
    - name: monitoring
      namespace: default
---
# Source: bigbang/templates/istio-crds/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: istio-crds
  namespace: default
  labels:
    app.kubernetes.io/name: istio-crds
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
  annotations:
    checksum/bigbang-values: bcd14099a8f472a7015bb9d69c447e039a72cbc5ea4c74988498b1ef2beef8ec
spec:
  releaseName: istio-crds
  targetNamespace: istio-system
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: istio-crds
        namespace: default
      interval: 5m
  driftDetection:
    ignore:
    - paths:
      - /webhooks/0/failurePolicy
      target:
        kind: ValidatingWebhookConfiguration
        name: istiod-default-validator
    - paths:
      - ""
      target:
        kind: Job
    - paths:
      - ""
      target:
        kind: StatefulSet
    mode: warn
  install:
    remediation:
      retries: -1
  interval: 2m
  rollback:
    cleanupOnFail: true
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: true
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: release-name-istio-crds-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-istio-crds-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-istio-crds-values
      kind: Secret
      valuesKey: "overlays"
  dependsOn:
    - name: kyverno-policies
      namespace: default
---
# Source: bigbang/templates/istio-gateway/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: passthrough-ingressgateway
  namespace: default
  labels:
    app.kubernetes.io/name: istio-gateway-passthrough
    app.kubernetes.io/component: core
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
  annotations:
    checksum/bigbang-values: 723987cc105d7d0298400fc1fc14105ce56988c8ea533a23b04b95ba361962a3
spec:
  releaseName: passthrough-ingressgateway
  targetNamespace: istio-gateway
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: istio-gateway
        namespace: default
      interval: 5m
  driftDetection:
    ignore:
    - paths:
      - ""
      target:
        kind: PeerAuthentication
        namespace: istio-gateway
    - paths:
      - ""
      target:
        kind: AuthorizationPolicy
        namespace: istio-gateway
    - paths:
      - ""
      target:
        kind: NetworkPolicy
        namespace: istio-gateway
    mode: disabled
  install:
    remediation:
      retries: -1
  interval: 2m
  rollback:
    cleanupOnFail: true
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: true
    remediation:
      remediateLastFailure: true
      retries: 3
  
  valuesFrom:
    - name: release-name-istio-passthrough-gateway-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-istio-passthrough-gateway-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-istio-passthrough-gateway-values
      kind: Secret
      valuesKey: "overlays"

  dependsOn:
    - name: istiod
      namespace: default
    - name: kyverno-policies
      namespace: default
status: {}
---
# Source: bigbang/templates/istio-gateway/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: public-ingressgateway
  namespace: default
  labels:
    app.kubernetes.io/name: istio-gateway-public
    app.kubernetes.io/component: core
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
  annotations:
    checksum/bigbang-values: 723987cc105d7d0298400fc1fc14105ce56988c8ea533a23b04b95ba361962a3
spec:
  releaseName: public-ingressgateway
  targetNamespace: istio-gateway
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: istio-gateway
        namespace: default
      interval: 5m
  driftDetection:
    ignore:
    - paths:
      - ""
      target:
        kind: PeerAuthentication
        namespace: istio-gateway
    - paths:
      - ""
      target:
        kind: AuthorizationPolicy
        namespace: istio-gateway
    - paths:
      - ""
      target:
        kind: NetworkPolicy
        namespace: istio-gateway
    mode: disabled
  install:
    remediation:
      retries: -1
  interval: 2m
  rollback:
    cleanupOnFail: true
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: true
    remediation:
      remediateLastFailure: true
      retries: 3
  
  valuesFrom:
    - name: release-name-istio-public-gateway-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-istio-public-gateway-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-istio-public-gateway-values
      kind: Secret
      valuesKey: "overlays"

  dependsOn:
    - name: istiod
      namespace: default
    - name: kyverno-policies
      namespace: default
status: {}
---
# Source: bigbang/templates/istiod/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: istiod
  namespace: default
  labels:
    app.kubernetes.io/name: istiod
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
  annotations:
    checksum/bigbang-values: 4545fffecfe078d4509305eb7fe77ffcc15e9d46cf4fd6db55d8b21b200094d8
spec:
  releaseName: istiod
  targetNamespace: istio-system
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: istiod
        namespace: default
      interval: 5m
  driftDetection:
    ignore:
    - paths:
      - /webhooks/0/failurePolicy
      target:
        kind: ValidatingWebhookConfiguration
        name: istio-validator-istio-system
    - paths:
      - ""
      target:
        kind: Job
    - paths:
      - ""
      target:
        kind: StatefulSet
    mode: warn
  install:
    remediation:
      retries: -1
  interval: 2m
  rollback:
    cleanupOnFail: true
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: true
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: release-name-istiod-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-istiod-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-istiod-values
      kind: Secret
      valuesKey: "overlays"

  dependsOn:
    - name: istio-crds
      namespace: default
    - name: kyverno-policies
      namespace: default
---
# Source: bigbang/templates/kiali/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kiali
  namespace: default
  labels:
    app.kubernetes.io/name: kiali
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
  annotations:
    checksum/bigbang-values: 1b54f2914f068b6efab5648b4b25fa665391ac96a53342d468e305e99b0408f0
spec:
  targetNamespace: kiali
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: kiali
        namespace: default
      interval: 5m
  driftDetection:
    ignore:
    - paths:
      - ""
      target:
        kind: Kiali
    mode: disabled
  install:
    remediation:
      retries: -1
  interval: 2m
  rollback:
    cleanupOnFail: true
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: true
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: release-name-kiali-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-kiali-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-kiali-values
      kind: Secret
      valuesKey: "overlays"

  
  dependsOn:
    - name: istiod
      namespace: default
    - name: monitoring
      namespace: default
---
# Source: bigbang/templates/kyverno-policies/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kyverno-policies
  namespace: default
  labels:
    app.kubernetes.io/name: kyverno-policies
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
  annotations:
    checksum/bigbang-values: 5ae82e0a702d6473103cdb2a99bf4fb7effc33fe9cd993c1c75f602051d99e1b
spec:
  targetNamespace: kyverno
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: kyverno-policies
        namespace: default
      interval: 5m
  driftDetection:
    ignore:
    - paths:
      - ""
      target:
        kind: ClusterPolicy
    - paths:
      - ""
      target:
        kind: Job
    - paths:
      - ""
      target:
        kind: StatefulSet
    mode: disabled
  install:
    remediation:
      retries: -1
  interval: 2m
  rollback:
    cleanupOnFail: true
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: true
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: release-name-kyverno-policies-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-kyverno-policies-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-kyverno-policies-values
      kind: Secret
      valuesKey: "overlays"
  dependsOn:
    - name: kyverno
      namespace: default
---
# Source: bigbang/templates/kyverno-reporter/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kyverno-reporter
  namespace: default
  labels:
    app.kubernetes.io/name: kyverno-reporter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
  annotations:
    checksum/bigbang-values: 29dd383e40a9d1269e69f34a59ae7e90b1cc026670e510a077a72b7c43e40236
spec:
  targetNamespace: kyverno-reporter
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: kyverno-reporter
        namespace: default
      interval: 5m
  driftDetection:
    ignore:
    - paths:
      - ""
      target:
        kind: Job
    - paths:
      - ""
      target:
        kind: StatefulSet
    mode: disabled
  install:
    remediation:
      retries: -1
  interval: 2m
  rollback:
    cleanupOnFail: true
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: true
    remediation:
      remediateLastFailure: true
      retries: 3

  
  postRenderers:
  
  
      - kustomize:
          patches:
            - target:
                kind: ServiceMonitor
                name: policy-reporter-monitoring
                namespace: kyverno-reporter
              patch: |-
                - op: add
                  path: /spec/endpoints/0/scheme
                  value: https
                - op: add
                  path: /spec/endpoints/0/tlsConfig
                  value:     
                    caFile: /etc/prom-certs/root-cert.pem
                    certFile: /etc/prom-certs/cert-chain.pem
                    keyFile: /etc/prom-certs/key.pem
                    insecureSkipVerify: true
  valuesFrom:
    - name: release-name-kyverno-reporter-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-kyverno-reporter-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-kyverno-reporter-values
      kind: Secret
      valuesKey: "overlays"
  dependsOn:
    - name: kyverno
      namespace: default
    - name: kyverno-policies
      namespace: default
    - name: monitoring
      namespace: default
    - name: istiod
      namespace: default
---
# Source: bigbang/templates/kyverno/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kyverno
  namespace: default
  labels:
    app.kubernetes.io/name: kyverno
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
  annotations:
    checksum/bigbang-values: 184eb1e4aa0a9c147a08111a93278fbb7871ecdf0f68cddc10ed484756c04014
spec:
  targetNamespace: kyverno
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: kyverno
        namespace: default
      interval: 5m
  driftDetection:
    ignore:
    - paths:
      - ""
      target:
        kind: CustomResourceDefinition
    - paths:
      - ""
      target:
        kind: Job
    - paths:
      - ""
      target:
        kind: StatefulSet
    mode: disabled
  install:
    crds: CreateReplace
    remediation:
      retries: -1
  interval: 2m
  rollback:
    cleanupOnFail: true
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: release-name-kyverno-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-kyverno-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-kyverno-values
      kind: Secret
      valuesKey: "overlays"
  dependsOn:
    - name: prometheus-operator-crds
      namespace: default
---
# Source: bigbang/templates/loki/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: loki
  namespace: default
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
  annotations:
    checksum/bigbang-values: 1e22f424263160be76eac53d0bbf1b54a948b12e6d7cf63897140b58aa0e379a
spec:
  releaseName: logging-loki
  targetNamespace: logging
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: loki
        namespace: default
      interval: 5m
  driftDetection:
    ignore:
    - paths:
      - ""
      target:
        kind: Tenant
    - paths:
      - ""
      target:
        kind: Sidecar
    - paths:
      - ""
      target:
        kind: Job
    - paths:
      - ""
      target:
        kind: StatefulSet
    mode: disabled
  install:
    remediation:
      retries: -1
  interval: 2m
  rollback:
    cleanupOnFail: true
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: true
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: release-name-loki-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-loki-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-loki-values
      kind: Secret
      valuesKey: "overlays"
  dependsOn:
    - name: monitoring
      namespace: default
    - name: istiod
      namespace: default
    - name: kyverno-policies
      namespace: default
---
# Source: bigbang/templates/metrics-server/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: metrics-server
  namespace: default
  labels:
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/component: "cluster-utilities"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
  annotations:
    checksum/bigbang-values: 5444aef84f8035bb17146344c9ce64c6089518e10461fc3d4a04bada7475fbb1
spec:
  releaseName: metrics-server
  targetNamespace: metrics-server
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: metrics-server
        namespace: default
      interval: 5m
  driftDetection:
    ignore:
    - paths:
      - ""
      target:
        kind: Job
    - paths:
      - ""
      target:
        kind: StatefulSet
    mode: disabled
  install:
    remediation:
      retries: -1
  interval: 2m
  rollback:
    cleanupOnFail: true
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: true
    remediation:
      remediateLastFailure: true
      retries: 3
  postRenderers:
  
  
  - kustomize:
      patches:
        - patch: |
            - op: add
              path: /automountServiceAccountToken
              value: true
          target:
            kind: ServiceAccount
            name: metrics-server
        - patch: |
            - op: add
              path: /spec/template/spec/automountServiceAccountToken
              value: true
          target:
            kind: Deployment
            name: metrics-server
  

  valuesFrom:
    - name: release-name-metrics-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-metrics-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-metrics-values
      kind: Secret
      valuesKey: "overlays"
  dependsOn:
    - name: istiod
      namespace: default
    - name: monitoring
      namespace: default
---
# Source: bigbang/templates/monitoring/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: monitoring
  namespace: default
  labels:
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
  annotations:
    checksum/bigbang-values: 62384a77bf322e2630badc1e3db6caa313064b4d65349a51bc031f091b16d996
spec:
  targetNamespace: monitoring
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: monitoring
        namespace: default
      interval: 5m
  driftDetection:
    ignore:
    - paths:
      - ""
      target:
        kind: Alertmanager
    - paths:
      - ""
      target:
        kind: Prometheus
    - paths:
      - ""
      target:
        kind: PrometheusRule
    - paths:
      - ""
      target:
        kind: Job
    - paths:
      - ""
      target:
        kind: StatefulSet
    mode: disabled
  install:
    crds: CreateReplace
    remediation:
      retries: -1
  interval: 2m
  rollback:
    cleanupOnFail: true
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      remediateLastFailure: true
      retries: 3

  postRenderers:


  - kustomize:
      patches:
        - patch: |
            - op: replace
              path: /automountServiceAccountToken
              value: true
          target:
            kind: ServiceAccount
            name: monitoring-admission
  valuesFrom:
    - name: release-name-monitoring-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-monitoring-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-monitoring-values
      kind: Secret
      valuesKey: "overlays"

  dependsOn:
    - name: prometheus-operator-crds
      namespace: default
    - name: istiod
      namespace: default
    - name: kyverno-policies
      namespace: default
---
# Source: bigbang/templates/prometheus-operator-crds/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: prometheus-operator-crds
  namespace: default
  labels:
    app.kubernetes.io/name: prometheus-operator-crds
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
  annotations:
    checksum/bigbang-values: 2c92740084b6d73f7b02a4de04c570c60dfb9742cebb1f5dd78eb7e3591e306c
spec:
  releaseName: prometheus-operator-crds
  targetNamespace: monitoring
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: prometheus-operator-crds
        namespace: default
      interval: 5m
  driftDetection:
    ignore:
    - paths:
      - ""
      target:
        kind: Job
    - paths:
      - ""
      target:
        kind: StatefulSet
    mode: warn
  install:
    remediation:
      retries: -1
  interval: 2m
  rollback:
    cleanupOnFail: true
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: true
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: release-name-prometheus-operator-crds-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-prometheus-operator-crds-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-prometheus-operator-crds-values
      kind: Secret
      valuesKey: "overlays"
---
# Source: bigbang/templates/tempo/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: tempo
  namespace: default
  labels:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
  annotations:
    checksum/bigbang-values: 454294c65d5cbf8f82e9edfb720f553d3cc190903e2a44dead9b4051bf61bd33
spec:
  targetNamespace: tempo
  chart:
    spec:
      chart: ./chart
      sourceRef:
        kind: GitRepository
        name: tempo
        namespace: default
      interval: 5m
  driftDetection:
    ignore:
    - paths:
      - ""
      target:
        kind: Job
    - paths:
      - ""
      target:
        kind: StatefulSet
    mode: disabled
  install:
    remediation:
      retries: -1
  interval: 2m
  rollback:
    cleanupOnFail: true
    timeout: 10m
  test:
    enable: false
  timeout: 10m
  upgrade:
    cleanupOnFail: true
    remediation:
      remediateLastFailure: true
      retries: 3
  valuesFrom:
    - name: release-name-tempo-values
      kind: Secret
      valuesKey: "common"
    - name: release-name-tempo-values
      kind: Secret
      valuesKey: "defaults"
    - name: release-name-tempo-values
      kind: Secret
      valuesKey: "overlays"
  dependsOn:
    - name: monitoring
      namespace: default
    - name: istiod
      namespace: default
---
# Source: bigbang/templates/grafana/flux/provider.yaml
apiVersion: notification.toolkit.fluxcd.io/v1beta3
kind: Provider
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/component: "core"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "bigbang"
    helm.sh/chart: bigbang-3.4.0
spec:
  type: grafana
  address: "http://monitoring-monitoring-grafana.monitoring/api/annotations"
  secretRef:
    name: grafana-flux-auth
