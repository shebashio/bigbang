{{- $enableFlag := .Values.packages.addons.metricsServerServer.enabled | toString }}
{{- $existingMetricsApi := (.Capabilities.APIVersions.Has "metrics.k8s.io/v1beta1") }}
{{- $existingMetricsHelmRelease := (lookup "helm.toolkit.fluxcd.io/v2" "HelmRelease" "bigbang" "metrics-server") }}
{{- if or ( eq $enableFlag "true") (and (eq $enableFlag "auto") (or (not $existingMetricsApi) $existingMetricsHelmRelease)) }}
{{- include "values-secret" (dict "root" $ "package" .Values.packages.addons.metricsServerServer "name" "metrics" "defaults" (include "bigbang.defaults.metrics-server" .)) }}
{{- end }}

{{- define "bigbang.defaults.metrics-server" -}}
# hostname is deprecated and replaced with domain. But if hostname exists then use it.
{{- $domainName := default .Values.domain .Values.hostname }}
domain: {{ $domainName }}

istio:
  enabled: {{ .Values.packages.core.istio.enabled }}
  hardened:
    enabled: {{ or
      (dig "istio" "hardened" "enabled" false .Values.packages.addons.metricsServerServer.values)
      (dig "hardened" "enabled" false .Values.packages.core.istio.values)
    }}
  injection: {{ ternary "enabled" "disabled" .Values.packages.core.istio.enabled }}


{{- if .Values.packages.core.istio.enabled }}
podAnnotations:
    {{ include "istioAnnotation" . }}
{{- end }}

metrics:
  enabled: {{ .Values.packages.addons.monitoring.enabled }}

serviceMonitor:
  enabled: {{ .Values.packages.addons.monitoring.enabled }}
  dashboards:
    namespace: monitoring

# Default to 2 replicas for HA
replicas: 2

networkPolicies:
  enabled: {{ .Values.networkPolicies.enabled }}
  controlPlaneCidr: {{ .Values.networkPolicies.controlPlaneCidr }}

{{- end }}
