{{- if .Values.packages.addons.twistlock.enabled }}
{{- include "values-secret" (dict "root" $ "package" .Values.packages.addons.twistlock "name" "twistlock" "defaults" (include "bigbang.defaults.twistlock" .)) }}
{{- end }}

{{- define "bigbang.defaults.twistlock" -}}
# hostname is deprecated and replaced with domain. But if hostname exists then use it.
{{- $domainName := default .Values.domain .Values.hostname }}
domain: {{ $domainName }}

openshift: {{ .Values.openshift }}

monitoring:
  enabled: {{ .Values.packages.addons.monitoring.enabled }}
  serviceMonitor:
    enabled: {{ .Values.packages.addons.monitoring.enabled }}
    # conditional passes only for default istio: enabled, mTLS: SCRICT
    {{- if and .Values.packages.core.istio.enabled (eq (dig "istio" "mtls" "mode" "STRICT" .Values.packages.addons.twistlock.values) "STRICT") }}
    scheme: https
    tlsConfig:
      caFile: /etc/prom-certs/root-cert.pem
      certFile: /etc/prom-certs/cert-chain.pem
      keyFile: /etc/prom-certs/key.pem
      insecureSkipVerify: true  # Prometheus does not support Istio security naming, thus skip verifying target pod certificate
    {{- end }}

imagePullSecrets:
- name: private-registry

networkPolicies:
  enabled: {{ .Values.networkPolicies.enabled }}
  istioNamespaceSelector:
  {{ include "istioNamespaceSelector" . | nindent 4 }}
  ingressLabels:
    {{- $gateway := default "public" .Values.packages.addons.twistlock.ingress.gateway }}
    {{- $default := dict "app" (dig "gateways" $gateway "ingressGateway" nil .Values.packages.core.istio) "istio" nil }}
    {{- toYaml (dig "values" "gateways" $gateway "selector" $default .Values.packages.core.istio) | nindent 4 }}
  controlPlaneCidr: {{ .Values.networkPolicies.controlPlaneCidr }}
  nodeCidr: {{ .Values.networkPolicies.nodeCidr }}

istio:
  enabled: {{ include "istioEnabled" . }}
  hardened:
    enabled: {{ or
      (dig "istio" "hardened" "enabled" false .Values.packages.addons.twistlock.values)
      (dig "hardened" "enabled" false .Values.packages.core.istio.values)
    }}
  console:
    gateways:
     - {{ include "istioGatewayNamespace" . }}/{{ default (include "istioPublicGateway" . ) .Values.packages.addons.twistlock.ingress.gateway }}

{{- if .Values.packages.core.istio.enabled }}
annotations:
  {{ include "istioAnnotation" . }}
{{- end }}

console:
  image:
    imagePullPolicy: {{ .Values.imagePullPolicy }}

sso:
  enabled: {{ .Values.packages.addons.twistlock.sso.enabled }}
  client_id: {{ .Values.packages.addons.twistlock.sso.client_id }}
  provider_name: {{ default .Values.sso.name .Values.packages.addons.twistlock.sso.provider_name }}
  provider_type: {{ .Values.packages.addons.twistlock.sso.provider_type }}
  issuer_uri: {{ default (include "sso.url" .) (tpl (default "" .Values.packages.addons.twistlock.sso.issuer_uri) .) }}
  idp_url: {{ default (include "sso.saml.service" .) (tpl (default "" .Values.packages.addons.twistlock.sso.idp_url) .) }}
  {{- $console := first (dig "istio" "console" "hosts" (list (printf "twistlock.%s" $domainName)) .Values.packages.addons.twistlock.values) }}
  console_url: {{ tpl (default (printf "https://%s" $console) .Values.packages.addons.twistlock.sso.console_url) . }}
  groups: {{ .Values.packages.addons.twistlock.sso.groups }}
  cert: {{ default (include "sso.saml.cert.withheaders" .) .Values.packages.addons.twistlock.sso.cert | quote }}
{{- end -}}
