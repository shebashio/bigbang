{{- if or .Values.addons.minioOperator.enabled .Values.addons.minio.enabled }}
{{- include "values-secret" (dict "root" $ "package" .Values.addons.minioOperator "name" "minio-operator" "defaults" (include "bigbang.defaults.minio-operator" .)) }}
{{- end }}

{{- define "bigbang.defaults.minio-operator" -}}
{{- $istioEnabled := eq (include "istioEnabled" .) "true" }}
{{- $istioInjection := and $istioEnabled (eq (dig "istio" "injection" "enabled" .Values.addons.minioOperator) "enabled") }}
{{- $sidecarEnabled := ternary false true (and (hasKey .Values.addons.minioOperator.istio "ambient") .Values.addons.minioOperator.istio.ambient) }}
# hostname is deprecated and replaced with domain. But if hostname exists then use it.
{{- $domainName := default .Values.domain .Values.hostname }}
hostname: {{ $domainName }}
domain: {{ $domainName }}

{{- if and $istioInjection $sidecarEnabled }}
podAnnotations:
  sidecar.istio.io/inject: enabled
  traffic.sidecar.istio.io/includeInboundPorts: "*"
  traffic.sidecar.istio.io/excludeInboundPorts: "9443"
{{- end }}

console:
  imagePullSecrets:
    - name: private-registry

upstream:
  operator:
    image:
      pullPolicy: {{ .Values.imagePullPolicy}}
    imagePullSecrets:
      - name: private-registry
  
    {{- if .Values.monitoring.enabled }}
    env:
      - name: MINIO_OPERATOR_TLS_ENABLE
        value: "on"
      - name: CLUSTER_DOMAIN
        value: "cluster.local"
      - name: WATCHED_NAMESPACE
        value: ""
      - name: PROMETHEUS_NAMESPACE
        value: "monitoring"
    {{- end }}

networkPolicies:
  enabled: {{ .Values.networkPolicies.enabled }}
  controlPlaneCidr: {{ .Values.networkPolicies.controlPlaneCidr }}
  istioNamespaceSelector:
  {{ include "istioNamespaceSelector" . | nindent 4 }}
  ingressLabels:
    {{- include "getGatewaySelector" (dict "pkg" .Values.addons.minio "root" .) | nindent 4 }}
  {{- if .Values.ztunnel.enabled }}
  additionalPolicies:
    - name: ingress-prometheus-ztunnel-traffic
      spec:
        ingress:
        - from:
          - namespaceSelector:
              matchLabels:
                app.kubernetes.io/name: monitoring
            podSelector:
              matchLabels:
                app.kubernetes.io/name: prometheus
          ports:
          - port: 15008
            protocol: TCP
        podSelector:
          matchLabels:
            app.kubernetes.io/name: minioOperator
        policyTypes:
        - Ingress
    - name: egress-minio-ztunnel-traffic
      spec:
        egress:
        - ports:
          - port: 15008
            protocol: TCP
          to:
          - namespaceSelector: {}
        podSelector: {}
        policyTypes:
        - Egress
    - name: ingress-allow-kubelet-probe
      spec:
        ingress:
        - from:
          - ipBlock:
              cidr: 169.254.7.127/32
        podSelector: {}
        policyTypes:
        - Ingress
  {{- end }}

istio:
  enabled: {{ $istioEnabled }}
  hardened:
    enabled: {{ or
      (dig "istio" "hardened" "enabled" false .Values.addons.minioOperator.values)
      (dig "istio" "hardened" "enabled" false .Values.addons.minio.values)
      (dig "hardened" "enabled" false .Values.istiod.values)
    }}
  console:
    gateways:
      - {{ include "getGatewayName" (dict "gateway" .Values.addons.minio.ingress.gateway "root" .)}}

{{- if $istioEnabled }}
annotations:
  {{ include "istioAnnotation" . }}
{{- end }}

monitoring:
  enabled: {{ .Values.monitoring.enabled }}
{{- end -}}

