{{- define "bigbang.istio-gateway-secrets" -}}
{{- $root := . -}}
{{- $enabledGateways := include "enabledGateways" $ | fromYaml }}
{{- $enabledGateways = include "bigbang.istio-gateway.generate-ingress-netpol-specs" (list $ $enabledGateways) | fromYaml }}
{{- range $name, $gw := $enabledGateways }}
---
{{- if and (typeIs "map[string]interface {}" $gw) (hasKey $gw "overlays") }}
  {{ $_ := unset $gw.overlays "gatewayCerts" }}
{{- end }}
{{ include "values-secret" (dict 
  "root" $root 
  "name" (printf "istio-%s-gateway" $name)
  "defaults" ($gw.defaults | toYaml)
  "package" (dict "values" $gw.overlays "disableAutomaticPassthroughValues" true)
) }}
{{- end }}
{{- end }}

{{- define "bigbang.istio-gateway.ingress-netpol-spec" }}
  {{- $ctx := index . 0 }}
  {{- $name := index . 1 }}
  {{- $ports := index . 2 }}
networkPolicies:
  enabled: {{ $ctx.Values.networkPolicies.enabled }}
  ingress:
    {{- if $ctx.Values.networkPolicies.ingress.definitions }}
    definitions:
      {{- $ctx.Values.networkPolicies.ingress.definitions | toYaml | nindent 8 }}
    {{- end }}
    to:
      '{{ $name }}-ingressgateway:{{ $ports | toJson }}':
        from:
          definition:
            load-balancer-subnets: true
  egress:
    {{- if $ctx.Values.networkPolicies.egress.definitions }}
    definitions:
      {{- $ctx.Values.networkPolicies.egress.definitions | toYaml | nindent 8 }}
    {{- end }}
    from:
      '{{ $name }}-ingressgateway':
        to:
          k8s:
            '*': true
{{- end }}

{{- /*
  This helper generates a bb-common compatible netpol spec from the configured
  gateway servers of the individual gateways, then ensures that spec is applied 
  to the default values for each of the gateway releases.
*/}}
{{- define "bigbang.istio-gateway.generate-ingress-netpol-specs" }}
  {{- $ctx := index . 0 }}
  {{- $gateways := index . 1 }}

  {{- $newGateways := dict }}

  {{- range $name, $gateway := $gateways }}
    {{- $newGateway := deepCopy $gateway }}
    {{- $mergedGateway := merge ($newGateway.defaults | default dict) ($newGateway.overlays | default dict) }}
    {{- $ports := list }}
    {{- range $server := $mergedGateway.gateway.servers }}
      {{- $ports = append $ports $server.port.number }}
    {{- end }}

    {{- $newGateway = merge (dict "defaults" (include "bigbang.istio-gateway.ingress-netpol-spec" (list $ctx $name $ports) | fromYaml)) $newGateway }}

    {{- $_ := set $newGateways $name $newGateway }}
  {{- end }}

  {{- $newGateways | toYaml }}
{{- end }}

{{- define "bigbang.defaults.istio-gateway" -}}
gateways:
  public:
    gateway:
      servers:
      - hosts:
        - '*.{{ .Values.domain }}'
        port:
          name: http
          number: 8080
          protocol: HTTP
        tls:
          httpsRedirect: true
      - hosts:
        - '*.{{ .Values.domain }}'
        port:
          name: https
          number: 8443
          protocol: HTTPS
        tls:
          credentialName: public-cert
          mode: SIMPLE

    upstream:
      serviceAccount:
        create: true
        name: public-ingressgateway-ingressgateway-service-account

      imagePullPolicy: {{ .Values.imagePullPolicy }}

      imagePullSecrets:
        - name: private-registry

      labels:
        istio: ingressgateway

  passthrough:
    gateway:
      servers:
      - hosts:
        - '*.{{ .Values.domain }}'
        port:
          name: http
          number: 8080
          protocol: HTTP
        tls:
          httpsRedirect: true
      - hosts:
        - '*.{{ .Values.domain }}'
        port:
          name: https
          number: 8443
          protocol: HTTPS
        tls:
          mode: PASSTHROUGH

    upstream:
      serviceAccount:
        create: true
        name: passthrough-ingressgateway-ingressgateway-service-account

      imagePullPolicy: {{ .Values.imagePullPolicy }}

      imagePullSecrets:
        - name: private-registry

      labels:
        istio: ingressgateway
{{- end }}

{{- if and .Values.istiod.enabled .Values.istioGateway.enabled }}
{{- include "bigbang.istio-gateway-secrets" . }}
{{- end }}
