{{- if .Values.loki.enabled }}
{{- include "values-secret" (dict "root" $ "package" .Values.loki "name" "loki" "defaults" (include "bigbang.defaults.loki" .)) }}
{{- end }}

{{- define "bigbang.defaults.loki" -}}
{{- $istioEnabled := eq (include "istioEnabled" .) "true" }}
{{- $sidecarEnabled := ternary false true (and (hasKey .Values.loki.istio "ambient") .Values.loki.istio.ambient) }}
# hostname is deprecated and replaced with domain. But if hostname exists then use it.
{{- $domainName := default .Values.domain .Values.hostname }}
hostname: {{ $domainName }}
domain: {{ $domainName }}

clusterName: ""

openshift: {{ .Values.openshift }}

istio:
  enabled: {{ $istioEnabled }}
  {{- if or
      (dig "hardened" "enabled" false .Values.istiod.values)
      (dig "istio" "hardened" "enabled" false .Values.monitoring.values)
      (dig "istio" "hardened" "enabled" false .Values.addons.authservice.values)
      (dig "istio" "hardened" "enabled" false .Values.grafana.values)
      (dig "istio" "hardened" "enabled" false .Values.loki.values)
      (dig "istio" "hardened" "enabled" false .Values.eckOperator.values)
      (dig "istio" "hardened" "enabled" false .Values.elasticsearchKibana.values)
  }}
  hardened:
    enabled: true
    {{- if .Values.ztunnel.enabled }}
    customAuthorizationPolicies:
      - name: "allow-loki"
        enabled: true
        spec:
          selector:
            matchLabels:
              app.kubernetes.io/name: logging-loki
          action: ALLOW
          rules:
            - from:
                - source:
                    principals:
                      - cluster.local/ns/logging/sa/logging-loki
    {{- end }}
    monitoring:
      enabled: {{ .Values.monitoring.enabled }}
    fluentbit:
      enabled: {{ .Values.fluentbit.enabled }}
    minioOperator:
      enabled: {{ .Values.addons.minioOperator.enabled }}
    alloy:
      enabled: {{ .Values.alloy.enabled }}
  {{- end }}
  loki:
    enabled: true
    gateways:
      - {{ include "getGatewayName" (dict "gateway" "public" "root" .)}}

imagePullSecrets:
  - name: private-registry

image:
  pullPolicy: {{ .Values.imagePullPolicy }}

networkPolicies:
  enabled: {{ .Values.networkPolicies.enabled }}
  controlPlaneCidr: {{ .Values.networkPolicies.controlPlaneCidr }}
  istioNamespaceSelector:
  {{ include "istioNamespaceSelector" . | nindent 4 }}
  {{- if .Values.ztunnel.enabled }}
  additionalPolicies:
    - name: ingress-alloy-ztunnel-traffic
      spec:
        ingress:
        - from:
          - namespaceSelector:
              matchLabels:
                kubernetes.io/metadata.name: alloy
            podSelector:
              matchLabels:
                app.kubernetes.io/name: alloy
          ports:
          - port: 15008
            protocol: TCP
        podSelector: {}
        policyTypes:
        - Ingress
    - name: ingress-prometheus-ztunnel-traffic
      spec:
        ingress:
        - from:
          - namespaceSelector:
              matchLabels:
                app.kubernetes.io/name: monitoring
            podSelector:
              matchLabels:
                app.kubernetes.io/name: prometheus
          ports:
          - port: 15008
            protocol: TCP
        podSelector: {}
        policyTypes:
        - Ingress
    - name: ingress-minio-operator-ztunnel-traffic
      spec:
        ingress:
        - from:
          - namespaceSelector:
              matchLabels:
                app.kubernetes.io/name: minioOperator
            podSelector:
              matchLabels:
                app.kubernetes.io/name: minio-operator
          ports:
          - port: 15008
            protocol: TCP
        podSelector:
          matchLabels:
            app.kubernetes.io/name: minio
        policyTypes:
        - Ingress
    - name: egress-tempo-ztunnel-traffic
      spec:
        egress:
        - ports:
          - port: 15008
            protocol: TCP
          to:
          - namespaceSelector:
              matchLabels:
                app.kubernetes.io/name: tempo
            podSelector:
              matchLabels:
                app.kubernetes.io/name: tempo
        podSelector: {}
        policyTypes:
        - Egress
    - name: ingress-allow-kubelet-probe
      spec:
        ingress:
        - from:
          - ipBlock:
              cidr: 169.254.7.127/32
        podSelector: {}
        policyTypes:
        - Ingress
  {{- end }}
monitoring:
  enabled: {{ .Values.monitoring.enabled }}
  serviceMonitor:
    enabled: {{ .Values.monitoring.enabled }}
    # conditional passes only for default istio: enabled, mTLS: SCRICT
    {{- if and $istioEnabled $sidecarEnabled (eq (dig "istio" "mtls" "mode" "STRICT" .Values.loki.values) "STRICT") }}
    scheme: https
    tlsConfig:
      caFile: /etc/prom-certs/root-cert.pem
      certFile: /etc/prom-certs/cert-chain.pem
      keyFile: /etc/prom-certs/key.pem
      insecureSkipVerify: true  # Prometheus does not support Istio security naming, thus skip verifying target pod certificate
    {{- end }}
  rules:
    enabled: true
    alerting: true

{{- $disableDefaultFLB := dig "additionalOutputs" "disableDefault" false .Values.fluentbit.values }}
{{- if and .Values.fluentbit.enabled (not $disableDefaultFLB) }}
fluentbit:
  enabled: true
{{- end }}

loki:
  extraMemberlistConfig:
    bind_addr:
      - ${MY_POD_IP}
  storage:
    {{- if (and (eq .Values.loki.strategy "monolith") (not (dig "minio" "enabled" false .Values.loki.values))) }}
    type: "filesystem"
    {{- else }}
    type: "s3"
    bucketNames:
      {{- toYaml .Values.loki.objectStorage.bucketNames | nindent 6 }}
    s3:
      endpoint: {{ .Values.loki.objectStorage.endpoint }}
      region: {{ .Values.loki.objectStorage.region }}
      accessKeyId: {{ .Values.loki.objectStorage.accessKey }}
      secretAccessKey: {{ .Values.loki.objectStorage.accessSecret }}
    {{- end }}
  {{- if (and (eq .Values.loki.strategy "monolith") (not (dig "minio" "enabled" false .Values.loki.values))) }}
  rulerConfig:
    storage:
      type: local
  storage_config:
    boltdb_shipper:
      active_index_directory: /var/loki/boltdb-shipper-active
      cache_location: /var/loki/boltdb-shipper-cache
      cache_ttl: 24h
    filesystem:
      directory: /var/loki/chunks
  {{- end }}
  # The bbctl violations dashboard output can be larger than the default loki line limit of 256KB
  # Setting max_line_size = 0 removes the limit so the data can be ingested properly
  {{- if .Values.bbctl.enabled }}
  limits_config:
    max_line_size: 0
  {{- end }}
  {{- if $istioEnabled }}
  podAnnotations:
    {{ include "istioAnnotation" . }}
  {{- end }}

{{- if (eq .Values.loki.strategy "monolith") }}
deploymentMode: SingleBinary
singleBinary:
  replicas: 1
  extraArgs:
    - -config.expand-env=true
  extraEnv:
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
{{- end }}

{{- if (eq .Values.loki.strategy "scalable") }}
deploymentMode: SimpleScalable
singleBinary:
  replicas: 0
read:
  replicas: 3
  extraArgs:
    - -config.expand-env=true
  extraEnv:
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
write:
  replicas: 3
  extraArgs:
    - -config.expand-env=true
  extraEnv:
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
backend:
  replicas: 3
  extraArgs:
    - -config.expand-env=true
  extraEnv:
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
gateway:
  enabled: true
  extraArgs:
    - -config.expand-env=true
  extraEnv:
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
{{- end }}

# Allows users to deploy distributed mode but calls out that we do not support it
{{- if (eq .Values.loki.strategy "distributed") }}
deploymentMode: Distributed
singleBinary:
  replicas: 0
read:
  replicas: 0
write:
  replicas: 0
backend:
  replicas: 0

gateway:
  enabled: true
  extraArgs:
    - -config.expand-env=true
  extraEnv:
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP

ingester:
  replicas: 3
  extraArgs:
    - -config.expand-env=true
  extraEnv:
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
querier:
  replicas: 3
  maxUnavailable: 2
  extraArgs:
    - -config.expand-env=true
  extraEnv:
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
queryFrontend:
  replicas: 2
  maxUnavailable: 1
  extraArgs:
    - -config.expand-env=true
  extraEnv:
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
queryScheduler:
  replicas: 2
  extraArgs:
    - -config.expand-env=true
  extraEnv:
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
distributor:
  replicas: 3
  maxUnavailable: 2
  extraArgs:
    - -config.expand-env=true
  extraEnv:
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
compactor:
  replicas: 1
  extraArgs:
    - -config.expand-env=true
  extraEnv:
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
indexGateway:
  replicas: 2
  maxUnavailable: 1
  extraArgs:
    - -config.expand-env=true
  extraEnv:
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
bloomPlanner:
  replicas: 0
bloomBuilder:
  replicas: 0
bloomGateway:
  replicas: 0
{{- end -}}

{{- end -}}
